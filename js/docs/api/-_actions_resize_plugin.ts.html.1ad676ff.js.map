{"version":3,"sources":["webpack:///./src/api/-_actions_resize_plugin.ts.html"],"names":["code","module","exports"],"mappings":"6HACA,IAAIA,EAAO,in9BAEXC,EAAOC,QAAUF","file":"js/docs/api/-_actions_resize_plugin.ts.html.1ad676ff.js","sourcesContent":["// Module\nvar code = \"<nav class=\\\"jsdoc-nav\\\">\\n<li class=\\\"nav-link nav-home-link\\\"><a href=\\\"/docs/api/index.html\\\">Home</a></li><li class=\\\"nav-heading\\\">Classes</li><li class=\\\"nav-heading\\\"><span class=\\\"nav-item-type type-class\\\">C</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/DropEvent.html\\\">DropEvent</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/DropEvent.html#reject\\\">reject</a></span></li><li class=\\\"nav-heading\\\"><span class=\\\"nav-item-type type-class\\\">C</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html\\\">Interactable</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#context\\\">context</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#context\\\">context</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#context\\\">context</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#context\\\">context</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#deltaSource\\\">deltaSource</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#deltaSource\\\">deltaSource</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#deltaSource\\\">deltaSource</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#deltaSource\\\">deltaSource</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#draggable\\\">draggable</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#dropCheck\\\">dropCheck</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#dropzone\\\">dropzone</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#fire\\\">fire</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#fire\\\">fire</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#fire\\\">fire</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#fire\\\">fire</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#gesturable\\\">gesturable</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#getRect\\\">getRect</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#getRect\\\">getRect</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#getRect\\\">getRect</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#getRect\\\">getRect</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#off\\\">off</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#off\\\">off</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#off\\\">off</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#off\\\">off</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#on\\\">on</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#on\\\">on</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#on\\\">on</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#on\\\">on</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#origin\\\">origin</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#origin\\\">origin</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#origin\\\">origin</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#origin\\\">origin</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#rectChecker\\\">rectChecker</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#rectChecker\\\">rectChecker</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#rectChecker\\\">rectChecker</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#rectChecker\\\">rectChecker</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#reflow\\\">reflow</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#reflow\\\">reflow</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#reflow\\\">reflow</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#resizable\\\">resizable</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#set\\\">set</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#set\\\">set</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#set\\\">set</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#set\\\">set</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#unset\\\">unset</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#unset\\\">unset</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#unset\\\">unset</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interactable.html#unset\\\">unset</a></span></li><li class=\\\"nav-heading\\\"><span class=\\\"nav-item-type type-class\\\">C</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/InteractEvent_InteractEvent.html\\\">InteractEvent</a></span></li><li class=\\\"nav-heading\\\"><span class=\\\"nav-item-type type-class\\\">C</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/Interaction_Interaction.html\\\">Interaction</a></span></li><li class=\\\"nav-heading\\\"><span class=\\\"nav-item-type type-class\\\">C</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module.exports_module.exports.html\\\">exports</a></span></li><li class=\\\"nav-heading\\\">Modules</li><li class=\\\"nav-heading\\\"><span class=\\\"nav-item-type type-module\\\">M</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html\\\">interact</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.isSet\\\">isSet</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.isSet\\\">isSet</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.isSet\\\">isSet</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.isSet\\\">isSet</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.maxInteractions\\\">maxInteractions</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.maxInteractions\\\">maxInteractions</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.maxInteractions\\\">maxInteractions</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.off\\\">off</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.off\\\">off</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.off\\\">off</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.off\\\">off</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.on\\\">on</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.on\\\">on</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.on\\\">on</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.on\\\">on</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.pointerMoveTolerance\\\">pointerMoveTolerance</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.pointerMoveTolerance\\\">pointerMoveTolerance</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.pointerMoveTolerance\\\">pointerMoveTolerance</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.pointerMoveTolerance\\\">pointerMoveTolerance</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.stop\\\">stop</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.stop\\\">stop</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.stop\\\">stop</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.stop\\\">stop</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.supportsPointerEvent\\\">supportsPointerEvent</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.supportsPointerEvent\\\">supportsPointerEvent</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.supportsPointerEvent\\\">supportsPointerEvent</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.supportsPointerEvent\\\">supportsPointerEvent</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.supportsTouch\\\">supportsTouch</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.supportsTouch\\\">supportsTouch</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.supportsTouch\\\">supportsTouch</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.supportsTouch\\\">supportsTouch</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.use\\\">use</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.use\\\">use</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.use\\\">use</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-interact.html#.use\\\">use</a></span></li><li class=\\\"nav-heading\\\"><span class=\\\"nav-item-type type-module\\\">M</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-modifiers_aspectRatio.html\\\">modifiers/aspectRatio</a></span></li><li class=\\\"nav-heading\\\"><span class=\\\"nav-item-type type-module\\\">M</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/module-modifiers_snapEdges.html\\\">modifiers/snapEdges</a></span></li><li class=\\\"nav-heading\\\"><a href=\\\"/docs/api/global.html\\\">Globals</a></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/global.html#interact\\\">interact</a></span></li><li class=\\\"nav-item\\\"><span class=\\\"nav-item-type type-function\\\">F</span><span class=\\\"nav-item-name\\\"><a href=\\\"/docs/api/global.html#preventDefault\\\">preventDefault</a></span></li>\\n</nav>\\n\\n\\n<h1 class=\\\"page-title\\\">/actions/resize/plugin.ts</h1>\\n\\n\\n\\n\\n\\n\\n    \\n    <section>\\n        <article>\\n            <pre class=\\\"prettyprint source linenums\\\"><code>import { Interaction } from '@interactjs/core/Interaction'\\nimport Scope from '@interactjs/core/scope'\\nimport * as dom from '@interactjs/utils/domUtils'\\nimport extend from '@interactjs/utils/extend'\\nimport is from '@interactjs/utils/is'\\n\\nexport type EdgeName = 'top' | 'left' | 'bottom' | 'right'\\n\\nexport type ResizableMethod = Interact.ActionMethod&lt;Interact.ResizableOptions>\\n\\ndeclare module '@interactjs/core/Interactable' {\\n  interface Interactable {\\n    resizable: ResizableMethod\\n  }\\n}\\n\\ndeclare module '@interactjs/core/Interaction' {\\n  interface Interaction {\\n    resizeAxes: 'x' | 'y' | 'xy'\\n    resizeStartAspectRatio: number\\n  }\\n}\\n\\ndeclare module '@interactjs/core/defaultOptions' {\\n  interface ActionDefaults {\\n    resize: Interact.ResizableOptions\\n  }\\n}\\n\\ndeclare module '@interactjs/core/scope' {\\n  interface ActionMap {\\n    resize?: typeof resize\\n  }\\n}\\n\\nexport interface ResizeEvent&lt;P extends Interact.EventPhase = Interact.EventPhase> extends Interact.InteractEvent&lt;'resize', P> {\\n  deltaRect?: Interact.FullRect\\n  edges?: Interact.ActionProps['edges']\\n}\\n\\nfunction install (scope: Scope) {\\n  const {\\n    actions,\\n    browser,\\n    /** @lends Interactable */\\n    Interactable, // tslint:disable-line no-shadowed-variable\\n    defaults,\\n  } = scope\\n\\n  // Less Precision with touch input\\n\\n  resize.cursors = initCursors(browser)\\n  resize.defaultMargin = browser.supportsTouch || browser.supportsPointerEvent ? 20 : 10\\n\\n  /**\\n   * ```js\\n   * interact(element).resizable({\\n   *   onstart: function (event) {},\\n   *   onmove : function (event) {},\\n   *   onend  : function (event) {},\\n   *\\n   *   edges: {\\n   *     top   : true,       // Use pointer coords to check for resize.\\n   *     left  : false,      // Disable resizing from left edge.\\n   *     bottom: '.resize-s',// Resize if pointer target matches selector\\n   *     right : handleEl    // Resize if pointer target is the given Element\\n   *   },\\n   *\\n   *     // Width and height can be adjusted independently. When `true`, width and\\n   *     // height are adjusted at a 1:1 ratio.\\n   *     square: false,\\n   *\\n   *     // Width and height can be adjusted independently. When `true`, width and\\n   *     // height maintain the aspect ratio they had when resizing started.\\n   *     preserveAspectRatio: false,\\n   *\\n   *   // a value of 'none' will limit the resize rect to a minimum of 0x0\\n   *   // 'negate' will allow the rect to have negative width/height\\n   *   // 'reposition' will keep the width/height positive by swapping\\n   *   // the top and bottom edges and/or swapping the left and right edges\\n   *   invert: 'none' || 'negate' || 'reposition'\\n   *\\n   *   // limit multiple resizes.\\n   *   // See the explanation in the {@link Interactable.draggable} example\\n   *   max: Infinity,\\n   *   maxPerElement: 1,\\n   * })\\n   *\\n   * var isResizeable = interact(element).resizable()\\n   * ```\\n   *\\n   * Gets or sets whether resize actions can be performed on the target\\n   *\\n   * @param {boolean | object} [options] true/false or An object with event\\n   * listeners to be fired on resize events (object makes the Interactable\\n   * resizable)\\n   * @return {boolean | Interactable} A boolean indicating if this can be the\\n   * target of resize elements, or this Interactable\\n   */\\n  Interactable.prototype.resizable = function (this: Interact.Interactable, options: Interact.ResizableOptions | boolean) {\\n    return resizable(this, options, scope)\\n  } as ResizableMethod\\n\\n  actions.map.resize = resize\\n  actions.methodDict.resize = 'resizable'\\n\\n  defaults.actions.resize = resize.defaults\\n}\\n\\nfunction resizeChecker (arg) {\\n  const { interaction, interactable, element, rect, buttons } = arg\\n\\n  if (!rect) { return undefined }\\n\\n  const page = extend({}, interaction.coords.cur.page)\\n  const resizeOptions = interactable.options.resize\\n\\n  if (\\n    !(resizeOptions &amp;&amp; resizeOptions.enabled) ||\\n    // check mouseButton setting if the pointer is down\\n    (interaction.pointerIsDown &amp;&amp;\\n     /mouse|pointer/.test(interaction.pointerType) &amp;&amp;\\n   (buttons &amp; resizeOptions.mouseButtons) === 0)\\n  ) {\\n    return undefined\\n  }\\n\\n  // if using resize.edges\\n  if (is.object(resizeOptions.edges)) {\\n    const resizeEdges = {\\n      left: false,\\n      right: false,\\n      top: false,\\n      bottom: false,\\n    }\\n\\n    for (const edge in resizeEdges) {\\n      resizeEdges[edge] = checkResizeEdge(edge,\\n        resizeOptions.edges[edge],\\n        page,\\n        interaction._latestPointer.eventTarget,\\n        element,\\n        rect,\\n        resizeOptions.margin || resize.defaultMargin)\\n    }\\n\\n    resizeEdges.left = resizeEdges.left &amp;&amp; !resizeEdges.right\\n    resizeEdges.top  = resizeEdges.top  &amp;&amp; !resizeEdges.bottom\\n\\n    if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\\n      arg.action = {\\n        name: 'resize',\\n        edges: resizeEdges,\\n      }\\n    }\\n  }\\n  else {\\n    const right  = resizeOptions.axis !== 'y' &amp;&amp; page.x > (rect.right  - resize.defaultMargin)\\n    const bottom = resizeOptions.axis !== 'x' &amp;&amp; page.y > (rect.bottom - resize.defaultMargin)\\n\\n    if (right || bottom) {\\n      arg.action = {\\n        name: 'resize',\\n        axes: (right ? 'x' : '') + (bottom ? 'y' : ''),\\n      }\\n    }\\n  }\\n\\n  return arg.action ? false : undefined\\n}\\n\\nfunction resizable (interactable: Interact.Interactable, options: Interact.OrBoolean&lt;Interact.ResizableOptions> | boolean, scope: Scope) {\\n  if (is.object(options)) {\\n    interactable.options.resize.enabled = options.enabled !== false\\n    interactable.setPerAction('resize', options)\\n    interactable.setOnEvents('resize', options)\\n\\n    if (is.string(options.axis) &amp;&amp; /^x$|^y$|^xy$/.test(options.axis)) {\\n      interactable.options.resize.axis = options.axis\\n    }\\n    else if (options.axis === null) {\\n      interactable.options.resize.axis = scope.defaults.actions.resize.axis\\n    }\\n\\n    if (is.bool(options.preserveAspectRatio)) {\\n      interactable.options.resize.preserveAspectRatio = options.preserveAspectRatio\\n    }\\n    else if (is.bool(options.square)) {\\n      interactable.options.resize.square = options.square\\n    }\\n\\n    return interactable\\n  }\\n  if (is.bool(options)) {\\n    interactable.options.resize.enabled = options\\n\\n    return interactable\\n  }\\n  return interactable.options.resize\\n}\\n\\nfunction checkResizeEdge (\\n  name: string,\\n  value: any,\\n  page: Interact.Point,\\n  element: Node,\\n  interactableElement: Interact.Element,\\n  rect: Interact.Rect,\\n  margin: number,\\n) {\\n  // false, '', undefined, null\\n  if (!value) { return false }\\n\\n  // true value, use pointer coords and element rect\\n  if (value === true) {\\n    // if dimensions are negative, \\\"switch\\\" edges\\n    const width  = is.number(rect.width) ? rect.width  : rect.right  - rect.left\\n    const height = is.number(rect.height) ? rect.height : rect.bottom - rect.top\\n\\n    // don't use margin greater than half the relevent dimension\\n    margin = Math.min(margin, Math.abs((name === 'left' || name === 'right' ? width : height) / 2))\\n\\n    if (width &lt; 0) {\\n      if      (name === 'left')  { name = 'right' }\\n      else if (name === 'right') { name = 'left'  }\\n    }\\n    if (height &lt; 0) {\\n      if      (name === 'top')    { name = 'bottom' }\\n      else if (name === 'bottom') { name = 'top'    }\\n    }\\n\\n    if (name === 'left') { return page.x &lt; ((width  >= 0 ? rect.left : rect.right) + margin) }\\n    if (name === 'top') { return page.y &lt; ((height >= 0 ? rect.top : rect.bottom) + margin) }\\n\\n    if (name === 'right') { return page.x > ((width  >= 0 ? rect.right : rect.left) - margin) }\\n    if (name === 'bottom') { return page.y > ((height >= 0 ? rect.bottom : rect.top) - margin) }\\n  }\\n\\n  // the remaining checks require an element\\n  if (!is.element(element)) { return false }\\n\\n  return is.element(value)\\n  // the value is an element to use as a resize handle\\n    ? value === element\\n    // otherwise check if element matches value as selector\\n    : dom.matchesUpTo(element, value, interactableElement)\\n}\\n\\nfunction initCursors (browser: typeof import ('@interactjs/utils/browser').default) {\\n  return (browser.isIe9 ? {\\n    x : 'e-resize',\\n    y : 's-resize',\\n    xy: 'se-resize',\\n\\n    top        : 'n-resize',\\n    left       : 'w-resize',\\n    bottom     : 's-resize',\\n    right      : 'e-resize',\\n    topleft    : 'se-resize',\\n    bottomright: 'se-resize',\\n    topright   : 'ne-resize',\\n    bottomleft : 'ne-resize',\\n  } : {\\n    x : 'ew-resize',\\n    y : 'ns-resize',\\n    xy: 'nwse-resize',\\n\\n    top        : 'ns-resize',\\n    left       : 'ew-resize',\\n    bottom     : 'ns-resize',\\n    right      : 'ew-resize',\\n    topleft    : 'nwse-resize',\\n    bottomright: 'nwse-resize',\\n    topright   : 'nesw-resize',\\n    bottomleft : 'nesw-resize',\\n  })\\n}\\n\\nfunction start ({ iEvent, interaction }: { iEvent: Interact.InteractEvent&lt;any, any>, interaction: Interaction }) {\\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) {\\n    return\\n  }\\n\\n  const resizeEvent = iEvent as ResizeEvent\\n  const rect = interaction.rect\\n\\n  interaction._rects = {\\n    start: extend({}, rect),\\n    corrected: extend({}, rect),\\n    previous: extend({}, rect),\\n    delta: {\\n      left: 0,\\n      right : 0,\\n      width : 0,\\n      top : 0,\\n      bottom: 0,\\n      height: 0,\\n    },\\n  }\\n\\n  resizeEvent.edges = interaction.prepared.edges\\n  resizeEvent.rect = interaction._rects.corrected\\n  resizeEvent.deltaRect = interaction._rects.delta\\n}\\n\\nfunction move ({ iEvent, interaction }: { iEvent: Interact.InteractEvent&lt;any, any>, interaction: Interaction }) {\\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) { return }\\n\\n  const resizeEvent = iEvent as ResizeEvent\\n  const resizeOptions = interaction.interactable.options.resize\\n  const invert = resizeOptions.invert\\n  const invertible = invert === 'reposition' || invert === 'negate'\\n\\n  // eslint-disable-next-line no-shadow\\n  const current = interaction.rect\\n  const { start: startRect, corrected, delta: deltaRect, previous } = interaction._rects\\n\\n  extend(previous, corrected)\\n\\n  if (invertible) {\\n    // if invertible, copy the current rect\\n    extend(corrected, current)\\n\\n    if (invert === 'reposition') {\\n      // swap edge values if necessary to keep width/height positive\\n      if (corrected.top > corrected.bottom) {\\n        const swap = corrected.top\\n\\n        corrected.top = corrected.bottom\\n        corrected.bottom = swap\\n      }\\n      if (corrected.left > corrected.right) {\\n        const swap = corrected.left\\n\\n        corrected.left = corrected.right\\n        corrected.right = swap\\n      }\\n    }\\n  }\\n  else {\\n    // if not invertible, restrict to minimum of 0x0 rect\\n    corrected.top    = Math.min(current.top, startRect.bottom)\\n    corrected.bottom = Math.max(current.bottom, startRect.top)\\n    corrected.left   = Math.min(current.left, startRect.right)\\n    corrected.right  = Math.max(current.right, startRect.left)\\n  }\\n\\n  corrected.width  = corrected.right  - corrected.left\\n  corrected.height = corrected.bottom - corrected.top\\n\\n  for (const edge in corrected) {\\n    deltaRect[edge] = corrected[edge] - previous[edge]\\n  }\\n\\n  resizeEvent.edges = interaction.prepared.edges\\n  resizeEvent.rect = corrected\\n  resizeEvent.deltaRect = deltaRect\\n}\\n\\nfunction end ({ iEvent, interaction }: { iEvent: Interact.InteractEvent&lt;any, any>, interaction: Interaction }) {\\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) { return }\\n\\n  const resizeEvent = iEvent as ResizeEvent\\n\\n  resizeEvent.edges = interaction.prepared.edges\\n  resizeEvent.rect = interaction._rects.corrected\\n  resizeEvent.deltaRect = interaction._rects.delta\\n}\\n\\nfunction updateEventAxes ({ iEvent, interaction }: { iEvent: Interact.InteractEvent&lt;any, any>, interaction: Interaction }) {\\n  if (interaction.prepared.name !== 'resize' || !interaction.resizeAxes) { return }\\n\\n  const options = interaction.interactable.options\\n  const resizeEvent = iEvent as ResizeEvent\\n\\n  if (options.resize.square) {\\n    if (interaction.resizeAxes === 'y') {\\n      resizeEvent.delta.x = resizeEvent.delta.y\\n    }\\n    else {\\n      resizeEvent.delta.y = resizeEvent.delta.x\\n    }\\n    resizeEvent.axes = 'xy'\\n  }\\n  else {\\n    resizeEvent.axes = interaction.resizeAxes\\n\\n    if (interaction.resizeAxes === 'x') {\\n      resizeEvent.delta.y = 0\\n    }\\n    else if (interaction.resizeAxes === 'y') {\\n      resizeEvent.delta.x = 0\\n    }\\n  }\\n}\\n\\nconst resize: Interact.Plugin = {\\n  id: 'actions/resize',\\n  before: ['actions/drag'],\\n  install,\\n  listeners: {\\n    'interactions:new': ({ interaction }) => {\\n      interaction.resizeAxes = 'xy'\\n    },\\n\\n    'interactions:action-start': arg => {\\n      start(arg)\\n      updateEventAxes(arg)\\n    },\\n    'interactions:action-move': arg => {\\n      move(arg)\\n      updateEventAxes(arg)\\n    },\\n    'interactions:action-end': end,\\n    'auto-start:check': resizeChecker,\\n  },\\n\\n  defaults: {\\n    square: false,\\n    preserveAspectRatio: false,\\n    axis: 'xy',\\n\\n    // use default margin\\n    margin: NaN,\\n\\n    // object with props left, right, top, bottom which are\\n    // true/false values to resize when the pointer is over that edge,\\n    // CSS selectors to match the handles for each direction\\n    // or the Elements for each handle\\n    edges: null,\\n\\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\\n    // 'negate' will alow the rect to have negative width/height\\n    // 'reposition' will keep the width/height positive by swapping\\n    // the top and bottom edges and/or swapping the left and right edges\\n    invert: 'none',\\n  } as Interact.ResizableOptions,\\n\\n  cursors: null as ReturnType&lt;typeof initCursors>,\\n\\n  getCursor ({ edges, axis, name }: Interact.ActionProps) {\\n    const cursors = resize.cursors\\n    let result: string = null\\n\\n    if (axis) {\\n      result = cursors[name + axis]\\n    }\\n    else if (edges) {\\n      let cursorKey = ''\\n\\n      for (const edge of ['top', 'bottom', 'left', 'right']) {\\n        if (edges[edge]) {\\n          cursorKey += edge\\n        }\\n      }\\n\\n      result = cursors[cursorKey]\\n    }\\n\\n    return result\\n  },\\n\\n  defaultMargin: null as number,\\n}\\n\\nexport default resize\\n</code></pre>\\n        </article>\\n    </section>\\n\\n\\n\\n\\n\";\n// Exports\nmodule.exports = code;"],"sourceRoot":""}