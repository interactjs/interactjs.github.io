(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["docs/api/doclets.json"],{d3ed:function(e){e.exports=JSON.parse('[{"comment":"/**\\n   * Don\'t call listeners on the remaining targets\\n   */","meta":{"range":[396,499],"filename":"BaseEvent.ts","lineno":24,"columnno":2,"path":"core","code":{"id":"astnode100007835","name":"BaseEvent#stopImmediatePropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/core/BaseEvent.ts"},"description":"<p>Don\'t call listeners on the remaining targets</p>","name":"stopImmediatePropagation","longname":"BaseEvent#stopImmediatePropagation","kind":"function","memberof":"BaseEvent","scope":"instance","params":[],"___id":"T000002R000868","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"stopImmediatePropagation","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * Don\'t call listeners on the remaining targets\\n   */","meta":{"range":[396,499],"filename":"BaseEvent.ts","lineno":24,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100023000","name":"BaseEvent#stopImmediatePropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/BaseEvent.ts"},"description":"<p>Don\'t call listeners on the remaining targets</p>","name":"stopImmediatePropagation","longname":"BaseEvent#stopImmediatePropagation","kind":"function","memberof":"BaseEvent","scope":"instance","params":[],"___id":"T000002R002532","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"stopImmediatePropagation","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * Don\'t call listeners on the remaining targets\\n   */","meta":{"range":[396,499],"filename":"BaseEvent.ts","lineno":24,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100038676","name":"BaseEvent#stopImmediatePropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/BaseEvent.ts"},"description":"<p>Don\'t call listeners on the remaining targets</p>","name":"stopImmediatePropagation","longname":"BaseEvent#stopImmediatePropagation","kind":"function","memberof":"BaseEvent","scope":"instance","params":[],"___id":"T000002R004208","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"stopImmediatePropagation","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * Don\'t call listeners on the remaining targets\\n   */","meta":{"range":[396,499],"filename":"BaseEvent.ts","lineno":24,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100069711","name":"BaseEvent#stopImmediatePropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/BaseEvent.ts"},"description":"<p>Don\'t call listeners on the remaining targets</p>","name":"stopImmediatePropagation","longname":"BaseEvent#stopImmediatePropagation","kind":"function","memberof":"BaseEvent","scope":"instance","params":[],"___id":"T000002R007943","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"stopImmediatePropagation","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * Don\'t call any other listeners (even on the current target)\\n   */","meta":{"range":[269,328],"filename":"BaseEvent.ts","lineno":17,"columnno":2,"path":"core","code":{"id":"astnode100007825","name":"BaseEvent#stopPropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/core/BaseEvent.ts"},"description":"<p>Don\'t call any other listeners (even on the current target)</p>","name":"stopPropagation","longname":"BaseEvent#stopPropagation","kind":"function","memberof":"BaseEvent","scope":"instance","params":[],"___id":"T000002R000866","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"stopPropagation","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * Don\'t call any other listeners (even on the current target)\\n   */","meta":{"range":[269,328],"filename":"BaseEvent.ts","lineno":17,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100022990","name":"BaseEvent#stopPropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/BaseEvent.ts"},"description":"<p>Don\'t call any other listeners (even on the current target)</p>","name":"stopPropagation","longname":"BaseEvent#stopPropagation","kind":"function","memberof":"BaseEvent","scope":"instance","params":[],"___id":"T000002R002530","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"stopPropagation","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * Don\'t call any other listeners (even on the current target)\\n   */","meta":{"range":[269,328],"filename":"BaseEvent.ts","lineno":17,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100038666","name":"BaseEvent#stopPropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/BaseEvent.ts"},"description":"<p>Don\'t call any other listeners (even on the current target)</p>","name":"stopPropagation","longname":"BaseEvent#stopPropagation","kind":"function","memberof":"BaseEvent","scope":"instance","params":[],"___id":"T000002R004206","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"stopPropagation","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * Don\'t call any other listeners (even on the current target)\\n   */","meta":{"range":[269,328],"filename":"BaseEvent.ts","lineno":17,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100069701","name":"BaseEvent#stopPropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/BaseEvent.ts"},"description":"<p>Don\'t call any other listeners (even on the current target)</p>","name":"stopPropagation","longname":"BaseEvent#stopPropagation","kind":"function","memberof":"BaseEvent","scope":"instance","params":[],"___id":"T000002R007941","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"stopPropagation","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * Class of events fired on dropzones during drags with acceptable targets.\\n   */","meta":{"range":[297,757],"filename":"DropEvent.ts","lineno":16,"columnno":2,"path":"actions/drop","code":{"id":"astnode100000545","name":"DropEvent","type":"MethodDefinition","paramnames":["dropState","dragEvent","type"]},"vars":{"":null},"shortpath":"/actions/drop/DropEvent.ts"},"description":"<p>Class of events fired on dropzones during drags with acceptable targets.</p>","name":"DropEvent","longname":"DropEvent","kind":"class","scope":"global","params":[],"___id":"T000003R000002","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"DropEvent","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * If this is a `dropactivate` event, the dropzone element will be\\n   * deactivated.\\n   *\\n   * If this is a `dragmove` or `dragenter`, a `dragleave` will be fired on the\\n   * dropzone element and more.\\n   */","meta":{"range":[978,2017],"filename":"DropEvent.ts","lineno":36,"columnno":2,"path":"actions/drop","code":{"id":"astnode100000629","name":"DropEvent#reject","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/actions/drop/DropEvent.ts"},"description":"<p>If this is a <code>dropactivate</code> event, the dropzone element will be\\ndeactivated.</p>\\n<p>If this is a <code>dragmove</code> or <code>dragenter</code>, a <code>dragleave</code> will be fired on the\\ndropzone element and more.</p>","name":"reject","longname":"DropEvent#reject","kind":"function","memberof":"DropEvent","scope":"instance","params":[],"___id":"T000002R000071","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"reject","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":["<a href=\\"/docs/api/DropEvent.html\\">DropEvent</a>#"]},{"comment":"/**\\n     * ```js\\n     * interact(\'#draggable\').draggable(true)\\n     *\\n     * var rectables = interact(\'rect\')\\n     * rectables\\n     *   .gesturable(true)\\n     *   .on(\'gesturemove\', function (event) {\\n     *       // ...\\n     *   })\\n     * ```\\n     *\\n     * The methods of this variable can be used to set elements as interactables\\n     * and also to change various default settings.\\n     *\\n     * Calling it as a function and passing an element or a valid CSS selector\\n     * string returns an Interactable object which has various methods to configure\\n     * it.\\n     *\\n     * @global\\n     *\\n     * @param {Element | string} target The HTML or SVG Element to interact with\\n     * or CSS selector\\n     * @return {Interactable}\\n     */","meta":{"range":[1745,2036],"filename":"InteractStatic.ts","lineno":42,"columnno":10,"path":"core","code":{"id":"astnode100015063","name":"interact","type":"ArrowFunctionExpression"},"vars":{"interactable":"module:interact~interactable","interactable.events.global":"module:interact~interactable.events.global"},"shortpath":"/core/InteractStatic.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(\'#draggable\').draggable(true)\\n\\nvar rectables = interact(\'rect\')\\nrectables\\n  .gesturable(true)\\n  .on(\'gesturemove\', function (event) {\\n      // ...\\n  })\\n</code></pre>\\n<p>The methods of this variable can be used to set elements as interactables\\nand also to change various default settings.</p>\\n<p>Calling it as a function and passing an element or a valid CSS selector\\nstring returns an Interactable object which has various methods to configure\\nit.</p>","scope":"global","params":[{"type":{"names":["Element","string"]},"description":"<p>The HTML or SVG Element to interact with\\nor CSS selector</p>","name":"target"}],"returns":[{"type":{"names":["Interactable"]}}],"name":"interact","longname":"interact","kind":"function","___id":"T000002R001625","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"interact","signature":"<span class=\\"signature\\">(target)</span><span class=\\"type-signature\\"> &rarr; {<a href=\\"/docs/api/Interactable.html\\">Interactable</a>}</span>","ancestors":[]},{"comment":"/**\\n     * ```js\\n     * interact(\'#draggable\').draggable(true)\\n     *\\n     * var rectables = interact(\'rect\')\\n     * rectables\\n     *   .gesturable(true)\\n     *   .on(\'gesturemove\', function (event) {\\n     *       // ...\\n     *   })\\n     * ```\\n     *\\n     * The methods of this variable can be used to set elements as interactables\\n     * and also to change various default settings.\\n     *\\n     * Calling it as a function and passing an element or a valid CSS selector\\n     * string returns an Interactable object which has various methods to configure\\n     * it.\\n     *\\n     * @global\\n     *\\n     * @param {Element | string} target The HTML or SVG Element to interact with\\n     * or CSS selector\\n     * @return {Interactable}\\n     */","meta":{"range":[1745,2036],"filename":"InteractStatic.ts","lineno":42,"columnno":10,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100030228","name":"interact","type":"ArrowFunctionExpression"},"vars":{"interactable":"module:interact~interactable","interactable.events.global":"module:interact~interactable.events.global"},"shortpath":"/interact/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(\'#draggable\').draggable(true)\\n\\nvar rectables = interact(\'rect\')\\nrectables\\n  .gesturable(true)\\n  .on(\'gesturemove\', function (event) {\\n      // ...\\n  })\\n</code></pre>\\n<p>The methods of this variable can be used to set elements as interactables\\nand also to change various default settings.</p>\\n<p>Calling it as a function and passing an element or a valid CSS selector\\nstring returns an Interactable object which has various methods to configure\\nit.</p>","scope":"global","params":[{"type":{"names":["Element","string"]},"description":"<p>The HTML or SVG Element to interact with\\nor CSS selector</p>","name":"target"}],"returns":[{"type":{"names":["Interactable"]}}],"name":"interact","longname":"interact","kind":"function","___id":"T000002R003289","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"interact","signature":"<span class=\\"signature\\">(target)</span><span class=\\"type-signature\\"> &rarr; {<a href=\\"/docs/api/Interactable.html\\">Interactable</a>}</span>","ancestors":[]},{"comment":"/**\\n     * ```js\\n     * interact(\'#draggable\').draggable(true)\\n     *\\n     * var rectables = interact(\'rect\')\\n     * rectables\\n     *   .gesturable(true)\\n     *   .on(\'gesturemove\', function (event) {\\n     *       // ...\\n     *   })\\n     * ```\\n     *\\n     * The methods of this variable can be used to set elements as interactables\\n     * and also to change various default settings.\\n     *\\n     * Calling it as a function and passing an element or a valid CSS selector\\n     * string returns an Interactable object which has various methods to configure\\n     * it.\\n     *\\n     * @global\\n     *\\n     * @param {Element | string} target The HTML or SVG Element to interact with\\n     * or CSS selector\\n     * @return {Interactable}\\n     */","meta":{"range":[1745,2036],"filename":"InteractStatic.ts","lineno":42,"columnno":10,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100045904","name":"interact","type":"ArrowFunctionExpression"},"vars":{"interactable":"module:interact~interactable","interactable.events.global":"module:interact~interactable.events.global"},"shortpath":"/interactjs/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(\'#draggable\').draggable(true)\\n\\nvar rectables = interact(\'rect\')\\nrectables\\n  .gesturable(true)\\n  .on(\'gesturemove\', function (event) {\\n      // ...\\n  })\\n</code></pre>\\n<p>The methods of this variable can be used to set elements as interactables\\nand also to change various default settings.</p>\\n<p>Calling it as a function and passing an element or a valid CSS selector\\nstring returns an Interactable object which has various methods to configure\\nit.</p>","scope":"global","params":[{"type":{"names":["Element","string"]},"description":"<p>The HTML or SVG Element to interact with\\nor CSS selector</p>","name":"target"}],"returns":[{"type":{"names":["Interactable"]}}],"name":"interact","longname":"interact","kind":"function","___id":"T000002R004965","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"interact","signature":"<span class=\\"signature\\">(target)</span><span class=\\"type-signature\\"> &rarr; {<a href=\\"/docs/api/Interactable.html\\">Interactable</a>}</span>","ancestors":[]},{"comment":"/**\\n     * ```js\\n     * interact(\'#draggable\').draggable(true)\\n     *\\n     * var rectables = interact(\'rect\')\\n     * rectables\\n     *   .gesturable(true)\\n     *   .on(\'gesturemove\', function (event) {\\n     *       // ...\\n     *   })\\n     * ```\\n     *\\n     * The methods of this variable can be used to set elements as interactables\\n     * and also to change various default settings.\\n     *\\n     * Calling it as a function and passing an element or a valid CSS selector\\n     * string returns an Interactable object which has various methods to configure\\n     * it.\\n     *\\n     * @global\\n     *\\n     * @param {Element | string} target The HTML or SVG Element to interact with\\n     * or CSS selector\\n     * @return {Interactable}\\n     */","meta":{"range":[1745,2036],"filename":"InteractStatic.ts","lineno":42,"columnno":10,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100076939","name":"interact","type":"ArrowFunctionExpression"},"vars":{"interactable":"module:interact~interactable","interactable.events.global":"module:interact~interactable.events.global"},"shortpath":"/types/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(\'#draggable\').draggable(true)\\n\\nvar rectables = interact(\'rect\')\\nrectables\\n  .gesturable(true)\\n  .on(\'gesturemove\', function (event) {\\n      // ...\\n  })\\n</code></pre>\\n<p>The methods of this variable can be used to set elements as interactables\\nand also to change various default settings.</p>\\n<p>Calling it as a function and passing an element or a valid CSS selector\\nstring returns an Interactable object which has various methods to configure\\nit.</p>","scope":"global","params":[{"type":{"names":["Element","string"]},"description":"<p>The HTML or SVG Element to interact with\\nor CSS selector</p>","name":"target"}],"returns":[{"type":{"names":["Interactable"]}}],"name":"interact","longname":"interact","kind":"function","___id":"T000002R008700","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"interact","signature":"<span class=\\"signature\\">(target)</span><span class=\\"type-signature\\"> &rarr; {<a href=\\"/docs/api/Interactable.html\\">Interactable</a>}</span>","ancestors":[]},{"comment":"/**\\n   * Returns or sets whether the dimensions of dropzone elements are calculated\\n   * on every dragmove or only on dragstart for the default dropChecker\\n   *\\n   * @param {boolean} [newValue] True to check on each move. False to check only\\n   * before start\\n   * @return {boolean | interact} The current setting or interact\\n   */","meta":{"range":[3826,4113],"filename":"plugin.ts","lineno":162,"columnno":2,"path":"actions/drop","code":{"id":"astnode100000944","name":"interact.dynamicDrop","type":"FunctionExpression","paramnames":["newValue"]},"vars":{"scope.dynamicDrop":"scope.dynamicDrop"},"shortpath":"/actions/drop/plugin.ts"},"description":"<p>Returns or sets whether the dimensions of dropzone elements are calculated\\non every dragmove or only on dragstart for the default dropChecker</p>","params":[{"type":{"names":["boolean"]},"optional":true,"description":"<p>True to check on each move. False to check only\\nbefore start</p>","name":"newValue"}],"returns":[{"type":{"names":["boolean","interact"]},"description":"<p>The current setting or interact</p>"}],"name":"dynamicDrop","longname":"interact.dynamicDrop","kind":"function","memberof":"interact","scope":"static","___id":"T000002R000098","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".dynamicDrop","signature":"<span class=\\"signature\\">(newValue<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {boolean|<a href=\\"/docs/api/global.html#interact\\">interact</a>}</span>","ancestors":["<a href=\\"/docs/api/global.html#interact\\">interact</a>."]},{"comment":"/** */","meta":{"range":[735,1085],"filename":"Interactable.ts","lineno":26,"columnno":2,"path":"core","code":{"id":"astnode100009119","name":"exports.Interactable","type":"MethodDefinition","paramnames":["target","options","defaultContext","scopeEvents"]},"shortpath":"/core/Interactable.ts"},"name":"Interactable","longname":"Interactable","kind":"class","memberof":"Interactable","scope":"instance","___id":"T000003R000003","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"Interactable","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/** */","meta":{"range":[735,1085],"filename":"Interactable.ts","lineno":26,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100024284","name":"exports.Interactable","type":"MethodDefinition","paramnames":["target","options","defaultContext","scopeEvents"]},"shortpath":"/interact/node_modules/@interactjs/core/Interactable.ts"},"name":"Interactable","longname":"Interactable","kind":"class","memberof":"Interactable","scope":"instance","___id":"T000003R000004","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"Interactable","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/** */","meta":{"range":[735,1085],"filename":"Interactable.ts","lineno":26,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100039960","name":"exports.Interactable","type":"MethodDefinition","paramnames":["target","options","defaultContext","scopeEvents"]},"shortpath":"/interactjs/node_modules/@interactjs/core/Interactable.ts"},"name":"Interactable","longname":"Interactable","kind":"class","memberof":"Interactable","scope":"instance","___id":"T000003R000005","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"Interactable","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/** */","meta":{"range":[735,1085],"filename":"Interactable.ts","lineno":26,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100070995","name":"exports.Interactable","type":"MethodDefinition","paramnames":["target","options","defaultContext","scopeEvents"]},"shortpath":"/types/node_modules/@interactjs/core/Interactable.ts"},"name":"Interactable","longname":"Interactable","kind":"class","memberof":"Interactable","scope":"instance","___id":"T000003R000006","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"Interactable","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/** @internal */","meta":{"range":[597,693],"filename":"Interactable.ts","lineno":15,"columnno":2,"path":"core","code":{"id":"astnode100009104","name":"Interactable#_defaults","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/core/Interactable.ts"},"tags":[{"originalTitle":"internal","title":"internal","text":""}],"name":"_defaults","longname":"Interactable#_defaults","kind":"member","memberof":"Interactable","scope":"instance","params":[],"___id":"T000002R001001","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"_defaults","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/** @internal */","meta":{"range":[597,693],"filename":"Interactable.ts","lineno":15,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100024269","name":"Interactable#_defaults","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/Interactable.ts"},"tags":[{"originalTitle":"internal","title":"internal","text":""}],"name":"_defaults","longname":"Interactable#_defaults","kind":"member","memberof":"Interactable","scope":"instance","params":[],"___id":"T000002R002665","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"_defaults","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/** @internal */","meta":{"range":[597,693],"filename":"Interactable.ts","lineno":15,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100039945","name":"Interactable#_defaults","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/Interactable.ts"},"tags":[{"originalTitle":"internal","title":"internal","text":""}],"name":"_defaults","longname":"Interactable#_defaults","kind":"member","memberof":"Interactable","scope":"instance","params":[],"___id":"T000002R004341","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"_defaults","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/** @internal */","meta":{"range":[597,693],"filename":"Interactable.ts","lineno":15,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100070980","name":"Interactable#_defaults","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/Interactable.ts"},"tags":[{"originalTitle":"internal","title":"internal","text":""}],"name":"_defaults","longname":"Interactable#_defaults","kind":"member","memberof":"Interactable","scope":"instance","params":[],"___id":"T000002R008076","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"_defaults","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * ```js\\n   * interact(\'.resize-drag\')\\n   *   .resizable(true)\\n   *   .draggable(true)\\n   *   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\\n   *\\n   *   if (interact.matchesSelector(event.target, \'.drag-handle\')) {\\n   *     // force drag with handle target\\n   *     action.name = drag\\n   *   }\\n   *   else {\\n   *     // resize from the top and right edges\\n   *     action.name  = \'resize\'\\n   *     action.edges = { top: true, right: true }\\n   *   }\\n   *\\n   *   return action\\n   * })\\n   * ```\\n   *\\n   * Returns or sets the function used to check action to be performed on\\n   * pointerDown\\n   *\\n   * @param {function | null} [checker] A function which takes a pointer event,\\n   * defaultAction string, interactable, element and interaction as parameters\\n   * and returns an object with name property \'drag\' \'resize\' or \'gesture\' and\\n   * optionally an `edges` object with boolean \'top\', \'left\', \'bottom\' and right\\n   * props.\\n   * @return {Function | Interactable} The checker function or this Interactable\\n   */","meta":{"range":[3739,3791],"filename":"InteractableMethods.ts","lineno":107,"columnno":2,"path":"auto-start","code":{"id":"astnode100007546","name":"Interactable.prototype.actionChecker","type":"Identifier","value":"actionChecker","paramnames":[]},"shortpath":"/auto-start/InteractableMethods.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(\'.resize-drag\')\\n  .resizable(true)\\n  .draggable(true)\\n  .actionChecker(function (pointer, event, action, interactable, element, interaction) {\\n\\n  if (interact.matchesSelector(event.target, \'.drag-handle\')) {\\n    // force drag with handle target\\n    action.name = drag\\n  }\\n  else {\\n    // resize from the top and right edges\\n    action.name  = \'resize\'\\n    action.edges = { top: true, right: true }\\n  }\\n\\n  return action\\n})\\n</code></pre>\\n<p>Returns or sets the function used to check action to be performed on\\npointerDown</p>","params":[{"type":{"names":["function","null"]},"optional":true,"description":"<p>A function which takes a pointer event,\\ndefaultAction string, interactable, element and interaction as parameters\\nand returns an object with name property \'drag\' \'resize\' or \'gesture\' and\\noptionally an <code>edges</code> object with boolean \'top\', \'left\', \'bottom\' and right\\nprops.</p>","name":"checker"}],"returns":[{"type":{"names":["function","Interactable"]},"description":"<p>The checker function or this Interactable</p>"}],"name":"actionChecker","longname":"Interactable#actionChecker","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R000827","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"actionChecker","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * ```js\\n   * interact(\'.resize-drag\')\\n   *   .resizable(true)\\n   *   .draggable(true)\\n   *   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\\n   *\\n   *   if (interact.matchesSelector(event.target, \'.drag-handle\')) {\\n   *     // force drag with handle target\\n   *     action.name = drag\\n   *   }\\n   *   else {\\n   *     // resize from the top and right edges\\n   *     action.name  = \'resize\'\\n   *     action.edges = { top: true, right: true }\\n   *   }\\n   *\\n   *   return action\\n   * })\\n   * ```\\n   *\\n   * Returns or sets the function used to check action to be performed on\\n   * pointerDown\\n   *\\n   * @param {function | null} [checker] A function which takes a pointer event,\\n   * defaultAction string, interactable, element and interaction as parameters\\n   * and returns an object with name property \'drag\' \'resize\' or \'gesture\' and\\n   * optionally an `edges` object with boolean \'top\', \'left\', \'bottom\' and right\\n   * props.\\n   * @return {Function | Interactable} The checker function or this Interactable\\n   */","meta":{"range":[3739,3791],"filename":"InteractableMethods.ts","lineno":107,"columnno":2,"path":"interactjs/node_modules/@interactjs/auto-start","code":{"id":"astnode100038431","name":"Interactable.prototype.actionChecker","type":"Identifier","value":"actionChecker","paramnames":[]},"shortpath":"/interactjs/node_modules/@interactjs/auto-start/InteractableMethods.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(\'.resize-drag\')\\n  .resizable(true)\\n  .draggable(true)\\n  .actionChecker(function (pointer, event, action, interactable, element, interaction) {\\n\\n  if (interact.matchesSelector(event.target, \'.drag-handle\')) {\\n    // force drag with handle target\\n    action.name = drag\\n  }\\n  else {\\n    // resize from the top and right edges\\n    action.name  = \'resize\'\\n    action.edges = { top: true, right: true }\\n  }\\n\\n  return action\\n})\\n</code></pre>\\n<p>Returns or sets the function used to check action to be performed on\\npointerDown</p>","params":[{"type":{"names":["function","null"]},"optional":true,"description":"<p>A function which takes a pointer event,\\ndefaultAction string, interactable, element and interaction as parameters\\nand returns an object with name property \'drag\' \'resize\' or \'gesture\' and\\noptionally an <code>edges</code> object with boolean \'top\', \'left\', \'bottom\' and right\\nprops.</p>","name":"checker"}],"returns":[{"type":{"names":["function","Interactable"]},"description":"<p>The checker function or this Interactable</p>"}],"name":"actionChecker","longname":"Interactable#actionChecker","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R004172","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"actionChecker","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * ```js\\n   * interact(\'.resize-drag\')\\n   *   .resizable(true)\\n   *   .draggable(true)\\n   *   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\\n   *\\n   *   if (interact.matchesSelector(event.target, \'.drag-handle\')) {\\n   *     // force drag with handle target\\n   *     action.name = drag\\n   *   }\\n   *   else {\\n   *     // resize from the top and right edges\\n   *     action.name  = \'resize\'\\n   *     action.edges = { top: true, right: true }\\n   *   }\\n   *\\n   *   return action\\n   * })\\n   * ```\\n   *\\n   * Returns or sets the function used to check action to be performed on\\n   * pointerDown\\n   *\\n   * @param {function | null} [checker] A function which takes a pointer event,\\n   * defaultAction string, interactable, element and interaction as parameters\\n   * and returns an object with name property \'drag\' \'resize\' or \'gesture\' and\\n   * optionally an `edges` object with boolean \'top\', \'left\', \'bottom\' and right\\n   * props.\\n   * @return {Function | Interactable} The checker function or this Interactable\\n   */","meta":{"range":[3739,3791],"filename":"InteractableMethods.ts","lineno":107,"columnno":2,"path":"types/node_modules/@interactjs/auto-start","code":{"id":"astnode100069470","name":"Interactable.prototype.actionChecker","type":"Identifier","value":"actionChecker","paramnames":[]},"shortpath":"/types/node_modules/@interactjs/auto-start/InteractableMethods.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(\'.resize-drag\')\\n  .resizable(true)\\n  .draggable(true)\\n  .actionChecker(function (pointer, event, action, interactable, element, interaction) {\\n\\n  if (interact.matchesSelector(event.target, \'.drag-handle\')) {\\n    // force drag with handle target\\n    action.name = drag\\n  }\\n  else {\\n    // resize from the top and right edges\\n    action.name  = \'resize\'\\n    action.edges = { top: true, right: true }\\n  }\\n\\n  return action\\n})\\n</code></pre>\\n<p>Returns or sets the function used to check action to be performed on\\npointerDown</p>","params":[{"type":{"names":["function","null"]},"optional":true,"description":"<p>A function which takes a pointer event,\\ndefaultAction string, interactable, element and interaction as parameters\\nand returns an object with name property \'drag\' \'resize\' or \'gesture\' and\\noptionally an <code>edges</code> object with boolean \'top\', \'left\', \'bottom\' and right\\nprops.</p>","name":"checker"}],"returns":[{"type":{"names":["function","Interactable"]},"description":"<p>The checker function or this Interactable</p>"}],"name":"actionChecker","longname":"Interactable#actionChecker","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R007908","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"actionChecker","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * @deprecated\\n   *\\n   * A drag/resize/gesture is started only If the target of the `mousedown`,\\n   * `pointerdown` or `touchstart` event or any of it\'s parents match the given\\n   * CSS selector or Element.\\n   *\\n   * Don\'t use this method. Instead set the `allowFrom` option for each action\\n   * or for `pointerEvents`\\n   *\\n   * @example\\n   * interact(targett)\\n   *   .resizable({\\n   *     allowFrom: \'.resize-handle\',\\n   *   .pointerEvents({\\n   *     allowFrom: \'.handle\',,\\n   *   })\\n   *\\n   * @param {string | Element | null} [newValue] a CSS selector string, an\\n   * Element or `null` to allow from any element\\n   * @return {string | Element | object} The current allowFrom value or this\\n   * Interactable\\n   */","meta":{"range":[2448,2675],"filename":"InteractableMethods.ts","lineno":80,"columnno":2,"path":"auto-start","code":{"id":"astnode100007526","name":"Interactable.prototype.allowFrom","type":"CallExpression","value":"","paramnames":[]},"shortpath":"/auto-start/InteractableMethods.ts"},"deprecated":"A drag/resize/gesture is started only If the target of the `mousedown`,\\n`pointerdown` or `touchstart` event or any of it\'s parents match the given\\nCSS selector or Element.\\n\\nDon\'t use this method. Instead set the `allowFrom` option for each action\\nor for `pointerEvents`","examples":[{"caption":"","code":"interact(targett)\\n  .resizable({\\n    allowFrom: \'.resize-handle\',\\n  .pointerEvents({\\n    allowFrom: \'.handle\',,\\n  })"}],"params":[{"type":{"names":["string","Element","null"]},"optional":true,"description":"<p>a CSS selector string, an\\nElement or <code>null</code> to allow from any element</p>","name":"newValue"}],"returns":[{"type":{"names":["string","Element","object"]},"description":"<p>The current allowFrom value or this\\nInteractable</p>"}],"name":"allowFrom","longname":"Interactable#allowFrom","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R000826","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"allowFrom","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * @deprecated\\n   *\\n   * A drag/resize/gesture is started only If the target of the `mousedown`,\\n   * `pointerdown` or `touchstart` event or any of it\'s parents match the given\\n   * CSS selector or Element.\\n   *\\n   * Don\'t use this method. Instead set the `allowFrom` option for each action\\n   * or for `pointerEvents`\\n   *\\n   * @example\\n   * interact(targett)\\n   *   .resizable({\\n   *     allowFrom: \'.resize-handle\',\\n   *   .pointerEvents({\\n   *     allowFrom: \'.handle\',,\\n   *   })\\n   *\\n   * @param {string | Element | null} [newValue] a CSS selector string, an\\n   * Element or `null` to allow from any element\\n   * @return {string | Element | object} The current allowFrom value or this\\n   * Interactable\\n   */","meta":{"range":[2448,2675],"filename":"InteractableMethods.ts","lineno":80,"columnno":2,"path":"interactjs/node_modules/@interactjs/auto-start","code":{"id":"astnode100038411","name":"Interactable.prototype.allowFrom","type":"CallExpression","value":"","paramnames":[]},"shortpath":"/interactjs/node_modules/@interactjs/auto-start/InteractableMethods.ts"},"deprecated":"A drag/resize/gesture is started only If the target of the `mousedown`,\\n`pointerdown` or `touchstart` event or any of it\'s parents match the given\\nCSS selector or Element.\\n\\nDon\'t use this method. Instead set the `allowFrom` option for each action\\nor for `pointerEvents`","examples":[{"caption":"","code":"interact(targett)\\n  .resizable({\\n    allowFrom: \'.resize-handle\',\\n  .pointerEvents({\\n    allowFrom: \'.handle\',,\\n  })"}],"params":[{"type":{"names":["string","Element","null"]},"optional":true,"description":"<p>a CSS selector string, an\\nElement or <code>null</code> to allow from any element</p>","name":"newValue"}],"returns":[{"type":{"names":["string","Element","object"]},"description":"<p>The current allowFrom value or this\\nInteractable</p>"}],"name":"allowFrom","longname":"Interactable#allowFrom","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R004171","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"allowFrom","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * @deprecated\\n   *\\n   * A drag/resize/gesture is started only If the target of the `mousedown`,\\n   * `pointerdown` or `touchstart` event or any of it\'s parents match the given\\n   * CSS selector or Element.\\n   *\\n   * Don\'t use this method. Instead set the `allowFrom` option for each action\\n   * or for `pointerEvents`\\n   *\\n   * @example\\n   * interact(targett)\\n   *   .resizable({\\n   *     allowFrom: \'.resize-handle\',\\n   *   .pointerEvents({\\n   *     allowFrom: \'.handle\',,\\n   *   })\\n   *\\n   * @param {string | Element | null} [newValue] a CSS selector string, an\\n   * Element or `null` to allow from any element\\n   * @return {string | Element | object} The current allowFrom value or this\\n   * Interactable\\n   */","meta":{"range":[2448,2675],"filename":"InteractableMethods.ts","lineno":80,"columnno":2,"path":"types/node_modules/@interactjs/auto-start","code":{"id":"astnode100069450","name":"Interactable.prototype.allowFrom","type":"CallExpression","value":"","paramnames":[]},"shortpath":"/types/node_modules/@interactjs/auto-start/InteractableMethods.ts"},"deprecated":"A drag/resize/gesture is started only If the target of the `mousedown`,\\n`pointerdown` or `touchstart` event or any of it\'s parents match the given\\nCSS selector or Element.\\n\\nDon\'t use this method. Instead set the `allowFrom` option for each action\\nor for `pointerEvents`","examples":[{"caption":"","code":"interact(targett)\\n  .resizable({\\n    allowFrom: \'.resize-handle\',\\n  .pointerEvents({\\n    allowFrom: \'.handle\',,\\n  })"}],"params":[{"type":{"names":["string","Element","null"]},"optional":true,"description":"<p>a CSS selector string, an\\nElement or <code>null</code> to allow from any element</p>","name":"newValue"}],"returns":[{"type":{"names":["string","Element","object"]},"description":"<p>The current allowFrom value or this\\nInteractable</p>"}],"name":"allowFrom","longname":"Interactable#allowFrom","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R007907","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"allowFrom","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * Gets the selector context Node of the Interactable. The default is\\n   * `window.document`.\\n   *\\n   * @return {Node} The context Node of this Interactable\\n   */","meta":{"range":[6091,6132],"filename":"Interactable.ts","lineno":210,"columnno":2,"path":"core","code":{"id":"astnode100009716","name":"Interactable#context","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/core/Interactable.ts"},"description":"<p>Gets the selector context Node of the Interactable. The default is\\n<code>window.document</code>.</p>","returns":[{"type":{"names":["Node"]},"description":"<p>The context Node of this Interactable</p>"}],"name":"context","longname":"Interactable#context","kind":"function","memberof":"Interactable","scope":"instance","params":[],"___id":"T000002R001043","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"context","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"> &rarr; {Node}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Gets the selector context Node of the Interactable. The default is\\n   * `window.document`.\\n   *\\n   * @return {Node} The context Node of this Interactable\\n   */","meta":{"range":[6091,6132],"filename":"Interactable.ts","lineno":210,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100024881","name":"Interactable#context","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Gets the selector context Node of the Interactable. The default is\\n<code>window.document</code>.</p>","returns":[{"type":{"names":["Node"]},"description":"<p>The context Node of this Interactable</p>"}],"name":"context","longname":"Interactable#context","kind":"function","memberof":"Interactable","scope":"instance","params":[],"___id":"T000002R002707","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"context","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"> &rarr; {Node}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Gets the selector context Node of the Interactable. The default is\\n   * `window.document`.\\n   *\\n   * @return {Node} The context Node of this Interactable\\n   */","meta":{"range":[6091,6132],"filename":"Interactable.ts","lineno":210,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100040557","name":"Interactable#context","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Gets the selector context Node of the Interactable. The default is\\n<code>window.document</code>.</p>","returns":[{"type":{"names":["Node"]},"description":"<p>The context Node of this Interactable</p>"}],"name":"context","longname":"Interactable#context","kind":"function","memberof":"Interactable","scope":"instance","params":[],"___id":"T000002R004383","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"context","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"> &rarr; {Node}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Gets the selector context Node of the Interactable. The default is\\n   * `window.document`.\\n   *\\n   * @return {Node} The context Node of this Interactable\\n   */","meta":{"range":[6091,6132],"filename":"Interactable.ts","lineno":210,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100071592","name":"Interactable#context","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Gets the selector context Node of the Interactable. The default is\\n<code>window.document</code>.</p>","returns":[{"type":{"names":["Node"]},"description":"<p>The context Node of this Interactable</p>"}],"name":"context","longname":"Interactable#context","kind":"function","memberof":"Interactable","scope":"instance","params":[],"___id":"T000002R008118","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"context","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"> &rarr; {Node}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Returns or sets the mouse coordinate types used to calculate the\\n   * movement of the pointer.\\n   *\\n   * @param {string} [newValue] Use \'client\' if you will be scrolling while\\n   * interacting; Use \'page\' if you want autoScroll to work\\n   * @return {string | object} The current deltaSource or this Interactable\\n   */","meta":{"range":[5726,5915],"filename":"Interactable.ts","lineno":192,"columnno":2,"path":"core","code":{"id":"astnode100009686","name":"Interactable#deltaSource","type":"MethodDefinition","paramnames":["newValue"]},"vars":{"":null},"shortpath":"/core/Interactable.ts"},"description":"<p>Returns or sets the mouse coordinate types used to calculate the\\nmovement of the pointer.</p>","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>Use \'client\' if you will be scrolling while\\ninteracting; Use \'page\' if you want autoScroll to work</p>","name":"newValue"}],"returns":[{"type":{"names":["string","object"]},"description":"<p>The current deltaSource or this Interactable</p>"}],"name":"deltaSource","longname":"Interactable#deltaSource","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R001041","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"deltaSource","signature":"<span class=\\"signature\\">(newValue<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {string|object}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Returns or sets the mouse coordinate types used to calculate the\\n   * movement of the pointer.\\n   *\\n   * @param {string} [newValue] Use \'client\' if you will be scrolling while\\n   * interacting; Use \'page\' if you want autoScroll to work\\n   * @return {string | object} The current deltaSource or this Interactable\\n   */","meta":{"range":[5726,5915],"filename":"Interactable.ts","lineno":192,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100024851","name":"Interactable#deltaSource","type":"MethodDefinition","paramnames":["newValue"]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Returns or sets the mouse coordinate types used to calculate the\\nmovement of the pointer.</p>","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>Use \'client\' if you will be scrolling while\\ninteracting; Use \'page\' if you want autoScroll to work</p>","name":"newValue"}],"returns":[{"type":{"names":["string","object"]},"description":"<p>The current deltaSource or this Interactable</p>"}],"name":"deltaSource","longname":"Interactable#deltaSource","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R002705","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"deltaSource","signature":"<span class=\\"signature\\">(newValue<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {string|object}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Returns or sets the mouse coordinate types used to calculate the\\n   * movement of the pointer.\\n   *\\n   * @param {string} [newValue] Use \'client\' if you will be scrolling while\\n   * interacting; Use \'page\' if you want autoScroll to work\\n   * @return {string | object} The current deltaSource or this Interactable\\n   */","meta":{"range":[5726,5915],"filename":"Interactable.ts","lineno":192,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100040527","name":"Interactable#deltaSource","type":"MethodDefinition","paramnames":["newValue"]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Returns or sets the mouse coordinate types used to calculate the\\nmovement of the pointer.</p>","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>Use \'client\' if you will be scrolling while\\ninteracting; Use \'page\' if you want autoScroll to work</p>","name":"newValue"}],"returns":[{"type":{"names":["string","object"]},"description":"<p>The current deltaSource or this Interactable</p>"}],"name":"deltaSource","longname":"Interactable#deltaSource","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R004381","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"deltaSource","signature":"<span class=\\"signature\\">(newValue<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {string|object}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Returns or sets the mouse coordinate types used to calculate the\\n   * movement of the pointer.\\n   *\\n   * @param {string} [newValue] Use \'client\' if you will be scrolling while\\n   * interacting; Use \'page\' if you want autoScroll to work\\n   * @return {string | object} The current deltaSource or this Interactable\\n   */","meta":{"range":[5726,5915],"filename":"Interactable.ts","lineno":192,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100071562","name":"Interactable#deltaSource","type":"MethodDefinition","paramnames":["newValue"]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Returns or sets the mouse coordinate types used to calculate the\\nmovement of the pointer.</p>","params":[{"type":{"names":["string"]},"optional":true,"description":"<p>Use \'client\' if you will be scrolling while\\ninteracting; Use \'page\' if you want autoScroll to work</p>","name":"newValue"}],"returns":[{"type":{"names":["string","object"]},"description":"<p>The current deltaSource or this Interactable</p>"}],"name":"deltaSource","longname":"Interactable#deltaSource","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R008116","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"deltaSource","signature":"<span class=\\"signature\\">(newValue<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {string|object}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n * ```js\\n * interact(element).draggable({\\n *     onstart: function (event) {},\\n *     onmove : function (event) {},\\n *     onend  : function (event) {},\\n *\\n *     // the axis in which the first movement must be\\n *     // for the drag sequence to start\\n *     // \'xy\' by default - any direction\\n *     startAxis: \'x\' || \'y\' || \'xy\',\\n *\\n *     // \'xy\' by default - don\'t restrict to one axis (move in any direction)\\n *     // \'x\' or \'y\' to restrict movement to either axis\\n *     // \'start\' to restrict movement to the axis the drag started in\\n *     lockAxis: \'x\' || \'y\' || \'xy\' || \'start\',\\n *\\n *     // max number of drags that can happen concurrently\\n *     // with elements of this Interactable. Infinity by default\\n *     max: Infinity,\\n *\\n *     // max number of drags that can target the same element+Interactable\\n *     // 1 by default\\n *     maxPerElement: 2\\n * })\\n *\\n * var isDraggable = interact(\'element\').draggable(); // true\\n * ```\\n *\\n * Get or set whether drag actions can be performed on the target\\n *\\n * @alias Interactable.prototype.draggable\\n *\\n * @param {boolean | object} [options] true/false or An object with event\\n * listeners to be fired on drag events (object makes the Interactable\\n * draggable)\\n * @return {boolean | Interactable} boolean indicating if this can be the\\n * target of drag events, or this Interctable\\n */","meta":{"range":[2740,3312],"filename":"plugin.ts","lineno":76,"columnno":6,"path":"actions/drag","code":{"id":"astnode100000303","name":"draggable","type":"FunctionExpression","value":"draggable"},"vars":{"this.options.drag.enabled":"Interactable#draggable#options.drag.enabled","this.options.drag.lockAxis":"Interactable#draggable#options.drag.lockAxis","this.options.drag.startAxis":"Interactable#draggable#options.drag.startAxis"},"shortpath":"/actions/drag/plugin.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(element).draggable({\\n    onstart: function (event) {},\\n    onmove : function (event) {},\\n    onend  : function (event) {},\\n\\n    // the axis in which the first movement must be\\n    // for the drag sequence to start\\n    // \'xy\' by default - any direction\\n    startAxis: \'x\' || \'y\' || \'xy\',\\n\\n    // \'xy\' by default - don\'t restrict to one axis (move in any direction)\\n    // \'x\' or \'y\' to restrict movement to either axis\\n    // \'start\' to restrict movement to the axis the drag started in\\n    lockAxis: \'x\' || \'y\' || \'xy\' || \'start\',\\n\\n    // max number of drags that can happen concurrently\\n    // with elements of this Interactable. Infinity by default\\n    max: Infinity,\\n\\n    // max number of drags that can target the same element+Interactable\\n    // 1 by default\\n    maxPerElement: 2\\n})\\n\\nvar isDraggable = interact(\'element\').draggable(); // true\\n</code></pre>\\n<p>Get or set whether drag actions can be performed on the target</p>","alias":"Interactable.prototype.draggable","params":[{"type":{"names":["boolean","object"]},"optional":true,"description":"<p>true/false or An object with event\\nlisteners to be fired on drag events (object makes the Interactable\\ndraggable)</p>","name":"options"}],"returns":[{"type":{"names":["boolean","Interactable"]},"description":"<p>boolean indicating if this can be the\\ntarget of drag events, or this Interctable</p>"}],"name":"draggable","longname":"Interactable#draggable","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R000029","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"draggable","signature":"<span class=\\"signature\\">(options<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {boolean|<a href=\\"/docs/api/Interactable.html\\">Interactable</a>}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * ```js\\n   * interact(target)\\n   * .dropChecker(function(dragEvent,         // related dragmove or dragend event\\n   *                       event,             // TouchEvent/PointerEvent/MouseEvent\\n   *                       dropped,           // bool result of the default checker\\n   *                       dropzone,          // dropzone Interactable\\n   *                       dropElement,       // dropzone elemnt\\n   *                       draggable,         // draggable Interactable\\n   *                       draggableElement) {// draggable element\\n   *\\n   *   return dropped && event.target.hasAttribute(\'allow-drop\')\\n   * }\\n   * ```\\n   */","meta":{"range":[3270,3486],"filename":"plugin.ts","lineno":143,"columnno":2,"path":"actions/drop","code":{"id":"astnode100000919","name":"Interactable.prototype.dropCheck","type":"FunctionExpression","paramnames":["dragEvent","event","draggable","draggableElement","dropElement","rect"]},"shortpath":"/actions/drop/plugin.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(target)\\n.dropChecker(function(dragEvent,         // related dragmove or dragend event\\n                      event,             // TouchEvent/PointerEvent/MouseEvent\\n                      dropped,           // bool result of the default checker\\n                      dropzone,          // dropzone Interactable\\n                      dropElement,       // dropzone elemnt\\n                      draggable,         // draggable Interactable\\n                      draggableElement) {// draggable element\\n\\n  return dropped && event.target.hasAttribute(\'allow-drop\')\\n}\\n</code></pre>","name":"dropCheck","longname":"Interactable#dropCheck","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R000097","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"dropCheck","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   *\\n   * ```js\\n   * interact(\'.drop\').dropzone({\\n   *   accept: \'.can-drop\' || document.getElementById(\'single-drop\'),\\n   *   overlap: \'pointer\' || \'center\' || zeroToOne\\n   * }\\n   * ```\\n   *\\n   * Returns or sets whether draggables can be dropped onto this target to\\n   * trigger drop events\\n   *\\n   * Dropzones can receive the following events:\\n   *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\\n   *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\\n   *  - `dragmove` when a draggable that has entered the dropzone is moved\\n   *  - `drop` when a draggable is dropped into this dropzone\\n   *\\n   * Use the `accept` option to allow only elements that match the given CSS\\n   * selector or element. The value can be:\\n   *\\n   *  - **an Element** - only that element can be dropped into this dropzone.\\n   *  - **a string**, - the element being dragged must match it as a CSS selector.\\n   *  - **`null`** - accept options is cleared - it accepts any element.\\n   *\\n   * Use the `overlap` option to set how drops are checked for. The allowed\\n   * values are:\\n   *\\n   *   - `\'pointer\'`, the pointer must be over the dropzone (default)\\n   *   - `\'center\'`, the draggable element\'s center must be over the dropzone\\n   *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\\n   *   e.g. `0.5` for drop to happen when half of the area of the draggable is\\n   *   over the dropzone\\n   *\\n   * Use the `checker` option to specify a function to check if a dragged element\\n   * is over this Interactable.\\n   *\\n   * @param {boolean | object | null} [options] The new options to be set.\\n   * @return {boolean | Interactable} The current setting or this Interactable\\n   */","meta":{"range":[2507,2607],"filename":"plugin.ts","lineno":99,"columnno":2,"path":"actions/drop","code":{"id":"astnode100000904","name":"Interactable.prototype.dropzone","type":"FunctionExpression","paramnames":["options"]},"shortpath":"/actions/drop/plugin.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(\'.drop\').dropzone({\\n  accept: \'.can-drop\' || document.getElementById(\'single-drop\'),\\n  overlap: \'pointer\' || \'center\' || zeroToOne\\n}\\n</code></pre>\\n<p>Returns or sets whether draggables can be dropped onto this target to\\ntrigger drop events</p>\\n<p>Dropzones can receive the following events:</p>\\n<ul>\\n<li><code>dropactivate</code> and <code>dropdeactivate</code> when an acceptable drag starts and ends</li>\\n<li><code>dragenter</code> and <code>dragleave</code> when a draggable enters and leaves the dropzone</li>\\n<li><code>dragmove</code> when a draggable that has entered the dropzone is moved</li>\\n<li><code>drop</code> when a draggable is dropped into this dropzone</li>\\n</ul>\\n<p>Use the <code>accept</code> option to allow only elements that match the given CSS\\nselector or element. The value can be:</p>\\n<ul>\\n<li><strong>an Element</strong> - only that element can be dropped into this dropzone.</li>\\n<li><strong>a string</strong>, - the element being dragged must match it as a CSS selector.</li>\\n<li><strong><code>null</code></strong> - accept options is cleared - it accepts any element.</li>\\n</ul>\\n<p>Use the <code>overlap</code> option to set how drops are checked for. The allowed\\nvalues are:</p>\\n<ul>\\n<li><code>\'pointer\'</code>, the pointer must be over the dropzone (default)</li>\\n<li><code>\'center\'</code>, the draggable element\'s center must be over the dropzone</li>\\n<li>a number from 0-1 which is the <code>(intersection area) / (draggable area)</code>.\\ne.g. <code>0.5</code> for drop to happen when half of the area of the draggable is\\nover the dropzone</li>\\n</ul>\\n<p>Use the <code>checker</code> option to specify a function to check if a dragged element\\nis over this Interactable.</p>","params":[{"type":{"names":["boolean","object","null"]},"optional":true,"description":"<p>The new options to be set.</p>","name":"options"}],"returns":[{"type":{"names":["boolean","Interactable"]},"description":"<p>The current setting or this Interactable</p>"}],"name":"dropzone","longname":"Interactable#dropzone","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R000096","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"dropzone","signature":"<span class=\\"signature\\">(options<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {boolean|<a href=\\"/docs/api/Interactable.html\\">Interactable</a>}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Calls listeners for the given InteractEvent type bound globally\\n   * and directly to this Interactable\\n   *\\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\\n   * Interactable\\n   * @return {Interactable} this Interactable\\n   */","meta":{"range":[7414,7479],"filename":"Interactable.ts","lineno":273,"columnno":2,"path":"core","code":{"id":"astnode100009869","name":"Interactable#fire","type":"MethodDefinition","paramnames":["iEvent"]},"vars":{"":null},"shortpath":"/core/Interactable.ts"},"description":"<p>Calls listeners for the given InteractEvent type bound globally\\nand directly to this Interactable</p>","params":[{"type":{"names":["InteractEvent"]},"description":"<p>The InteractEvent object to be fired on this\\nInteractable</p>","name":"iEvent"}],"returns":[{"type":{"names":["Interactable"]},"description":"<p>this Interactable</p>"}],"name":"fire","longname":"Interactable#fire","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R001048","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"fire","signature":"<span class=\\"signature\\">(iEvent)</span><span class=\\"type-signature\\"> &rarr; {<a href=\\"/docs/api/Interactable.html\\">Interactable</a>}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Calls listeners for the given InteractEvent type bound globally\\n   * and directly to this Interactable\\n   *\\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\\n   * Interactable\\n   * @return {Interactable} this Interactable\\n   */","meta":{"range":[7414,7479],"filename":"Interactable.ts","lineno":273,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100025034","name":"Interactable#fire","type":"MethodDefinition","paramnames":["iEvent"]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Calls listeners for the given InteractEvent type bound globally\\nand directly to this Interactable</p>","params":[{"type":{"names":["InteractEvent"]},"description":"<p>The InteractEvent object to be fired on this\\nInteractable</p>","name":"iEvent"}],"returns":[{"type":{"names":["Interactable"]},"description":"<p>this Interactable</p>"}],"name":"fire","longname":"Interactable#fire","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R002712","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"fire","signature":"<span class=\\"signature\\">(iEvent)</span><span class=\\"type-signature\\"> &rarr; {<a href=\\"/docs/api/Interactable.html\\">Interactable</a>}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Calls listeners for the given InteractEvent type bound globally\\n   * and directly to this Interactable\\n   *\\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\\n   * Interactable\\n   * @return {Interactable} this Interactable\\n   */","meta":{"range":[7414,7479],"filename":"Interactable.ts","lineno":273,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100040710","name":"Interactable#fire","type":"MethodDefinition","paramnames":["iEvent"]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Calls listeners for the given InteractEvent type bound globally\\nand directly to this Interactable</p>","params":[{"type":{"names":["InteractEvent"]},"description":"<p>The InteractEvent object to be fired on this\\nInteractable</p>","name":"iEvent"}],"returns":[{"type":{"names":["Interactable"]},"description":"<p>this Interactable</p>"}],"name":"fire","longname":"Interactable#fire","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R004388","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"fire","signature":"<span class=\\"signature\\">(iEvent)</span><span class=\\"type-signature\\"> &rarr; {<a href=\\"/docs/api/Interactable.html\\">Interactable</a>}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Calls listeners for the given InteractEvent type bound globally\\n   * and directly to this Interactable\\n   *\\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\\n   * Interactable\\n   * @return {Interactable} this Interactable\\n   */","meta":{"range":[7414,7479],"filename":"Interactable.ts","lineno":273,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100071745","name":"Interactable#fire","type":"MethodDefinition","paramnames":["iEvent"]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Calls listeners for the given InteractEvent type bound globally\\nand directly to this Interactable</p>","params":[{"type":{"names":["InteractEvent"]},"description":"<p>The InteractEvent object to be fired on this\\nInteractable</p>","name":"iEvent"}],"returns":[{"type":{"names":["Interactable"]},"description":"<p>this Interactable</p>"}],"name":"fire","longname":"Interactable#fire","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R008123","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"fire","signature":"<span class=\\"signature\\">(iEvent)</span><span class=\\"type-signature\\"> &rarr; {<a href=\\"/docs/api/Interactable.html\\">Interactable</a>}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * ```js\\n   * interact(element).gesturable({\\n   *     onstart: function (event) {},\\n   *     onmove : function (event) {},\\n   *     onend  : function (event) {},\\n   *\\n   *     // limit multiple gestures.\\n   *     // See the explanation in {@link Interactable.draggable} example\\n   *     max: Infinity,\\n   *     maxPerElement: 1,\\n   * })\\n   *\\n   * var isGestureable = interact(element).gesturable()\\n   * ```\\n   *\\n   * Gets or sets whether multitouch gestures can be performed on the target\\n   *\\n   * @param {boolean | object} [options] true/false or An object with event\\n   * listeners to be fired on gesture events (makes the Interactable gesturable)\\n   * @return {boolean | Interactable} A boolean indicating if this can be the\\n   * target of gesture events, or this Interactable\\n   */","meta":{"range":[995,1397],"filename":"plugin.ts","lineno":57,"columnno":2,"path":"actions/gesture","code":{"id":"astnode100002823","name":"Interactable.prototype.gesturable","type":"FunctionExpression","paramnames":["options"]},"vars":{"this.options.gesture.enabled":"Interactable#gesturable#options.gesture.enabled"},"shortpath":"/actions/gesture/plugin.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(element).gesturable({\\n    onstart: function (event) {},\\n    onmove : function (event) {},\\n    onend  : function (event) {},\\n\\n    // limit multiple gestures.\\n    // See the explanation in {@link Interactable.draggable} example\\n    max: Infinity,\\n    maxPerElement: 1,\\n})\\n\\nvar isGestureable = interact(element).gesturable()\\n</code></pre>\\n<p>Gets or sets whether multitouch gestures can be performed on the target</p>","params":[{"type":{"names":["boolean","object"]},"optional":true,"description":"<p>true/false or An object with event\\nlisteners to be fired on gesture events (makes the Interactable gesturable)</p>","name":"options"}],"returns":[{"type":{"names":["boolean","Interactable"]},"description":"<p>A boolean indicating if this can be the\\ntarget of gesture events, or this Interactable</p>"}],"name":"gesturable","longname":"Interactable#gesturable","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R000282","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"gesturable","signature":"<span class=\\"signature\\">(options<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {boolean|<a href=\\"/docs/api/Interactable.html\\">Interactable</a>}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * The default function to get an Interactables bounding rect. Can be\\n   * overridden using {@link Interactable.rectChecker}.\\n   *\\n   * @param {Element} [element] The element to measure.\\n   * @return {object} The object\'s bounding rectangle.\\n   */","meta":{"range":[3487,3729],"filename":"Interactable.ts","lineno":109,"columnno":2,"path":"core","code":{"id":"astnode100009480","name":"Interactable#getRect","type":"MethodDefinition","paramnames":["element"]},"vars":{"":null},"shortpath":"/core/Interactable.ts"},"description":"<p>The default function to get an Interactables bounding rect. Can be\\noverridden using {@link Interactable.rectChecker}.</p>","params":[{"type":{"names":["Element"]},"optional":true,"description":"<p>The element to measure.</p>","name":"element"}],"returns":[{"type":{"names":["object"]},"description":"<p>The object\'s bounding rectangle.</p>"}],"name":"getRect","longname":"Interactable#getRect","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R001027","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"getRect","signature":"<span class=\\"signature\\">(element<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * The default function to get an Interactables bounding rect. Can be\\n   * overridden using {@link Interactable.rectChecker}.\\n   *\\n   * @param {Element} [element] The element to measure.\\n   * @return {object} The object\'s bounding rectangle.\\n   */","meta":{"range":[3487,3729],"filename":"Interactable.ts","lineno":109,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100024645","name":"Interactable#getRect","type":"MethodDefinition","paramnames":["element"]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>The default function to get an Interactables bounding rect. Can be\\noverridden using {@link Interactable.rectChecker}.</p>","params":[{"type":{"names":["Element"]},"optional":true,"description":"<p>The element to measure.</p>","name":"element"}],"returns":[{"type":{"names":["object"]},"description":"<p>The object\'s bounding rectangle.</p>"}],"name":"getRect","longname":"Interactable#getRect","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R002691","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"getRect","signature":"<span class=\\"signature\\">(element<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * The default function to get an Interactables bounding rect. Can be\\n   * overridden using {@link Interactable.rectChecker}.\\n   *\\n   * @param {Element} [element] The element to measure.\\n   * @return {object} The object\'s bounding rectangle.\\n   */","meta":{"range":[3487,3729],"filename":"Interactable.ts","lineno":109,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100040321","name":"Interactable#getRect","type":"MethodDefinition","paramnames":["element"]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>The default function to get an Interactables bounding rect. Can be\\noverridden using {@link Interactable.rectChecker}.</p>","params":[{"type":{"names":["Element"]},"optional":true,"description":"<p>The element to measure.</p>","name":"element"}],"returns":[{"type":{"names":["object"]},"description":"<p>The object\'s bounding rectangle.</p>"}],"name":"getRect","longname":"Interactable#getRect","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R004367","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"getRect","signature":"<span class=\\"signature\\">(element<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * The default function to get an Interactables bounding rect. Can be\\n   * overridden using {@link Interactable.rectChecker}.\\n   *\\n   * @param {Element} [element] The element to measure.\\n   * @return {object} The object\'s bounding rectangle.\\n   */","meta":{"range":[3487,3729],"filename":"Interactable.ts","lineno":109,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100071356","name":"Interactable#getRect","type":"MethodDefinition","paramnames":["element"]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>The default function to get an Interactables bounding rect. Can be\\noverridden using {@link Interactable.rectChecker}.</p>","params":[{"type":{"names":["Element"]},"optional":true,"description":"<p>The element to measure.</p>","name":"element"}],"returns":[{"type":{"names":["object"]},"description":"<p>The object\'s bounding rectangle.</p>"}],"name":"getRect","longname":"Interactable#getRect","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R008102","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"getRect","signature":"<span class=\\"signature\\">(element<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * ```js\\n   * interact(element, { ignoreFrom: document.getElementById(\'no-action\') })\\n   * // or\\n   * interact(element).ignoreFrom(\'input, textarea, a\')\\n   * ```\\n   * @deprecated\\n   * If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\\n   * of it\'s parents match the given CSS selector or Element, no\\n   * drag/resize/gesture is started.\\n   *\\n   * Don\'t use this method. Instead set the `ignoreFrom` option for each action\\n   * or for `pointerEvents`\\n   *\\n   * @example\\n   * interact(targett)\\n   *   .draggable({\\n   *     ignoreFrom: \'input, textarea, a[href]\'\',\\n   *   })\\n   *   .pointerEvents({\\n   *     ignoreFrom: \'[no-pointer]\',\\n   *   })\\n   *\\n   * @param {string | Element | null} [newValue] a CSS selector string, an\\n   * Element or `null` to not ignore any elements\\n   * @return {string | Element | object} The current ignoreFrom value or this\\n   * Interactable\\n   */","meta":{"range":[1489,1720],"filename":"InteractableMethods.ts","lineno":48,"columnno":2,"path":"auto-start","code":{"id":"astnode100007506","name":"Interactable.prototype.ignoreFrom","type":"CallExpression","value":"","paramnames":[]},"shortpath":"/auto-start/InteractableMethods.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(element, { ignoreFrom: document.getElementById(\'no-action\') })\\n// or\\ninteract(element).ignoreFrom(\'input, textarea, a\')\\n</code></pre>","deprecated":"If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\\nof it\'s parents match the given CSS selector or Element, no\\ndrag/resize/gesture is started.\\n\\nDon\'t use this method. Instead set the `ignoreFrom` option for each action\\nor for `pointerEvents`","examples":[{"caption":"","code":"interact(targett)\\n  .draggable({\\n    ignoreFrom: \'input, textarea, a[href]\'\',\\n  })\\n  .pointerEvents({\\n    ignoreFrom: \'[no-pointer]\',\\n  })"}],"params":[{"type":{"names":["string","Element","null"]},"optional":true,"description":"<p>a CSS selector string, an\\nElement or <code>null</code> to not ignore any elements</p>","name":"newValue"}],"returns":[{"type":{"names":["string","Element","object"]},"description":"<p>The current ignoreFrom value or this\\nInteractable</p>"}],"name":"ignoreFrom","longname":"Interactable#ignoreFrom","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R000825","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"ignoreFrom","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * ```js\\n   * interact(element, { ignoreFrom: document.getElementById(\'no-action\') })\\n   * // or\\n   * interact(element).ignoreFrom(\'input, textarea, a\')\\n   * ```\\n   * @deprecated\\n   * If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\\n   * of it\'s parents match the given CSS selector or Element, no\\n   * drag/resize/gesture is started.\\n   *\\n   * Don\'t use this method. Instead set the `ignoreFrom` option for each action\\n   * or for `pointerEvents`\\n   *\\n   * @example\\n   * interact(targett)\\n   *   .draggable({\\n   *     ignoreFrom: \'input, textarea, a[href]\'\',\\n   *   })\\n   *   .pointerEvents({\\n   *     ignoreFrom: \'[no-pointer]\',\\n   *   })\\n   *\\n   * @param {string | Element | null} [newValue] a CSS selector string, an\\n   * Element or `null` to not ignore any elements\\n   * @return {string | Element | object} The current ignoreFrom value or this\\n   * Interactable\\n   */","meta":{"range":[1489,1720],"filename":"InteractableMethods.ts","lineno":48,"columnno":2,"path":"interactjs/node_modules/@interactjs/auto-start","code":{"id":"astnode100038391","name":"Interactable.prototype.ignoreFrom","type":"CallExpression","value":"","paramnames":[]},"shortpath":"/interactjs/node_modules/@interactjs/auto-start/InteractableMethods.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(element, { ignoreFrom: document.getElementById(\'no-action\') })\\n// or\\ninteract(element).ignoreFrom(\'input, textarea, a\')\\n</code></pre>","deprecated":"If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\\nof it\'s parents match the given CSS selector or Element, no\\ndrag/resize/gesture is started.\\n\\nDon\'t use this method. Instead set the `ignoreFrom` option for each action\\nor for `pointerEvents`","examples":[{"caption":"","code":"interact(targett)\\n  .draggable({\\n    ignoreFrom: \'input, textarea, a[href]\'\',\\n  })\\n  .pointerEvents({\\n    ignoreFrom: \'[no-pointer]\',\\n  })"}],"params":[{"type":{"names":["string","Element","null"]},"optional":true,"description":"<p>a CSS selector string, an\\nElement or <code>null</code> to not ignore any elements</p>","name":"newValue"}],"returns":[{"type":{"names":["string","Element","object"]},"description":"<p>The current ignoreFrom value or this\\nInteractable</p>"}],"name":"ignoreFrom","longname":"Interactable#ignoreFrom","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R004170","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"ignoreFrom","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * ```js\\n   * interact(element, { ignoreFrom: document.getElementById(\'no-action\') })\\n   * // or\\n   * interact(element).ignoreFrom(\'input, textarea, a\')\\n   * ```\\n   * @deprecated\\n   * If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\\n   * of it\'s parents match the given CSS selector or Element, no\\n   * drag/resize/gesture is started.\\n   *\\n   * Don\'t use this method. Instead set the `ignoreFrom` option for each action\\n   * or for `pointerEvents`\\n   *\\n   * @example\\n   * interact(targett)\\n   *   .draggable({\\n   *     ignoreFrom: \'input, textarea, a[href]\'\',\\n   *   })\\n   *   .pointerEvents({\\n   *     ignoreFrom: \'[no-pointer]\',\\n   *   })\\n   *\\n   * @param {string | Element | null} [newValue] a CSS selector string, an\\n   * Element or `null` to not ignore any elements\\n   * @return {string | Element | object} The current ignoreFrom value or this\\n   * Interactable\\n   */","meta":{"range":[1489,1720],"filename":"InteractableMethods.ts","lineno":48,"columnno":2,"path":"types/node_modules/@interactjs/auto-start","code":{"id":"astnode100069430","name":"Interactable.prototype.ignoreFrom","type":"CallExpression","value":"","paramnames":[]},"shortpath":"/types/node_modules/@interactjs/auto-start/InteractableMethods.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(element, { ignoreFrom: document.getElementById(\'no-action\') })\\n// or\\ninteract(element).ignoreFrom(\'input, textarea, a\')\\n</code></pre>","deprecated":"If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\\nof it\'s parents match the given CSS selector or Element, no\\ndrag/resize/gesture is started.\\n\\nDon\'t use this method. Instead set the `ignoreFrom` option for each action\\nor for `pointerEvents`","examples":[{"caption":"","code":"interact(targett)\\n  .draggable({\\n    ignoreFrom: \'input, textarea, a[href]\'\',\\n  })\\n  .pointerEvents({\\n    ignoreFrom: \'[no-pointer]\',\\n  })"}],"params":[{"type":{"names":["string","Element","null"]},"optional":true,"description":"<p>a CSS selector string, an\\nElement or <code>null</code> to not ignore any elements</p>","name":"newValue"}],"returns":[{"type":{"names":["string","Element","object"]},"description":"<p>The current ignoreFrom value or this\\nInteractable</p>"}],"name":"ignoreFrom","longname":"Interactable#ignoreFrom","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R007906","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"ignoreFrom","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * Removes an InteractEvent, pointerEvent or DOM event listener.\\n   *\\n   * @param {string | array | object} types The types of events that were\\n   * listened for\\n   * @param {function | array | object} [listener] The event listener function(s)\\n   * @param {object | boolean} [options] options object or useCapture flag for\\n   * removeEventListener\\n   * @return {Interactable} This Interactable\\n   */","meta":{"range":[9365,9457],"filename":"Interactable.ts","lineno":332,"columnno":2,"path":"core","code":{"id":"astnode100010032","name":"Interactable#off","type":"MethodDefinition","paramnames":["types","listener","options"]},"vars":{"":null},"shortpath":"/core/Interactable.ts"},"description":"<p>Removes an InteractEvent, pointerEvent or DOM event listener.</p>","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events that were\\nlistened for</p>","name":"types"},{"type":{"names":["function","array","object"]},"optional":true,"description":"<p>The event listener function(s)</p>","name":"listener"},{"type":{"names":["object","boolean"]},"optional":true,"description":"<p>options object or useCapture flag for\\nremoveEventListener</p>","name":"options"}],"returns":[{"type":{"names":["Interactable"]},"description":"<p>This Interactable</p>"}],"name":"off","longname":"Interactable#off","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R001058","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"off","signature":"<span class=\\"signature\\">(types, listener<span class=\\"signature-attributes\\">opt</span>, options<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {<a href=\\"/docs/api/Interactable.html\\">Interactable</a>}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Removes an InteractEvent, pointerEvent or DOM event listener.\\n   *\\n   * @param {string | array | object} types The types of events that were\\n   * listened for\\n   * @param {function | array | object} [listener] The event listener function(s)\\n   * @param {object | boolean} [options] options object or useCapture flag for\\n   * removeEventListener\\n   * @return {Interactable} This Interactable\\n   */","meta":{"range":[9365,9457],"filename":"Interactable.ts","lineno":332,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100025197","name":"Interactable#off","type":"MethodDefinition","paramnames":["types","listener","options"]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Removes an InteractEvent, pointerEvent or DOM event listener.</p>","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events that were\\nlistened for</p>","name":"types"},{"type":{"names":["function","array","object"]},"optional":true,"description":"<p>The event listener function(s)</p>","name":"listener"},{"type":{"names":["object","boolean"]},"optional":true,"description":"<p>options object or useCapture flag for\\nremoveEventListener</p>","name":"options"}],"returns":[{"type":{"names":["Interactable"]},"description":"<p>This Interactable</p>"}],"name":"off","longname":"Interactable#off","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R002722","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"off","signature":"<span class=\\"signature\\">(types, listener<span class=\\"signature-attributes\\">opt</span>, options<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {<a href=\\"/docs/api/Interactable.html\\">Interactable</a>}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Removes an InteractEvent, pointerEvent or DOM event listener.\\n   *\\n   * @param {string | array | object} types The types of events that were\\n   * listened for\\n   * @param {function | array | object} [listener] The event listener function(s)\\n   * @param {object | boolean} [options] options object or useCapture flag for\\n   * removeEventListener\\n   * @return {Interactable} This Interactable\\n   */","meta":{"range":[9365,9457],"filename":"Interactable.ts","lineno":332,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100040873","name":"Interactable#off","type":"MethodDefinition","paramnames":["types","listener","options"]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Removes an InteractEvent, pointerEvent or DOM event listener.</p>","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events that were\\nlistened for</p>","name":"types"},{"type":{"names":["function","array","object"]},"optional":true,"description":"<p>The event listener function(s)</p>","name":"listener"},{"type":{"names":["object","boolean"]},"optional":true,"description":"<p>options object or useCapture flag for\\nremoveEventListener</p>","name":"options"}],"returns":[{"type":{"names":["Interactable"]},"description":"<p>This Interactable</p>"}],"name":"off","longname":"Interactable#off","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R004398","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"off","signature":"<span class=\\"signature\\">(types, listener<span class=\\"signature-attributes\\">opt</span>, options<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {<a href=\\"/docs/api/Interactable.html\\">Interactable</a>}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Removes an InteractEvent, pointerEvent or DOM event listener.\\n   *\\n   * @param {string | array | object} types The types of events that were\\n   * listened for\\n   * @param {function | array | object} [listener] The event listener function(s)\\n   * @param {object | boolean} [options] options object or useCapture flag for\\n   * removeEventListener\\n   * @return {Interactable} This Interactable\\n   */","meta":{"range":[9365,9457],"filename":"Interactable.ts","lineno":332,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100071908","name":"Interactable#off","type":"MethodDefinition","paramnames":["types","listener","options"]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Removes an InteractEvent, pointerEvent or DOM event listener.</p>","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events that were\\nlistened for</p>","name":"types"},{"type":{"names":["function","array","object"]},"optional":true,"description":"<p>The event listener function(s)</p>","name":"listener"},{"type":{"names":["object","boolean"]},"optional":true,"description":"<p>options object or useCapture flag for\\nremoveEventListener</p>","name":"options"}],"returns":[{"type":{"names":["Interactable"]},"description":"<p>This Interactable</p>"}],"name":"off","longname":"Interactable#off","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R008133","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"off","signature":"<span class=\\"signature\\">(types, listener<span class=\\"signature-attributes\\">opt</span>, options<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {<a href=\\"/docs/api/Interactable.html\\">Interactable</a>}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\\n   *\\n   * @param {string | array | object} types The types of events to listen\\n   * for\\n   * @param {function | array | object} [listener] The event listener function(s)\\n   * @param {object | boolean} [options] options object or useCapture flag for\\n   * addEventListener\\n   * @return {Interactable} This Interactable\\n   */","meta":{"range":[8862,8952],"filename":"Interactable.ts","lineno":318,"columnno":2,"path":"core","code":{"id":"astnode100010016","name":"Interactable#on","type":"MethodDefinition","paramnames":["types","listener","options"]},"vars":{"":null},"shortpath":"/core/Interactable.ts"},"description":"<p>Binds a listener for an InteractEvent, pointerEvent or DOM event.</p>","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events to listen\\nfor</p>","name":"types"},{"type":{"names":["function","array","object"]},"optional":true,"description":"<p>The event listener function(s)</p>","name":"listener"},{"type":{"names":["object","boolean"]},"optional":true,"description":"<p>options object or useCapture flag for\\naddEventListener</p>","name":"options"}],"returns":[{"type":{"names":["Interactable"]},"description":"<p>This Interactable</p>"}],"name":"on","longname":"Interactable#on","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R001057","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"on","signature":"<span class=\\"signature\\">(types, listener<span class=\\"signature-attributes\\">opt</span>, options<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {<a href=\\"/docs/api/Interactable.html\\">Interactable</a>}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\\n   *\\n   * @param {string | array | object} types The types of events to listen\\n   * for\\n   * @param {function | array | object} [listener] The event listener function(s)\\n   * @param {object | boolean} [options] options object or useCapture flag for\\n   * addEventListener\\n   * @return {Interactable} This Interactable\\n   */","meta":{"range":[8862,8952],"filename":"Interactable.ts","lineno":318,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100025181","name":"Interactable#on","type":"MethodDefinition","paramnames":["types","listener","options"]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Binds a listener for an InteractEvent, pointerEvent or DOM event.</p>","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events to listen\\nfor</p>","name":"types"},{"type":{"names":["function","array","object"]},"optional":true,"description":"<p>The event listener function(s)</p>","name":"listener"},{"type":{"names":["object","boolean"]},"optional":true,"description":"<p>options object or useCapture flag for\\naddEventListener</p>","name":"options"}],"returns":[{"type":{"names":["Interactable"]},"description":"<p>This Interactable</p>"}],"name":"on","longname":"Interactable#on","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R002721","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"on","signature":"<span class=\\"signature\\">(types, listener<span class=\\"signature-attributes\\">opt</span>, options<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {<a href=\\"/docs/api/Interactable.html\\">Interactable</a>}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\\n   *\\n   * @param {string | array | object} types The types of events to listen\\n   * for\\n   * @param {function | array | object} [listener] The event listener function(s)\\n   * @param {object | boolean} [options] options object or useCapture flag for\\n   * addEventListener\\n   * @return {Interactable} This Interactable\\n   */","meta":{"range":[8862,8952],"filename":"Interactable.ts","lineno":318,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100040857","name":"Interactable#on","type":"MethodDefinition","paramnames":["types","listener","options"]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Binds a listener for an InteractEvent, pointerEvent or DOM event.</p>","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events to listen\\nfor</p>","name":"types"},{"type":{"names":["function","array","object"]},"optional":true,"description":"<p>The event listener function(s)</p>","name":"listener"},{"type":{"names":["object","boolean"]},"optional":true,"description":"<p>options object or useCapture flag for\\naddEventListener</p>","name":"options"}],"returns":[{"type":{"names":["Interactable"]},"description":"<p>This Interactable</p>"}],"name":"on","longname":"Interactable#on","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R004397","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"on","signature":"<span class=\\"signature\\">(types, listener<span class=\\"signature-attributes\\">opt</span>, options<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {<a href=\\"/docs/api/Interactable.html\\">Interactable</a>}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\\n   *\\n   * @param {string | array | object} types The types of events to listen\\n   * for\\n   * @param {function | array | object} [listener] The event listener function(s)\\n   * @param {object | boolean} [options] options object or useCapture flag for\\n   * addEventListener\\n   * @return {Interactable} This Interactable\\n   */","meta":{"range":[8862,8952],"filename":"Interactable.ts","lineno":318,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100071892","name":"Interactable#on","type":"MethodDefinition","paramnames":["types","listener","options"]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Binds a listener for an InteractEvent, pointerEvent or DOM event.</p>","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events to listen\\nfor</p>","name":"types"},{"type":{"names":["function","array","object"]},"optional":true,"description":"<p>The event listener function(s)</p>","name":"listener"},{"type":{"names":["object","boolean"]},"optional":true,"description":"<p>options object or useCapture flag for\\naddEventListener</p>","name":"options"}],"returns":[{"type":{"names":["Interactable"]},"description":"<p>This Interactable</p>"}],"name":"on","longname":"Interactable#on","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R008132","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"on","signature":"<span class=\\"signature\\">(types, listener<span class=\\"signature-attributes\\">opt</span>, options<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {<a href=\\"/docs/api/Interactable.html\\">Interactable</a>}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Gets or sets the origin of the Interactable\'s element.  The x and y\\n   * of the origin will be subtracted from action event coordinates.\\n   *\\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\\n   * rect will be used, an object eg. { x: 0, y: 0 } or string \'parent\', \'self\'\\n   * or any CSS selector\\n   *\\n   * @return {object} The current origin or this Interactable\\n   */","meta":{"range":[5315,5392],"filename":"Interactable.ts","lineno":178,"columnno":2,"path":"core","code":{"id":"astnode100009674","name":"Interactable#origin","type":"MethodDefinition","paramnames":["newValue"]},"vars":{"":null},"shortpath":"/core/Interactable.ts"},"description":"<p>Gets or sets the origin of the Interactable\'s element.  The x and y\\nof the origin will be subtracted from action event coordinates.</p>","params":[{"type":{"names":["Element","object","string"]},"optional":true,"description":"<p>An HTML or SVG Element whose\\nrect will be used, an object eg. { x: 0, y: 0 } or string \'parent\', \'self\'\\nor any CSS selector</p>","name":"origin"}],"returns":[{"type":{"names":["object"]},"description":"<p>The current origin or this Interactable</p>"}],"name":"origin","longname":"Interactable#origin","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R001040","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"origin","signature":"<span class=\\"signature\\">(origin<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Gets or sets the origin of the Interactable\'s element.  The x and y\\n   * of the origin will be subtracted from action event coordinates.\\n   *\\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\\n   * rect will be used, an object eg. { x: 0, y: 0 } or string \'parent\', \'self\'\\n   * or any CSS selector\\n   *\\n   * @return {object} The current origin or this Interactable\\n   */","meta":{"range":[5315,5392],"filename":"Interactable.ts","lineno":178,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100024839","name":"Interactable#origin","type":"MethodDefinition","paramnames":["newValue"]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Gets or sets the origin of the Interactable\'s element.  The x and y\\nof the origin will be subtracted from action event coordinates.</p>","params":[{"type":{"names":["Element","object","string"]},"optional":true,"description":"<p>An HTML or SVG Element whose\\nrect will be used, an object eg. { x: 0, y: 0 } or string \'parent\', \'self\'\\nor any CSS selector</p>","name":"origin"}],"returns":[{"type":{"names":["object"]},"description":"<p>The current origin or this Interactable</p>"}],"name":"origin","longname":"Interactable#origin","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R002704","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"origin","signature":"<span class=\\"signature\\">(origin<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Gets or sets the origin of the Interactable\'s element.  The x and y\\n   * of the origin will be subtracted from action event coordinates.\\n   *\\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\\n   * rect will be used, an object eg. { x: 0, y: 0 } or string \'parent\', \'self\'\\n   * or any CSS selector\\n   *\\n   * @return {object} The current origin or this Interactable\\n   */","meta":{"range":[5315,5392],"filename":"Interactable.ts","lineno":178,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100040515","name":"Interactable#origin","type":"MethodDefinition","paramnames":["newValue"]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Gets or sets the origin of the Interactable\'s element.  The x and y\\nof the origin will be subtracted from action event coordinates.</p>","params":[{"type":{"names":["Element","object","string"]},"optional":true,"description":"<p>An HTML or SVG Element whose\\nrect will be used, an object eg. { x: 0, y: 0 } or string \'parent\', \'self\'\\nor any CSS selector</p>","name":"origin"}],"returns":[{"type":{"names":["object"]},"description":"<p>The current origin or this Interactable</p>"}],"name":"origin","longname":"Interactable#origin","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R004380","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"origin","signature":"<span class=\\"signature\\">(origin<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Gets or sets the origin of the Interactable\'s element.  The x and y\\n   * of the origin will be subtracted from action event coordinates.\\n   *\\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\\n   * rect will be used, an object eg. { x: 0, y: 0 } or string \'parent\', \'self\'\\n   * or any CSS selector\\n   *\\n   * @return {object} The current origin or this Interactable\\n   */","meta":{"range":[5315,5392],"filename":"Interactable.ts","lineno":178,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100071550","name":"Interactable#origin","type":"MethodDefinition","paramnames":["newValue"]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Gets or sets the origin of the Interactable\'s element.  The x and y\\nof the origin will be subtracted from action event coordinates.</p>","params":[{"type":{"names":["Element","object","string"]},"optional":true,"description":"<p>An HTML or SVG Element whose\\nrect will be used, an object eg. { x: 0, y: 0 } or string \'parent\', \'self\'\\nor any CSS selector</p>","name":"origin"}],"returns":[{"type":{"names":["object"]},"description":"<p>The current origin or this Interactable</p>"}],"name":"origin","longname":"Interactable#origin","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R008115","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"origin","signature":"<span class=\\"signature\\">(origin<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Returns or sets whether to prevent the browser\'s default behaviour in\\n   * response to pointer events. Can be set to:\\n   *  - `\'always\'` to always prevent\\n   *  - `\'never\'` to never prevent\\n   *  - `\'auto\'` to let interact.js try to determine what would be best\\n   *\\n   * @param {string} [newValue] `\'always\'`, `\'never\'` or `\'auto\'`\\n   * @return {string | Interactable} The current setting or this Interactable\\n   */","meta":{"range":[2310,2364],"filename":"interactablePreventDefault.ts","lineno":77,"columnno":2,"path":"core","code":{"id":"astnode100010507","name":"Interactable.prototype.preventDefault","type":"Identifier","value":"preventDefault","paramnames":[]},"shortpath":"/core/interactablePreventDefault.ts"},"description":"<p>Returns or sets whether to prevent the browser\'s default behaviour in\\nresponse to pointer events. Can be set to:</p>\\n<ul>\\n<li><code>\'always\'</code> to always prevent</li>\\n<li><code>\'never\'</code> to never prevent</li>\\n<li><code>\'auto\'</code> to let interact.js try to determine what would be best</li>\\n</ul>","params":[{"type":{"names":["string"]},"optional":true,"description":"<p><code>\'always\'</code>, <code>\'never\'</code> or <code>\'auto\'</code></p>","name":"newValue"}],"returns":[{"type":{"names":["string","Interactable"]},"description":"<p>The current setting or this Interactable</p>"}],"name":"preventDefault","longname":"Interactable#preventDefault","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R001091","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"preventDefault","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * Returns or sets whether to prevent the browser\'s default behaviour in\\n   * response to pointer events. Can be set to:\\n   *  - `\'always\'` to always prevent\\n   *  - `\'never\'` to never prevent\\n   *  - `\'auto\'` to let interact.js try to determine what would be best\\n   *\\n   * @param {string} [newValue] `\'always\'`, `\'never\'` or `\'auto\'`\\n   * @return {string | Interactable} The current setting or this Interactable\\n   */","meta":{"range":[2310,2364],"filename":"interactablePreventDefault.ts","lineno":77,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100025672","name":"Interactable.prototype.preventDefault","type":"Identifier","value":"preventDefault","paramnames":[]},"shortpath":"/interact/node_modules/@interactjs/core/interactablePreventDefault.ts"},"description":"<p>Returns or sets whether to prevent the browser\'s default behaviour in\\nresponse to pointer events. Can be set to:</p>\\n<ul>\\n<li><code>\'always\'</code> to always prevent</li>\\n<li><code>\'never\'</code> to never prevent</li>\\n<li><code>\'auto\'</code> to let interact.js try to determine what would be best</li>\\n</ul>","params":[{"type":{"names":["string"]},"optional":true,"description":"<p><code>\'always\'</code>, <code>\'never\'</code> or <code>\'auto\'</code></p>","name":"newValue"}],"returns":[{"type":{"names":["string","Interactable"]},"description":"<p>The current setting or this Interactable</p>"}],"name":"preventDefault","longname":"Interactable#preventDefault","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R002755","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"preventDefault","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * Returns or sets whether to prevent the browser\'s default behaviour in\\n   * response to pointer events. Can be set to:\\n   *  - `\'always\'` to always prevent\\n   *  - `\'never\'` to never prevent\\n   *  - `\'auto\'` to let interact.js try to determine what would be best\\n   *\\n   * @param {string} [newValue] `\'always\'`, `\'never\'` or `\'auto\'`\\n   * @return {string | Interactable} The current setting or this Interactable\\n   */","meta":{"range":[2310,2364],"filename":"interactablePreventDefault.ts","lineno":77,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100041348","name":"Interactable.prototype.preventDefault","type":"Identifier","value":"preventDefault","paramnames":[]},"shortpath":"/interactjs/node_modules/@interactjs/core/interactablePreventDefault.ts"},"description":"<p>Returns or sets whether to prevent the browser\'s default behaviour in\\nresponse to pointer events. Can be set to:</p>\\n<ul>\\n<li><code>\'always\'</code> to always prevent</li>\\n<li><code>\'never\'</code> to never prevent</li>\\n<li><code>\'auto\'</code> to let interact.js try to determine what would be best</li>\\n</ul>","params":[{"type":{"names":["string"]},"optional":true,"description":"<p><code>\'always\'</code>, <code>\'never\'</code> or <code>\'auto\'</code></p>","name":"newValue"}],"returns":[{"type":{"names":["string","Interactable"]},"description":"<p>The current setting or this Interactable</p>"}],"name":"preventDefault","longname":"Interactable#preventDefault","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R004431","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"preventDefault","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * Returns or sets whether to prevent the browser\'s default behaviour in\\n   * response to pointer events. Can be set to:\\n   *  - `\'always\'` to always prevent\\n   *  - `\'never\'` to never prevent\\n   *  - `\'auto\'` to let interact.js try to determine what would be best\\n   *\\n   * @param {string} [newValue] `\'always\'`, `\'never\'` or `\'auto\'`\\n   * @return {string | Interactable} The current setting or this Interactable\\n   */","meta":{"range":[2310,2364],"filename":"interactablePreventDefault.ts","lineno":77,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100072383","name":"Interactable.prototype.preventDefault","type":"Identifier","value":"preventDefault","paramnames":[]},"shortpath":"/types/node_modules/@interactjs/core/interactablePreventDefault.ts"},"description":"<p>Returns or sets whether to prevent the browser\'s default behaviour in\\nresponse to pointer events. Can be set to:</p>\\n<ul>\\n<li><code>\'always\'</code> to always prevent</li>\\n<li><code>\'never\'</code> to never prevent</li>\\n<li><code>\'auto\'</code> to let interact.js try to determine what would be best</li>\\n</ul>","params":[{"type":{"names":["string"]},"optional":true,"description":"<p><code>\'always\'</code>, <code>\'never\'</code> or <code>\'auto\'</code></p>","name":"newValue"}],"returns":[{"type":{"names":["string","Interactable"]},"description":"<p>The current setting or this Interactable</p>"}],"name":"preventDefault","longname":"Interactable#preventDefault","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R008166","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"preventDefault","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * Returns or sets the function used to calculate the interactable\'s\\n   * element\'s rectangle\\n   *\\n   * @param {function} [checker] A function which returns this Interactable\'s\\n   * bounding rectangle. See {@link Interactable.getRect}\\n   * @return {function | object} The checker function or this Interactable\\n   */","meta":{"range":[4058,4579],"filename":"Interactable.ts","lineno":128,"columnno":2,"path":"core","code":{"id":"astnode100009529","name":"Interactable#rectChecker","type":"MethodDefinition","paramnames":["checker"]},"vars":{"":null},"shortpath":"/core/Interactable.ts"},"description":"<p>Returns or sets the function used to calculate the interactable\'s\\nelement\'s rectangle</p>","params":[{"type":{"names":["function"]},"optional":true,"description":"<p>A function which returns this Interactable\'s\\nbounding rectangle. See {@link Interactable.getRect}</p>","name":"checker"}],"returns":[{"type":{"names":["function","object"]},"description":"<p>The checker function or this Interactable</p>"}],"name":"rectChecker","longname":"Interactable#rectChecker","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R001030","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"rectChecker","signature":"<span class=\\"signature\\">(checker<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {function|object}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Returns or sets the function used to calculate the interactable\'s\\n   * element\'s rectangle\\n   *\\n   * @param {function} [checker] A function which returns this Interactable\'s\\n   * bounding rectangle. See {@link Interactable.getRect}\\n   * @return {function | object} The checker function or this Interactable\\n   */","meta":{"range":[4058,4579],"filename":"Interactable.ts","lineno":128,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100024694","name":"Interactable#rectChecker","type":"MethodDefinition","paramnames":["checker"]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Returns or sets the function used to calculate the interactable\'s\\nelement\'s rectangle</p>","params":[{"type":{"names":["function"]},"optional":true,"description":"<p>A function which returns this Interactable\'s\\nbounding rectangle. See {@link Interactable.getRect}</p>","name":"checker"}],"returns":[{"type":{"names":["function","object"]},"description":"<p>The checker function or this Interactable</p>"}],"name":"rectChecker","longname":"Interactable#rectChecker","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R002694","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"rectChecker","signature":"<span class=\\"signature\\">(checker<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {function|object}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Returns or sets the function used to calculate the interactable\'s\\n   * element\'s rectangle\\n   *\\n   * @param {function} [checker] A function which returns this Interactable\'s\\n   * bounding rectangle. See {@link Interactable.getRect}\\n   * @return {function | object} The checker function or this Interactable\\n   */","meta":{"range":[4058,4579],"filename":"Interactable.ts","lineno":128,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100040370","name":"Interactable#rectChecker","type":"MethodDefinition","paramnames":["checker"]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Returns or sets the function used to calculate the interactable\'s\\nelement\'s rectangle</p>","params":[{"type":{"names":["function"]},"optional":true,"description":"<p>A function which returns this Interactable\'s\\nbounding rectangle. See {@link Interactable.getRect}</p>","name":"checker"}],"returns":[{"type":{"names":["function","object"]},"description":"<p>The checker function or this Interactable</p>"}],"name":"rectChecker","longname":"Interactable#rectChecker","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R004370","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"rectChecker","signature":"<span class=\\"signature\\">(checker<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {function|object}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Returns or sets the function used to calculate the interactable\'s\\n   * element\'s rectangle\\n   *\\n   * @param {function} [checker] A function which returns this Interactable\'s\\n   * bounding rectangle. See {@link Interactable.getRect}\\n   * @return {function | object} The checker function or this Interactable\\n   */","meta":{"range":[4058,4579],"filename":"Interactable.ts","lineno":128,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100071405","name":"Interactable#rectChecker","type":"MethodDefinition","paramnames":["checker"]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Returns or sets the function used to calculate the interactable\'s\\nelement\'s rectangle</p>","params":[{"type":{"names":["function"]},"optional":true,"description":"<p>A function which returns this Interactable\'s\\nbounding rectangle. See {@link Interactable.getRect}</p>","name":"checker"}],"returns":[{"type":{"names":["function","object"]},"description":"<p>The checker function or this Interactable</p>"}],"name":"rectChecker","longname":"Interactable#rectChecker","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R008105","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"rectChecker","signature":"<span class=\\"signature\\">(checker<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {function|object}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * ```js\\n   * const interactable = interact(target)\\n   * const drag = { name: drag, axis: \'x\' }\\n   * const resize = { name: resize, edges: { left: true, bottom: true }\\n   *\\n   * interactable.reflow(drag)\\n   * interactable.reflow(resize)\\n   * ```\\n   *\\n   * Start an action sequence to re-apply modifiers, check drops, etc.\\n   *\\n   * @param { Object } action The action to begin\\n   * @param { string } action.name The name of the action\\n   * @returns { Promise } A promise that resolves to the `Interactable` when actions on all targets have ended\\n   */","meta":{"range":[1114,1209],"filename":"plugin.ts","lineno":39,"columnno":2,"path":"interactjs/node_modules/@interactjs/reflow","code":{"id":"astnode100054148","name":"Interactable.prototype.reflow","type":"FunctionExpression","paramnames":["action"]},"shortpath":"/interactjs/node_modules/@interactjs/reflow/plugin.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>const interactable = interact(target)\\nconst drag = { name: drag, axis: \'x\' }\\nconst resize = { name: resize, edges: { left: true, bottom: true }\\n\\ninteractable.reflow(drag)\\ninteractable.reflow(resize)\\n</code></pre>\\n<p>Start an action sequence to re-apply modifiers, check drops, etc.</p>","params":[{"type":{"names":["Object"]},"description":"<p>The action to begin</p>","name":"action","subparams":[{"type":{"names":["string"]},"description":"<p>The name of the action</p>","name":"name"}]},null],"returns":[{"type":{"names":["Promise"]},"description":"<p>A promise that resolves to the <code>Interactable</code> when actions on all targets have ended</p>"}],"name":"reflow","longname":"Interactable#reflow","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R005995","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"reflow","signature":"<span class=\\"signature\\">(action)</span><span class=\\"type-signature\\"> &rarr; {Promise}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * ```js\\n   * const interactable = interact(target)\\n   * const drag = { name: drag, axis: \'x\' }\\n   * const resize = { name: resize, edges: { left: true, bottom: true }\\n   *\\n   * interactable.reflow(drag)\\n   * interactable.reflow(resize)\\n   * ```\\n   *\\n   * Start an action sequence to re-apply modifiers, check drops, etc.\\n   *\\n   * @param { Object } action The action to begin\\n   * @param { string } action.name The name of the action\\n   * @returns { Promise } A promise that resolves to the `Interactable` when actions on all targets have ended\\n   */","meta":{"range":[1114,1209],"filename":"plugin.ts","lineno":39,"columnno":2,"path":"reflow","code":{"id":"astnode100066115","name":"Interactable.prototype.reflow","type":"FunctionExpression","paramnames":["action"]},"shortpath":"/reflow/plugin.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>const interactable = interact(target)\\nconst drag = { name: drag, axis: \'x\' }\\nconst resize = { name: resize, edges: { left: true, bottom: true }\\n\\ninteractable.reflow(drag)\\ninteractable.reflow(resize)\\n</code></pre>\\n<p>Start an action sequence to re-apply modifiers, check drops, etc.</p>","params":[{"type":{"names":["Object"]},"description":"<p>The action to begin</p>","name":"action","subparams":[{"type":{"names":["string"]},"description":"<p>The name of the action</p>","name":"name"}]},null],"returns":[{"type":{"names":["Promise"]},"description":"<p>A promise that resolves to the <code>Interactable</code> when actions on all targets have ended</p>"}],"name":"reflow","longname":"Interactable#reflow","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R007525","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"reflow","signature":"<span class=\\"signature\\">(action)</span><span class=\\"type-signature\\"> &rarr; {Promise}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * ```js\\n   * const interactable = interact(target)\\n   * const drag = { name: drag, axis: \'x\' }\\n   * const resize = { name: resize, edges: { left: true, bottom: true }\\n   *\\n   * interactable.reflow(drag)\\n   * interactable.reflow(resize)\\n   * ```\\n   *\\n   * Start an action sequence to re-apply modifiers, check drops, etc.\\n   *\\n   * @param { Object } action The action to begin\\n   * @param { string } action.name The name of the action\\n   * @returns { Promise } A promise that resolves to the `Interactable` when actions on all targets have ended\\n   */","meta":{"range":[1114,1209],"filename":"plugin.ts","lineno":39,"columnno":2,"path":"types/node_modules/@interactjs/reflow","code":{"id":"astnode100085012","name":"Interactable.prototype.reflow","type":"FunctionExpression","paramnames":["action"]},"shortpath":"/types/node_modules/@interactjs/reflow/plugin.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>const interactable = interact(target)\\nconst drag = { name: drag, axis: \'x\' }\\nconst resize = { name: resize, edges: { left: true, bottom: true }\\n\\ninteractable.reflow(drag)\\ninteractable.reflow(resize)\\n</code></pre>\\n<p>Start an action sequence to re-apply modifiers, check drops, etc.</p>","params":[{"type":{"names":["Object"]},"description":"<p>The action to begin</p>","name":"action","subparams":[{"type":{"names":["string"]},"description":"<p>The name of the action</p>","name":"name"}]},null],"returns":[{"type":{"names":["Promise"]},"description":"<p>A promise that resolves to the <code>Interactable</code> when actions on all targets have ended</p>"}],"name":"reflow","longname":"Interactable#reflow","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R009674","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"reflow","signature":"<span class=\\"signature\\">(action)</span><span class=\\"type-signature\\"> &rarr; {Promise}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * ```js\\n   * interact(element).resizable({\\n   *   onstart: function (event) {},\\n   *   onmove : function (event) {},\\n   *   onend  : function (event) {},\\n   *\\n   *   edges: {\\n   *     top   : true,       // Use pointer coords to check for resize.\\n   *     left  : false,      // Disable resizing from left edge.\\n   *     bottom: \'.resize-s\',// Resize if pointer target matches selector\\n   *     right : handleEl    // Resize if pointer target is the given Element\\n   *   },\\n   *\\n   *     // Width and height can be adjusted independently. When `true`, width and\\n   *     // height are adjusted at a 1:1 ratio.\\n   *     square: false,\\n   *\\n   *     // Width and height can be adjusted independently. When `true`, width and\\n   *     // height maintain the aspect ratio they had when resizing started.\\n   *     preserveAspectRatio: false,\\n   *\\n   *   // a value of \'none\' will limit the resize rect to a minimum of 0x0\\n   *   // \'negate\' will allow the rect to have negative width/height\\n   *   // \'reposition\' will keep the width/height positive by swapping\\n   *   // the top and bottom edges and/or swapping the left and right edges\\n   *   invert: \'none\' || \'negate\' || \'reposition\'\\n   *\\n   *   // limit multiple resizes.\\n   *   // See the explanation in the {@link Interactable.draggable} example\\n   *   max: Infinity,\\n   *   maxPerElement: 1,\\n   * })\\n   *\\n   * var isResizeable = interact(element).resizable()\\n   * ```\\n   *\\n   * Gets or sets whether resize actions can be performed on the target\\n   *\\n   * @param {boolean | object} [options] true/false or An object with event\\n   * listeners to be fired on resize events (object makes the Interactable\\n   * resizable)\\n   * @return {boolean | Interactable} A boolean indicating if this can be the\\n   * target of resize elements, or this Interactable\\n   */","meta":{"range":[2369,2472],"filename":"plugin.ts","lineno":55,"columnno":2,"path":"actions/resize","code":{"id":"astnode100003491","name":"Interactable.prototype.resizable","type":"FunctionExpression","paramnames":["options"]},"shortpath":"/actions/resize/plugin.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(element).resizable({\\n  onstart: function (event) {},\\n  onmove : function (event) {},\\n  onend  : function (event) {},\\n\\n  edges: {\\n    top   : true,       // Use pointer coords to check for resize.\\n    left  : false,      // Disable resizing from left edge.\\n    bottom: \'.resize-s\',// Resize if pointer target matches selector\\n    right : handleEl    // Resize if pointer target is the given Element\\n  },\\n\\n    // Width and height can be adjusted independently. When `true`, width and\\n    // height are adjusted at a 1:1 ratio.\\n    square: false,\\n\\n    // Width and height can be adjusted independently. When `true`, width and\\n    // height maintain the aspect ratio they had when resizing started.\\n    preserveAspectRatio: false,\\n\\n  // a value of \'none\' will limit the resize rect to a minimum of 0x0\\n  // \'negate\' will allow the rect to have negative width/height\\n  // \'reposition\' will keep the width/height positive by swapping\\n  // the top and bottom edges and/or swapping the left and right edges\\n  invert: \'none\' || \'negate\' || \'reposition\'\\n\\n  // limit multiple resizes.\\n  // See the explanation in the {@link Interactable.draggable} example\\n  max: Infinity,\\n  maxPerElement: 1,\\n})\\n\\nvar isResizeable = interact(element).resizable()\\n</code></pre>\\n<p>Gets or sets whether resize actions can be performed on the target</p>","params":[{"type":{"names":["boolean","object"]},"optional":true,"description":"<p>true/false or An object with event\\nlisteners to be fired on resize events (object makes the Interactable\\nresizable)</p>","name":"options"}],"returns":[{"type":{"names":["boolean","Interactable"]},"description":"<p>A boolean indicating if this can be the\\ntarget of resize elements, or this Interactable</p>"}],"name":"resizable","longname":"Interactable#resizable","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R000359","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"resizable","signature":"<span class=\\"signature\\">(options<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {boolean|<a href=\\"/docs/api/Interactable.html\\">Interactable</a>}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Reset the options of this Interactable\\n   *\\n   * @param {object} options The new settings to apply\\n   * @return {object} This Interactable\\n   */","meta":{"range":[9618,10275],"filename":"Interactable.ts","lineno":346,"columnno":2,"path":"core","code":{"id":"astnode100010048","name":"Interactable#set","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null},"shortpath":"/core/Interactable.ts"},"description":"<p>Reset the options of this Interactable</p>","params":[{"type":{"names":["object"]},"description":"<p>The new settings to apply</p>","name":"options"}],"returns":[{"type":{"names":["object"]},"description":"<p>This Interactable</p>"}],"name":"set","longname":"Interactable#set","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R001059","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"set","signature":"<span class=\\"signature\\">(options)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Reset the options of this Interactable\\n   *\\n   * @param {object} options The new settings to apply\\n   * @return {object} This Interactable\\n   */","meta":{"range":[9618,10275],"filename":"Interactable.ts","lineno":346,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100025213","name":"Interactable#set","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Reset the options of this Interactable</p>","params":[{"type":{"names":["object"]},"description":"<p>The new settings to apply</p>","name":"options"}],"returns":[{"type":{"names":["object"]},"description":"<p>This Interactable</p>"}],"name":"set","longname":"Interactable#set","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R002723","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"set","signature":"<span class=\\"signature\\">(options)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Reset the options of this Interactable\\n   *\\n   * @param {object} options The new settings to apply\\n   * @return {object} This Interactable\\n   */","meta":{"range":[9618,10275],"filename":"Interactable.ts","lineno":346,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100040889","name":"Interactable#set","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Reset the options of this Interactable</p>","params":[{"type":{"names":["object"]},"description":"<p>The new settings to apply</p>","name":"options"}],"returns":[{"type":{"names":["object"]},"description":"<p>This Interactable</p>"}],"name":"set","longname":"Interactable#set","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R004399","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"set","signature":"<span class=\\"signature\\">(options)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Reset the options of this Interactable\\n   *\\n   * @param {object} options The new settings to apply\\n   * @return {object} This Interactable\\n   */","meta":{"range":[9618,10275],"filename":"Interactable.ts","lineno":346,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100071924","name":"Interactable#set","type":"MethodDefinition","paramnames":["options"]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Reset the options of this Interactable</p>","params":[{"type":{"names":["object"]},"description":"<p>The new settings to apply</p>","name":"options"}],"returns":[{"type":{"names":["object"]},"description":"<p>This Interactable</p>"}],"name":"set","longname":"Interactable#set","kind":"function","memberof":"Interactable","scope":"instance","___id":"T000002R008134","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"set","signature":"<span class=\\"signature\\">(options)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Returns or sets whether the the cursor should be changed depending on the\\n   * action that would be performed if the mouse were pressed and dragged.\\n   *\\n   * @param {boolean} [newValue]\\n   * @return {boolean | Interactable} The current setting or this Interactable\\n   */","meta":{"range":[4079,4127],"filename":"InteractableMethods.ts","lineno":140,"columnno":2,"path":"auto-start","code":{"id":"astnode100007554","name":"Interactable.prototype.styleCursor","type":"Identifier","value":"styleCursor","paramnames":[]},"shortpath":"/auto-start/InteractableMethods.ts"},"description":"<p>Returns or sets whether the the cursor should be changed depending on the\\naction that would be performed if the mouse were pressed and dragged.</p>","params":[{"type":{"names":["boolean"]},"optional":true,"name":"newValue"}],"returns":[{"type":{"names":["boolean","Interactable"]},"description":"<p>The current setting or this Interactable</p>"}],"name":"styleCursor","longname":"Interactable#styleCursor","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R000828","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"styleCursor","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * Returns or sets whether the the cursor should be changed depending on the\\n   * action that would be performed if the mouse were pressed and dragged.\\n   *\\n   * @param {boolean} [newValue]\\n   * @return {boolean | Interactable} The current setting or this Interactable\\n   */","meta":{"range":[4079,4127],"filename":"InteractableMethods.ts","lineno":140,"columnno":2,"path":"interactjs/node_modules/@interactjs/auto-start","code":{"id":"astnode100038439","name":"Interactable.prototype.styleCursor","type":"Identifier","value":"styleCursor","paramnames":[]},"shortpath":"/interactjs/node_modules/@interactjs/auto-start/InteractableMethods.ts"},"description":"<p>Returns or sets whether the the cursor should be changed depending on the\\naction that would be performed if the mouse were pressed and dragged.</p>","params":[{"type":{"names":["boolean"]},"optional":true,"name":"newValue"}],"returns":[{"type":{"names":["boolean","Interactable"]},"description":"<p>The current setting or this Interactable</p>"}],"name":"styleCursor","longname":"Interactable#styleCursor","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R004173","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"styleCursor","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * Returns or sets whether the the cursor should be changed depending on the\\n   * action that would be performed if the mouse were pressed and dragged.\\n   *\\n   * @param {boolean} [newValue]\\n   * @return {boolean | Interactable} The current setting or this Interactable\\n   */","meta":{"range":[4079,4127],"filename":"InteractableMethods.ts","lineno":140,"columnno":2,"path":"types/node_modules/@interactjs/auto-start","code":{"id":"astnode100069478","name":"Interactable.prototype.styleCursor","type":"Identifier","value":"styleCursor","paramnames":[]},"shortpath":"/types/node_modules/@interactjs/auto-start/InteractableMethods.ts"},"description":"<p>Returns or sets whether the the cursor should be changed depending on the\\naction that would be performed if the mouse were pressed and dragged.</p>","params":[{"type":{"names":["boolean"]},"optional":true,"name":"newValue"}],"returns":[{"type":{"names":["boolean","Interactable"]},"description":"<p>The current setting or this Interactable</p>"}],"name":"styleCursor","longname":"Interactable#styleCursor","kind":"member","memberof":"Interactable","scope":"instance","___id":"T000002R007909","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"styleCursor","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * Remove this interactable from the list of interactables and remove it\'s\\n   * action capabilities and event listeners\\n   */","meta":{"range":[10414,11189],"filename":"Interactable.ts","lineno":380,"columnno":2,"path":"core","code":{"id":"astnode100010165","name":"Interactable#unset","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/core/Interactable.ts"},"description":"<p>Remove this interactable from the list of interactables and remove it\'s\\naction capabilities and event listeners</p>","name":"unset","longname":"Interactable#unset","kind":"function","memberof":"Interactable","scope":"instance","params":[],"___id":"T000002R001068","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"unset","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Remove this interactable from the list of interactables and remove it\'s\\n   * action capabilities and event listeners\\n   */","meta":{"range":[10414,11189],"filename":"Interactable.ts","lineno":380,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100025330","name":"Interactable#unset","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Remove this interactable from the list of interactables and remove it\'s\\naction capabilities and event listeners</p>","name":"unset","longname":"Interactable#unset","kind":"function","memberof":"Interactable","scope":"instance","params":[],"___id":"T000002R002732","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"unset","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Remove this interactable from the list of interactables and remove it\'s\\n   * action capabilities and event listeners\\n   */","meta":{"range":[10414,11189],"filename":"Interactable.ts","lineno":380,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100041006","name":"Interactable#unset","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Remove this interactable from the list of interactables and remove it\'s\\naction capabilities and event listeners</p>","name":"unset","longname":"Interactable#unset","kind":"function","memberof":"Interactable","scope":"instance","params":[],"___id":"T000002R004408","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"unset","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/**\\n   * Remove this interactable from the list of interactables and remove it\'s\\n   * action capabilities and event listeners\\n   */","meta":{"range":[10414,11189],"filename":"Interactable.ts","lineno":380,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100072041","name":"Interactable#unset","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/Interactable.ts"},"description":"<p>Remove this interactable from the list of interactables and remove it\'s\\naction capabilities and event listeners</p>","name":"unset","longname":"Interactable#unset","kind":"function","memberof":"Interactable","scope":"instance","params":[],"___id":"T000002R008143","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"unset","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":["<a href=\\"/docs/api/Interactable.html\\">#Interactable</a>#"]},{"comment":"/** */","meta":{"range":[310,2646],"filename":"InteractEvent.ts","lineno":10,"columnno":2,"path":"core","code":{"id":"astnode100011081","name":"exports.InteractEvent","type":"MethodDefinition","paramnames":["interaction","event","actionName","phase","element","preEnd","type"]},"vars":{"":null},"shortpath":"/core/InteractEvent.ts"},"name":"InteractEvent","longname":"InteractEvent#InteractEvent","kind":"class","memberof":"InteractEvent","scope":"instance","params":[],"___id":"T000003R000007","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"InteractEvent","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/** */","meta":{"range":[310,2646],"filename":"InteractEvent.ts","lineno":10,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100026246","name":"exports.InteractEvent","type":"MethodDefinition","paramnames":["interaction","event","actionName","phase","element","preEnd","type"]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/InteractEvent.ts"},"name":"InteractEvent","longname":"InteractEvent#InteractEvent","kind":"class","memberof":"InteractEvent","scope":"instance","params":[],"___id":"T000003R000008","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"InteractEvent","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/** */","meta":{"range":[310,2646],"filename":"InteractEvent.ts","lineno":10,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100041922","name":"exports.InteractEvent","type":"MethodDefinition","paramnames":["interaction","event","actionName","phase","element","preEnd","type"]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/InteractEvent.ts"},"name":"InteractEvent","longname":"InteractEvent#InteractEvent","kind":"class","memberof":"InteractEvent","scope":"instance","params":[],"___id":"T000003R000009","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"InteractEvent","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/** */","meta":{"range":[310,2646],"filename":"InteractEvent.ts","lineno":10,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100072957","name":"exports.InteractEvent","type":"MethodDefinition","paramnames":["interaction","event","actionName","phase","element","preEnd","type"]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/InteractEvent.ts"},"name":"InteractEvent","longname":"InteractEvent#InteractEvent","kind":"class","memberof":"InteractEvent","scope":"instance","params":[],"___id":"T000003R000010","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"InteractEvent","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * Don\'t call listeners on the remaining targets\\n   */","meta":{"range":[3629,3732],"filename":"InteractEvent.ts","lineno":187,"columnno":2,"path":"core","code":{"id":"astnode100011734","name":"InteractEvent#stopImmediatePropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/core/InteractEvent.ts"},"description":"<p>Don\'t call listeners on the remaining targets</p>","name":"stopImmediatePropagation","longname":"InteractEvent#stopImmediatePropagation","kind":"function","memberof":"InteractEvent","scope":"instance","params":[],"___id":"T000002R001207","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"stopImmediatePropagation","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * Don\'t call listeners on the remaining targets\\n   */","meta":{"range":[3629,3732],"filename":"InteractEvent.ts","lineno":187,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100026899","name":"InteractEvent#stopImmediatePropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/InteractEvent.ts"},"description":"<p>Don\'t call listeners on the remaining targets</p>","name":"stopImmediatePropagation","longname":"InteractEvent#stopImmediatePropagation","kind":"function","memberof":"InteractEvent","scope":"instance","params":[],"___id":"T000002R002871","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"stopImmediatePropagation","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * Don\'t call listeners on the remaining targets\\n   */","meta":{"range":[3629,3732],"filename":"InteractEvent.ts","lineno":187,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100042575","name":"InteractEvent#stopImmediatePropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/InteractEvent.ts"},"description":"<p>Don\'t call listeners on the remaining targets</p>","name":"stopImmediatePropagation","longname":"InteractEvent#stopImmediatePropagation","kind":"function","memberof":"InteractEvent","scope":"instance","params":[],"___id":"T000002R004547","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"stopImmediatePropagation","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * Don\'t call listeners on the remaining targets\\n   */","meta":{"range":[3629,3732],"filename":"InteractEvent.ts","lineno":187,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100073610","name":"InteractEvent#stopImmediatePropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/InteractEvent.ts"},"description":"<p>Don\'t call listeners on the remaining targets</p>","name":"stopImmediatePropagation","longname":"InteractEvent#stopImmediatePropagation","kind":"function","memberof":"InteractEvent","scope":"instance","params":[],"___id":"T000002R008282","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"stopImmediatePropagation","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * Don\'t call any other listeners (even on the current target)\\n   */","meta":{"range":[3814,3873],"filename":"InteractEvent.ts","lineno":194,"columnno":2,"path":"core","code":{"id":"astnode100011748","name":"InteractEvent#stopPropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/core/InteractEvent.ts"},"description":"<p>Don\'t call any other listeners (even on the current target)</p>","name":"stopPropagation","longname":"InteractEvent#stopPropagation","kind":"function","memberof":"InteractEvent","scope":"instance","params":[],"___id":"T000002R001210","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"stopPropagation","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * Don\'t call any other listeners (even on the current target)\\n   */","meta":{"range":[3814,3873],"filename":"InteractEvent.ts","lineno":194,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100026913","name":"InteractEvent#stopPropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/InteractEvent.ts"},"description":"<p>Don\'t call any other listeners (even on the current target)</p>","name":"stopPropagation","longname":"InteractEvent#stopPropagation","kind":"function","memberof":"InteractEvent","scope":"instance","params":[],"___id":"T000002R002874","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"stopPropagation","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * Don\'t call any other listeners (even on the current target)\\n   */","meta":{"range":[3814,3873],"filename":"InteractEvent.ts","lineno":194,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100042589","name":"InteractEvent#stopPropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/InteractEvent.ts"},"description":"<p>Don\'t call any other listeners (even on the current target)</p>","name":"stopPropagation","longname":"InteractEvent#stopPropagation","kind":"function","memberof":"InteractEvent","scope":"instance","params":[],"___id":"T000002R004550","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"stopPropagation","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * Don\'t call any other listeners (even on the current target)\\n   */","meta":{"range":[3814,3873],"filename":"InteractEvent.ts","lineno":194,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100073624","name":"InteractEvent#stopPropagation","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/InteractEvent.ts"},"description":"<p>Don\'t call any other listeners (even on the current target)</p>","name":"stopPropagation","longname":"InteractEvent#stopPropagation","kind":"function","memberof":"InteractEvent","scope":"instance","params":[],"___id":"T000002R008285","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"stopPropagation","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * ```js\\n   * interact(target)\\n   *   .draggable(true)\\n   *   .on(\'move\', function (event) {\\n   *     if (event.pageX > 1000) {\\n   *       // end the current action\\n   *       event.interaction.end()\\n   *       // stop all further listeners from being called\\n   *       event.stopImmediatePropagation()\\n   *     }\\n   *   })\\n   * ```\\n   *\\n   * @param {PointerEvent} [event]\\n   */","meta":{"range":[9114,9464],"filename":"Interaction.ts","lineno":412,"columnno":2,"path":"core","code":{"id":"astnode100012941","name":"Interaction#end","type":"MethodDefinition","paramnames":["event"]},"vars":{"":null},"shortpath":"/core/Interaction.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(target)\\n  .draggable(true)\\n  .on(\'move\', function (event) {\\n    if (event.pageX > 1000) {\\n      // end the current action\\n      event.interaction.end()\\n      // stop all further listeners from being called\\n      event.stopImmediatePropagation()\\n    }\\n  })\\n</code></pre>","params":[{"type":{"names":["PointerEvent"]},"optional":true,"name":"event"}],"name":"end","longname":"Interaction#end","kind":"function","memberof":"Interaction","scope":"instance","___id":"T000002R001375","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"end","signature":"<span class=\\"signature\\">(event<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * ```js\\n   * interact(target)\\n   *   .draggable(true)\\n   *   .on(\'move\', function (event) {\\n   *     if (event.pageX > 1000) {\\n   *       // end the current action\\n   *       event.interaction.end()\\n   *       // stop all further listeners from being called\\n   *       event.stopImmediatePropagation()\\n   *     }\\n   *   })\\n   * ```\\n   *\\n   * @param {PointerEvent} [event]\\n   */","meta":{"range":[9114,9464],"filename":"Interaction.ts","lineno":412,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100028106","name":"Interaction#end","type":"MethodDefinition","paramnames":["event"]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/Interaction.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(target)\\n  .draggable(true)\\n  .on(\'move\', function (event) {\\n    if (event.pageX > 1000) {\\n      // end the current action\\n      event.interaction.end()\\n      // stop all further listeners from being called\\n      event.stopImmediatePropagation()\\n    }\\n  })\\n</code></pre>","params":[{"type":{"names":["PointerEvent"]},"optional":true,"name":"event"}],"name":"end","longname":"Interaction#end","kind":"function","memberof":"Interaction","scope":"instance","___id":"T000002R003039","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"end","signature":"<span class=\\"signature\\">(event<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * ```js\\n   * interact(target)\\n   *   .draggable(true)\\n   *   .on(\'move\', function (event) {\\n   *     if (event.pageX > 1000) {\\n   *       // end the current action\\n   *       event.interaction.end()\\n   *       // stop all further listeners from being called\\n   *       event.stopImmediatePropagation()\\n   *     }\\n   *   })\\n   * ```\\n   *\\n   * @param {PointerEvent} [event]\\n   */","meta":{"range":[9114,9464],"filename":"Interaction.ts","lineno":412,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100043782","name":"Interaction#end","type":"MethodDefinition","paramnames":["event"]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/Interaction.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(target)\\n  .draggable(true)\\n  .on(\'move\', function (event) {\\n    if (event.pageX > 1000) {\\n      // end the current action\\n      event.interaction.end()\\n      // stop all further listeners from being called\\n      event.stopImmediatePropagation()\\n    }\\n  })\\n</code></pre>","params":[{"type":{"names":["PointerEvent"]},"optional":true,"name":"event"}],"name":"end","longname":"Interaction#end","kind":"function","memberof":"Interaction","scope":"instance","___id":"T000002R004715","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"end","signature":"<span class=\\"signature\\">(event<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * ```js\\n   * interact(target)\\n   *   .draggable(true)\\n   *   .on(\'move\', function (event) {\\n   *     if (event.pageX > 1000) {\\n   *       // end the current action\\n   *       event.interaction.end()\\n   *       // stop all further listeners from being called\\n   *       event.stopImmediatePropagation()\\n   *     }\\n   *   })\\n   * ```\\n   *\\n   * @param {PointerEvent} [event]\\n   */","meta":{"range":[9114,9464],"filename":"Interaction.ts","lineno":412,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100074817","name":"Interaction#end","type":"MethodDefinition","paramnames":["event"]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/Interaction.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(target)\\n  .draggable(true)\\n  .on(\'move\', function (event) {\\n    if (event.pageX > 1000) {\\n      // end the current action\\n      event.interaction.end()\\n      // stop all further listeners from being called\\n      event.stopImmediatePropagation()\\n    }\\n  })\\n</code></pre>","params":[{"type":{"names":["PointerEvent"]},"optional":true,"name":"event"}],"name":"end","longname":"Interaction#end","kind":"function","memberof":"Interaction","scope":"instance","___id":"T000002R008450","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"end","signature":"<span class=\\"signature\\">(event<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/** */","meta":{"range":[2424,2977],"filename":"Interaction.ts","lineno":89,"columnno":2,"path":"core","code":{"id":"astnode100012182","name":"exports.Interaction","type":"MethodDefinition","paramnames":[""]},"vars":{"":null},"shortpath":"/core/Interaction.ts"},"name":"Interaction","longname":"Interaction#Interaction","kind":"class","memberof":"Interaction","scope":"instance","params":[],"___id":"T000003R000011","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"Interaction","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/** */","meta":{"range":[2424,2977],"filename":"Interaction.ts","lineno":89,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100027347","name":"exports.Interaction","type":"MethodDefinition","paramnames":[""]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/Interaction.ts"},"name":"Interaction","longname":"Interaction#Interaction","kind":"class","memberof":"Interaction","scope":"instance","params":[],"___id":"T000003R000012","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"Interaction","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/** */","meta":{"range":[2424,2977],"filename":"Interaction.ts","lineno":89,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100043023","name":"exports.Interaction","type":"MethodDefinition","paramnames":[""]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/Interaction.ts"},"name":"Interaction","longname":"Interaction#Interaction","kind":"class","memberof":"Interaction","scope":"instance","params":[],"___id":"T000003R000013","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"Interaction","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/** */","meta":{"range":[2424,2977],"filename":"Interaction.ts","lineno":89,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100074058","name":"exports.Interaction","type":"MethodDefinition","paramnames":[""]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/Interaction.ts"},"name":"Interaction","longname":"Interaction#Interaction","kind":"class","memberof":"Interaction","scope":"instance","params":[],"___id":"T000003R000014","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"Interaction","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * @alias Interaction.prototype.move\\n   */","meta":{"range":[1808,1954],"filename":"Interaction.ts","lineno":165,"columnno":2,"path":"core","code":{"id":"astnode100012139","name":"doMove","type":"ClassProperty"},"shortpath":"/core/Interaction.ts"},"alias":"Interaction.prototype.move","name":"move","longname":"Interaction#move","kind":"member","memberof":"Interaction","scope":"instance","___id":"T000002R001287","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"move","ancestors":[],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * ```js\\n   * interact(target)\\n   *   .draggable(true)\\n   *   .on(\'dragmove\', function (event) {\\n   *     if (someCondition) {\\n   *       // change the snap settings\\n   *       event.interactable.draggable({ snap: { targets: [] }})\\n   *       // fire another move event with re-calculated snap\\n   *       event.interaction.move()\\n   *     }\\n   *   })\\n   * ```\\n   *\\n   * Force a move of the current action at the same coordinates. Useful if\\n   * snap/restrict has been changed and you want a movement with the new\\n   * settings.\\n   */","meta":{"range":[7427,7821],"filename":"Interaction.ts","lineno":343,"columnno":2,"path":"core","code":{"id":"astnode100012751","name":"Interaction#move","type":"MethodDefinition","paramnames":["signalArg"]},"vars":{"":null},"shortpath":"/core/Interaction.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(target)\\n  .draggable(true)\\n  .on(\'dragmove\', function (event) {\\n    if (someCondition) {\\n      // change the snap settings\\n      event.interactable.draggable({ snap: { targets: [] }})\\n      // fire another move event with re-calculated snap\\n      event.interaction.move()\\n    }\\n  })\\n</code></pre>\\n<p>Force a move of the current action at the same coordinates. Useful if\\nsnap/restrict has been changed and you want a movement with the new\\nsettings.</p>","name":"move","longname":"Interaction#move","kind":"function","memberof":"Interaction","scope":"instance","params":[],"___id":"T000002R001351","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"move","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * @alias Interaction.prototype.move\\n   */","meta":{"range":[1808,1954],"filename":"Interaction.ts","lineno":165,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100027304","name":"doMove","type":"ClassProperty"},"shortpath":"/interact/node_modules/@interactjs/core/Interaction.ts"},"alias":"Interaction.prototype.move","name":"move","longname":"Interaction#move","kind":"member","memberof":"Interaction","scope":"instance","___id":"T000002R002951","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"move","ancestors":[],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * ```js\\n   * interact(target)\\n   *   .draggable(true)\\n   *   .on(\'dragmove\', function (event) {\\n   *     if (someCondition) {\\n   *       // change the snap settings\\n   *       event.interactable.draggable({ snap: { targets: [] }})\\n   *       // fire another move event with re-calculated snap\\n   *       event.interaction.move()\\n   *     }\\n   *   })\\n   * ```\\n   *\\n   * Force a move of the current action at the same coordinates. Useful if\\n   * snap/restrict has been changed and you want a movement with the new\\n   * settings.\\n   */","meta":{"range":[7427,7821],"filename":"Interaction.ts","lineno":343,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100027916","name":"Interaction#move","type":"MethodDefinition","paramnames":["signalArg"]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/Interaction.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(target)\\n  .draggable(true)\\n  .on(\'dragmove\', function (event) {\\n    if (someCondition) {\\n      // change the snap settings\\n      event.interactable.draggable({ snap: { targets: [] }})\\n      // fire another move event with re-calculated snap\\n      event.interaction.move()\\n    }\\n  })\\n</code></pre>\\n<p>Force a move of the current action at the same coordinates. Useful if\\nsnap/restrict has been changed and you want a movement with the new\\nsettings.</p>","name":"move","longname":"Interaction#move","kind":"function","memberof":"Interaction","scope":"instance","params":[],"___id":"T000002R003015","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"move","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * @alias Interaction.prototype.move\\n   */","meta":{"range":[1808,1954],"filename":"Interaction.ts","lineno":165,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100042980","name":"doMove","type":"ClassProperty"},"shortpath":"/interactjs/node_modules/@interactjs/core/Interaction.ts"},"alias":"Interaction.prototype.move","name":"move","longname":"Interaction#move","kind":"member","memberof":"Interaction","scope":"instance","___id":"T000002R004627","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"move","ancestors":[],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * ```js\\n   * interact(target)\\n   *   .draggable(true)\\n   *   .on(\'dragmove\', function (event) {\\n   *     if (someCondition) {\\n   *       // change the snap settings\\n   *       event.interactable.draggable({ snap: { targets: [] }})\\n   *       // fire another move event with re-calculated snap\\n   *       event.interaction.move()\\n   *     }\\n   *   })\\n   * ```\\n   *\\n   * Force a move of the current action at the same coordinates. Useful if\\n   * snap/restrict has been changed and you want a movement with the new\\n   * settings.\\n   */","meta":{"range":[7427,7821],"filename":"Interaction.ts","lineno":343,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100043592","name":"Interaction#move","type":"MethodDefinition","paramnames":["signalArg"]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/Interaction.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(target)\\n  .draggable(true)\\n  .on(\'dragmove\', function (event) {\\n    if (someCondition) {\\n      // change the snap settings\\n      event.interactable.draggable({ snap: { targets: [] }})\\n      // fire another move event with re-calculated snap\\n      event.interaction.move()\\n    }\\n  })\\n</code></pre>\\n<p>Force a move of the current action at the same coordinates. Useful if\\nsnap/restrict has been changed and you want a movement with the new\\nsettings.</p>","name":"move","longname":"Interaction#move","kind":"function","memberof":"Interaction","scope":"instance","params":[],"___id":"T000002R004691","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"move","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * @alias Interaction.prototype.move\\n   */","meta":{"range":[1808,1954],"filename":"Interaction.ts","lineno":165,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100074015","name":"doMove","type":"ClassProperty"},"shortpath":"/types/node_modules/@interactjs/core/Interaction.ts"},"alias":"Interaction.prototype.move","name":"move","longname":"Interaction#move","kind":"member","memberof":"Interaction","scope":"instance","___id":"T000002R008362","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"move","ancestors":[],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * ```js\\n   * interact(target)\\n   *   .draggable(true)\\n   *   .on(\'dragmove\', function (event) {\\n   *     if (someCondition) {\\n   *       // change the snap settings\\n   *       event.interactable.draggable({ snap: { targets: [] }})\\n   *       // fire another move event with re-calculated snap\\n   *       event.interaction.move()\\n   *     }\\n   *   })\\n   * ```\\n   *\\n   * Force a move of the current action at the same coordinates. Useful if\\n   * snap/restrict has been changed and you want a movement with the new\\n   * settings.\\n   */","meta":{"range":[7427,7821],"filename":"Interaction.ts","lineno":343,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100074627","name":"Interaction#move","type":"MethodDefinition","paramnames":["signalArg"]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/Interaction.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(target)\\n  .draggable(true)\\n  .on(\'dragmove\', function (event) {\\n    if (someCondition) {\\n      // change the snap settings\\n      event.interactable.draggable({ snap: { targets: [] }})\\n      // fire another move event with re-calculated snap\\n      event.interaction.move()\\n    }\\n  })\\n</code></pre>\\n<p>Force a move of the current action at the same coordinates. Useful if\\nsnap/restrict has been changed and you want a movement with the new\\nsettings.</p>","name":"move","longname":"Interaction#move","kind":"function","memberof":"Interaction","scope":"instance","params":[],"___id":"T000002R008426","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"move","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/** @internal */","meta":{"range":[1706,1752],"filename":"Interaction.ts","lineno":63,"columnno":2,"path":"core","code":{"id":"astnode100012133","name":"Interaction#pointerMoveTolerance","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/core/Interaction.ts"},"tags":[{"originalTitle":"internal","title":"internal","text":""}],"name":"pointerMoveTolerance","longname":"Interaction#pointerMoveTolerance","kind":"member","memberof":"Interaction","scope":"instance","params":[],"___id":"T000002R001286","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"pointerMoveTolerance","ancestors":[],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/** @internal */","meta":{"range":[1706,1752],"filename":"Interaction.ts","lineno":63,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100027298","name":"Interaction#pointerMoveTolerance","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/Interaction.ts"},"tags":[{"originalTitle":"internal","title":"internal","text":""}],"name":"pointerMoveTolerance","longname":"Interaction#pointerMoveTolerance","kind":"member","memberof":"Interaction","scope":"instance","params":[],"___id":"T000002R002950","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"pointerMoveTolerance","ancestors":[],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/** @internal */","meta":{"range":[1706,1752],"filename":"Interaction.ts","lineno":63,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100042974","name":"Interaction#pointerMoveTolerance","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/Interaction.ts"},"tags":[{"originalTitle":"internal","title":"internal","text":""}],"name":"pointerMoveTolerance","longname":"Interaction#pointerMoveTolerance","kind":"member","memberof":"Interaction","scope":"instance","params":[],"___id":"T000002R004626","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"pointerMoveTolerance","ancestors":[],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/** @internal */","meta":{"range":[1706,1752],"filename":"Interaction.ts","lineno":63,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100074009","name":"Interaction#pointerMoveTolerance","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/Interaction.ts"},"tags":[{"originalTitle":"internal","title":"internal","text":""}],"name":"pointerMoveTolerance","longname":"Interaction#pointerMoveTolerance","kind":"member","memberof":"Interaction","scope":"instance","params":[],"___id":"T000002R008361","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"pointerMoveTolerance","ancestors":[],"signature":"<span class=\\"type-signature\\"></span>"},{"comment":"/**\\n   * ```js\\n   * interact(target)\\n   *   .draggable({\\n   *     // disable the default drag start by down->move\\n   *     manualStart: true\\n   *   })\\n   *   // start dragging after the user holds the pointer down\\n   *   .on(\'hold\', function (event) {\\n   *     var interaction = event.interaction\\n   *\\n   *     if (!interaction.interacting()) {\\n   *       interaction.start({ name: \'drag\' },\\n   *                         event.interactable,\\n   *                         event.currentTarget)\\n   *     }\\n   * })\\n   * ```\\n   *\\n   * Start an action with the given Interactable and Element as tartgets. The\\n   * action must be enabled for the target Interactable and an appropriate\\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\\n   *\\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\\n   *\\n   * @param {object} action   The action to be performed - drag, resize, etc.\\n   * @param {Interactable} target  The Interactable to target\\n   * @param {Element} element The DOM Element to target\\n   * @return {object} interact\\n   */","meta":{"range":[4504,5239],"filename":"Interaction.ts","lineno":231,"columnno":2,"path":"core","code":{"id":"astnode100012318","name":"Interaction#start","type":"MethodDefinition","paramnames":["action","interactable","element"]},"vars":{"":null},"shortpath":"/core/Interaction.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(target)\\n  .draggable({\\n    // disable the default drag start by down->move\\n    manualStart: true\\n  })\\n  // start dragging after the user holds the pointer down\\n  .on(\'hold\', function (event) {\\n    var interaction = event.interaction\\n\\n    if (!interaction.interacting()) {\\n      interaction.start({ name: \'drag\' },\\n                        event.interactable,\\n                        event.currentTarget)\\n    }\\n})\\n</code></pre>\\n<p>Start an action with the given Interactable and Element as tartgets. The\\naction must be enabled for the target Interactable and an appropriate\\nnumber of pointers must be held down - 1 for drag/resize, 2 for gesture.</p>\\n<p>Use it with <code>interactable.&lt;action&gt;able({ manualStart: false })</code> to always\\n<a href=\\"https://github.com/taye/interact.js/issues/114\\">start actions manually</a></p>","params":[{"type":{"names":["object"]},"description":"<p>The action to be performed - drag, resize, etc.</p>","name":"action"},{"type":{"names":["Interactable"]},"description":"<p>The Interactable to target</p>","name":"target"},{"type":{"names":["Element"]},"description":"<p>The DOM Element to target</p>","name":"element"}],"returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"start","longname":"Interaction#start","kind":"function","memberof":"Interaction","scope":"instance","___id":"T000002R001317","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"start","signature":"<span class=\\"signature\\">(action, target, element)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":[]},{"comment":"/**\\n   * ```js\\n   * interact(target)\\n   *   .draggable({\\n   *     // disable the default drag start by down->move\\n   *     manualStart: true\\n   *   })\\n   *   // start dragging after the user holds the pointer down\\n   *   .on(\'hold\', function (event) {\\n   *     var interaction = event.interaction\\n   *\\n   *     if (!interaction.interacting()) {\\n   *       interaction.start({ name: \'drag\' },\\n   *                         event.interactable,\\n   *                         event.currentTarget)\\n   *     }\\n   * })\\n   * ```\\n   *\\n   * Start an action with the given Interactable and Element as tartgets. The\\n   * action must be enabled for the target Interactable and an appropriate\\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\\n   *\\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\\n   *\\n   * @param {object} action   The action to be performed - drag, resize, etc.\\n   * @param {Interactable} target  The Interactable to target\\n   * @param {Element} element The DOM Element to target\\n   * @return {object} interact\\n   */","meta":{"range":[4504,5239],"filename":"Interaction.ts","lineno":231,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100027483","name":"Interaction#start","type":"MethodDefinition","paramnames":["action","interactable","element"]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/Interaction.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(target)\\n  .draggable({\\n    // disable the default drag start by down->move\\n    manualStart: true\\n  })\\n  // start dragging after the user holds the pointer down\\n  .on(\'hold\', function (event) {\\n    var interaction = event.interaction\\n\\n    if (!interaction.interacting()) {\\n      interaction.start({ name: \'drag\' },\\n                        event.interactable,\\n                        event.currentTarget)\\n    }\\n})\\n</code></pre>\\n<p>Start an action with the given Interactable and Element as tartgets. The\\naction must be enabled for the target Interactable and an appropriate\\nnumber of pointers must be held down - 1 for drag/resize, 2 for gesture.</p>\\n<p>Use it with <code>interactable.&lt;action&gt;able({ manualStart: false })</code> to always\\n<a href=\\"https://github.com/taye/interact.js/issues/114\\">start actions manually</a></p>","params":[{"type":{"names":["object"]},"description":"<p>The action to be performed - drag, resize, etc.</p>","name":"action"},{"type":{"names":["Interactable"]},"description":"<p>The Interactable to target</p>","name":"target"},{"type":{"names":["Element"]},"description":"<p>The DOM Element to target</p>","name":"element"}],"returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"start","longname":"Interaction#start","kind":"function","memberof":"Interaction","scope":"instance","___id":"T000002R002981","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"start","signature":"<span class=\\"signature\\">(action, target, element)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":[]},{"comment":"/**\\n   * ```js\\n   * interact(target)\\n   *   .draggable({\\n   *     // disable the default drag start by down->move\\n   *     manualStart: true\\n   *   })\\n   *   // start dragging after the user holds the pointer down\\n   *   .on(\'hold\', function (event) {\\n   *     var interaction = event.interaction\\n   *\\n   *     if (!interaction.interacting()) {\\n   *       interaction.start({ name: \'drag\' },\\n   *                         event.interactable,\\n   *                         event.currentTarget)\\n   *     }\\n   * })\\n   * ```\\n   *\\n   * Start an action with the given Interactable and Element as tartgets. The\\n   * action must be enabled for the target Interactable and an appropriate\\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\\n   *\\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\\n   *\\n   * @param {object} action   The action to be performed - drag, resize, etc.\\n   * @param {Interactable} target  The Interactable to target\\n   * @param {Element} element The DOM Element to target\\n   * @return {object} interact\\n   */","meta":{"range":[4504,5239],"filename":"Interaction.ts","lineno":231,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100043159","name":"Interaction#start","type":"MethodDefinition","paramnames":["action","interactable","element"]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/Interaction.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(target)\\n  .draggable({\\n    // disable the default drag start by down->move\\n    manualStart: true\\n  })\\n  // start dragging after the user holds the pointer down\\n  .on(\'hold\', function (event) {\\n    var interaction = event.interaction\\n\\n    if (!interaction.interacting()) {\\n      interaction.start({ name: \'drag\' },\\n                        event.interactable,\\n                        event.currentTarget)\\n    }\\n})\\n</code></pre>\\n<p>Start an action with the given Interactable and Element as tartgets. The\\naction must be enabled for the target Interactable and an appropriate\\nnumber of pointers must be held down - 1 for drag/resize, 2 for gesture.</p>\\n<p>Use it with <code>interactable.&lt;action&gt;able({ manualStart: false })</code> to always\\n<a href=\\"https://github.com/taye/interact.js/issues/114\\">start actions manually</a></p>","params":[{"type":{"names":["object"]},"description":"<p>The action to be performed - drag, resize, etc.</p>","name":"action"},{"type":{"names":["Interactable"]},"description":"<p>The Interactable to target</p>","name":"target"},{"type":{"names":["Element"]},"description":"<p>The DOM Element to target</p>","name":"element"}],"returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"start","longname":"Interaction#start","kind":"function","memberof":"Interaction","scope":"instance","___id":"T000002R004657","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"start","signature":"<span class=\\"signature\\">(action, target, element)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":[]},{"comment":"/**\\n   * ```js\\n   * interact(target)\\n   *   .draggable({\\n   *     // disable the default drag start by down->move\\n   *     manualStart: true\\n   *   })\\n   *   // start dragging after the user holds the pointer down\\n   *   .on(\'hold\', function (event) {\\n   *     var interaction = event.interaction\\n   *\\n   *     if (!interaction.interacting()) {\\n   *       interaction.start({ name: \'drag\' },\\n   *                         event.interactable,\\n   *                         event.currentTarget)\\n   *     }\\n   * })\\n   * ```\\n   *\\n   * Start an action with the given Interactable and Element as tartgets. The\\n   * action must be enabled for the target Interactable and an appropriate\\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\\n   *\\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\\n   *\\n   * @param {object} action   The action to be performed - drag, resize, etc.\\n   * @param {Interactable} target  The Interactable to target\\n   * @param {Element} element The DOM Element to target\\n   * @return {object} interact\\n   */","meta":{"range":[4504,5239],"filename":"Interaction.ts","lineno":231,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100074194","name":"Interaction#start","type":"MethodDefinition","paramnames":["action","interactable","element"]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/Interaction.ts"},"description":"<pre class=\\"prettyprint source lang-js\\"><code>interact(target)\\n  .draggable({\\n    // disable the default drag start by down->move\\n    manualStart: true\\n  })\\n  // start dragging after the user holds the pointer down\\n  .on(\'hold\', function (event) {\\n    var interaction = event.interaction\\n\\n    if (!interaction.interacting()) {\\n      interaction.start({ name: \'drag\' },\\n                        event.interactable,\\n                        event.currentTarget)\\n    }\\n})\\n</code></pre>\\n<p>Start an action with the given Interactable and Element as tartgets. The\\naction must be enabled for the target Interactable and an appropriate\\nnumber of pointers must be held down - 1 for drag/resize, 2 for gesture.</p>\\n<p>Use it with <code>interactable.&lt;action&gt;able({ manualStart: false })</code> to always\\n<a href=\\"https://github.com/taye/interact.js/issues/114\\">start actions manually</a></p>","params":[{"type":{"names":["object"]},"description":"<p>The action to be performed - drag, resize, etc.</p>","name":"action"},{"type":{"names":["Interactable"]},"description":"<p>The Interactable to target</p>","name":"target"},{"type":{"names":["Element"]},"description":"<p>The DOM Element to target</p>","name":"element"}],"returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"start","longname":"Interaction#start","kind":"function","memberof":"Interaction","scope":"instance","___id":"T000002R008392","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"start","signature":"<span class=\\"signature\\">(action, target, element)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":[]},{"comment":"/** */","meta":{"range":[9614,9852],"filename":"Interaction.ts","lineno":359,"columnno":2,"path":"core","code":{"id":"astnode100013024","name":"Interaction#stop","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/core/Interaction.ts"},"name":"stop","longname":"Interaction#stop","kind":"function","memberof":"Interaction","scope":"instance","params":[],"___id":"T000002R001386","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"stop","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/** */","meta":{"range":[9614,9852],"filename":"Interaction.ts","lineno":359,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100028189","name":"Interaction#stop","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/Interaction.ts"},"name":"stop","longname":"Interaction#stop","kind":"function","memberof":"Interaction","scope":"instance","params":[],"___id":"T000002R003050","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"stop","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/** */","meta":{"range":[9614,9852],"filename":"Interaction.ts","lineno":359,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100043865","name":"Interaction#stop","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/Interaction.ts"},"name":"stop","longname":"Interaction#stop","kind":"function","memberof":"Interaction","scope":"instance","params":[],"___id":"T000002R004726","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"stop","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/** */","meta":{"range":[9614,9852],"filename":"Interaction.ts","lineno":359,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100074900","name":"Interaction#stop","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/Interaction.ts"},"name":"stop","longname":"Interaction#stop","kind":"function","memberof":"Interaction","scope":"instance","params":[],"___id":"T000002R008461","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"stop","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/** */","meta":{"range":[172,1155],"filename":"PointerEvent.ts","lineno":5,"columnno":2,"path":"interactjs/node_modules/@interactjs/pointer-events","code":{"id":"astnode100053836","name":"module.exports","type":"MethodDefinition","paramnames":["type","pointer","event","eventTarget","interaction","timeStamp"]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/pointer-events/PointerEvent.ts"},"name":"exports","longname":"module.exports#module.exports","kind":"class","memberof":"module.exports#module","scope":"static","params":[],"___id":"T000003R000015","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"exports","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/** */","meta":{"range":[172,1155],"filename":"PointerEvent.ts","lineno":5,"columnno":2,"path":"pointer-events","code":{"id":"astnode100065759","name":"module.exports","type":"MethodDefinition","paramnames":["type","pointer","event","eventTarget","interaction","timeStamp"]},"vars":{"":null},"shortpath":"/pointer-events/PointerEvent.ts"},"name":"exports","longname":"module.exports#module.exports","kind":"class","memberof":"module.exports#module","scope":"static","params":[],"___id":"T000003R000016","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"exports","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/** */","meta":{"range":[172,1155],"filename":"PointerEvent.ts","lineno":5,"columnno":2,"path":"types/node_modules/@interactjs/pointer-events","code":{"id":"astnode100084704","name":"module.exports","type":"MethodDefinition","paramnames":["type","pointer","event","eventTarget","interaction","timeStamp"]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/pointer-events/PointerEvent.ts"},"name":"exports","longname":"module.exports#module.exports","kind":"class","memberof":"module.exports#module","scope":"static","params":[],"___id":"T000003R000017","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"exports","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/** @module interact */","meta":{"filename":"InteractStatic.ts","lineno":1,"columnno":0,"path":"core","code":{},"shortpath":"/core/InteractStatic.ts"},"kind":"module","name":"interact","longname":"module:interact","___id":"T000004R000002","___s":true,"attribs":"","id":"interact","ancestors":[],"modules":[]},{"comment":"/** @module interact */","meta":{"filename":"InteractStatic.ts","lineno":1,"columnno":0,"path":"interact/node_modules/@interactjs/core","code":{},"shortpath":"/interact/node_modules/@interactjs/core/InteractStatic.ts"},"kind":"module","name":"interact","longname":"module:interact","___id":"T000004R000003","___s":true,"attribs":"","id":"interact","ancestors":[],"modules":[]},{"comment":"/** @module interact */","meta":{"filename":"InteractStatic.ts","lineno":1,"columnno":0,"path":"interactjs/node_modules/@interactjs/core","code":{},"shortpath":"/interactjs/node_modules/@interactjs/core/InteractStatic.ts"},"kind":"module","name":"interact","longname":"module:interact","___id":"T000004R000004","___s":true,"attribs":"","id":"interact","ancestors":[],"modules":[]},{"comment":"/** @module interact */","meta":{"filename":"InteractStatic.ts","lineno":1,"columnno":0,"path":"types/node_modules/@interactjs/core","code":{},"shortpath":"/types/node_modules/@interactjs/core/InteractStatic.ts"},"kind":"module","name":"interact","longname":"module:interact","___id":"T000004R000005","___s":true,"attribs":"","id":"interact","ancestors":[],"modules":[]},{"comment":"/**\\n   * Check if an element or selector has been set with the {@link interact}\\n   * function\\n   *\\n   * @alias module:interact.isSet\\n   *\\n   * @param {Element} element The Element being searched for\\n   * @return {boolean} Indicates if the element or CSS selector was previously\\n   * passed to interact\\n   */","meta":{"range":[2865,2972],"filename":"InteractStatic.ts","lineno":104,"columnno":2,"path":"core","code":{"id":"astnode100015167","name":"InteractStatic#isSet","type":"MethodDefinition","paramnames":["target","options"]},"vars":{"":null},"shortpath":"/core/InteractStatic.ts"},"description":"<p>Check if an element or selector has been set with the {@link interact}\\nfunction</p>","alias":"module:interact.isSet","params":[{"type":{"names":["Element"]},"description":"<p>The Element being searched for</p>","name":"element"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Indicates if the element or CSS selector was previously\\npassed to interact</p>"}],"name":"isSet","longname":"module:interact.isSet","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R001634","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".isSet","signature":"<span class=\\"signature\\">(element)</span><span class=\\"type-signature\\"> &rarr; {boolean}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Check if an element or selector has been set with the {@link interact}\\n   * function\\n   *\\n   * @alias module:interact.isSet\\n   *\\n   * @param {Element} element The Element being searched for\\n   * @return {boolean} Indicates if the element or CSS selector was previously\\n   * passed to interact\\n   */","meta":{"range":[2865,2972],"filename":"InteractStatic.ts","lineno":104,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100030332","name":"InteractStatic#isSet","type":"MethodDefinition","paramnames":["target","options"]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<p>Check if an element or selector has been set with the {@link interact}\\nfunction</p>","alias":"module:interact.isSet","params":[{"type":{"names":["Element"]},"description":"<p>The Element being searched for</p>","name":"element"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Indicates if the element or CSS selector was previously\\npassed to interact</p>"}],"name":"isSet","longname":"module:interact.isSet","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R003298","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".isSet","signature":"<span class=\\"signature\\">(element)</span><span class=\\"type-signature\\"> &rarr; {boolean}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Check if an element or selector has been set with the {@link interact}\\n   * function\\n   *\\n   * @alias module:interact.isSet\\n   *\\n   * @param {Element} element The Element being searched for\\n   * @return {boolean} Indicates if the element or CSS selector was previously\\n   * passed to interact\\n   */","meta":{"range":[2865,2972],"filename":"InteractStatic.ts","lineno":104,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100046008","name":"InteractStatic#isSet","type":"MethodDefinition","paramnames":["target","options"]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<p>Check if an element or selector has been set with the {@link interact}\\nfunction</p>","alias":"module:interact.isSet","params":[{"type":{"names":["Element"]},"description":"<p>The Element being searched for</p>","name":"element"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Indicates if the element or CSS selector was previously\\npassed to interact</p>"}],"name":"isSet","longname":"module:interact.isSet","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R004974","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".isSet","signature":"<span class=\\"signature\\">(element)</span><span class=\\"type-signature\\"> &rarr; {boolean}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Check if an element or selector has been set with the {@link interact}\\n   * function\\n   *\\n   * @alias module:interact.isSet\\n   *\\n   * @param {Element} element The Element being searched for\\n   * @return {boolean} Indicates if the element or CSS selector was previously\\n   * passed to interact\\n   */","meta":{"range":[2865,2972],"filename":"InteractStatic.ts","lineno":104,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100077043","name":"InteractStatic#isSet","type":"MethodDefinition","paramnames":["target","options"]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<p>Check if an element or selector has been set with the {@link interact}\\nfunction</p>","alias":"module:interact.isSet","params":[{"type":{"names":["Element"]},"description":"<p>The Element being searched for</p>","name":"element"}],"returns":[{"type":{"names":["boolean"]},"description":"<p>Indicates if the element or CSS selector was previously\\npassed to interact</p>"}],"name":"isSet","longname":"module:interact.isSet","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R008709","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".isSet","signature":"<span class=\\"signature\\">(element)</span><span class=\\"type-signature\\"> &rarr; {boolean}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Returns or sets the maximum number of concurrent interactions allowed.  By\\n   * default only 1 interaction is allowed at a time (for backwards\\n   * compatibility). To allow multiple interactions on the same Interactables and\\n   * elements, you need to enable it in the draggable, resizable and gesturable\\n   * `\'max\'` and `\'maxPerElement\'` options.\\n   *\\n   * @alias module:interact.maxInteractions\\n   *\\n   * @param {number} [newValue] Any number. newValue <= 0 means no interactions.\\n   */","meta":{"range":[1261,1332],"filename":"base.ts","lineno":86,"columnno":2,"path":"auto-start","code":{"id":"astnode100006010","name":"interact.maxInteractions","type":"ArrowFunctionExpression","paramnames":["newValue"]},"shortpath":"/auto-start/base.ts"},"description":"<p>Returns or sets the maximum number of concurrent interactions allowed.  By\\ndefault only 1 interaction is allowed at a time (for backwards\\ncompatibility). To allow multiple interactions on the same Interactables and\\nelements, you need to enable it in the draggable, resizable and gesturable\\n<code>\'max\'</code> and <code>\'maxPerElement\'</code> options.</p>","alias":"module:interact.maxInteractions","params":[{"type":{"names":["number"]},"optional":true,"description":"<p>Any number. newValue &lt;= 0 means no interactions.</p>","name":"newValue"}],"name":"maxInteractions","longname":"module:interact.maxInteractions","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R000668","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".maxInteractions","signature":"<span class=\\"signature\\">(newValue<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"></span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Returns or sets the maximum number of concurrent interactions allowed.  By\\n   * default only 1 interaction is allowed at a time (for backwards\\n   * compatibility). To allow multiple interactions on the same Interactables and\\n   * elements, you need to enable it in the draggable, resizable and gesturable\\n   * `\'max\'` and `\'maxPerElement\'` options.\\n   *\\n   * @alias module:interact.maxInteractions\\n   *\\n   * @param {number} [newValue] Any number. newValue <= 0 means no interactions.\\n   */","meta":{"range":[1261,1332],"filename":"base.ts","lineno":86,"columnno":2,"path":"interactjs/node_modules/@interactjs/auto-start","code":{"id":"astnode100036895","name":"interact.maxInteractions","type":"ArrowFunctionExpression","paramnames":["newValue"]},"shortpath":"/interactjs/node_modules/@interactjs/auto-start/base.ts"},"description":"<p>Returns or sets the maximum number of concurrent interactions allowed.  By\\ndefault only 1 interaction is allowed at a time (for backwards\\ncompatibility). To allow multiple interactions on the same Interactables and\\nelements, you need to enable it in the draggable, resizable and gesturable\\n<code>\'max\'</code> and <code>\'maxPerElement\'</code> options.</p>","alias":"module:interact.maxInteractions","params":[{"type":{"names":["number"]},"optional":true,"description":"<p>Any number. newValue &lt;= 0 means no interactions.</p>","name":"newValue"}],"name":"maxInteractions","longname":"module:interact.maxInteractions","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R004013","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".maxInteractions","signature":"<span class=\\"signature\\">(newValue<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"></span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Returns or sets the maximum number of concurrent interactions allowed.  By\\n   * default only 1 interaction is allowed at a time (for backwards\\n   * compatibility). To allow multiple interactions on the same Interactables and\\n   * elements, you need to enable it in the draggable, resizable and gesturable\\n   * `\'max\'` and `\'maxPerElement\'` options.\\n   *\\n   * @alias module:interact.maxInteractions\\n   *\\n   * @param {number} [newValue] Any number. newValue <= 0 means no interactions.\\n   */","meta":{"range":[1261,1332],"filename":"base.ts","lineno":86,"columnno":2,"path":"types/node_modules/@interactjs/auto-start","code":{"id":"astnode100067934","name":"interact.maxInteractions","type":"ArrowFunctionExpression","paramnames":["newValue"]},"shortpath":"/types/node_modules/@interactjs/auto-start/base.ts"},"description":"<p>Returns or sets the maximum number of concurrent interactions allowed.  By\\ndefault only 1 interaction is allowed at a time (for backwards\\ncompatibility). To allow multiple interactions on the same Interactables and\\nelements, you need to enable it in the draggable, resizable and gesturable\\n<code>\'max\'</code> and <code>\'maxPerElement\'</code> options.</p>","alias":"module:interact.maxInteractions","params":[{"type":{"names":["number"]},"optional":true,"description":"<p>Any number. newValue &lt;= 0 means no interactions.</p>","name":"newValue"}],"name":"maxInteractions","longname":"module:interact.maxInteractions","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R007749","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".maxInteractions","signature":"<span class=\\"signature\\">(newValue<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"></span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Removes a global InteractEvent listener or DOM event from `document`\\n   *\\n   * @alias module:interact.off\\n   *\\n   * @param {string | array | object} type The types of events that were listened\\n   * for\\n   * @param {function} listener The listener function to be removed\\n   * @param {object | boolean} options [options] object or useCapture flag for\\n   * removeEventListener\\n   * @return {object} interact\\n   */","meta":{"range":[4735,5502],"filename":"InteractStatic.ts","lineno":168,"columnno":2,"path":"core","code":{"id":"astnode100015332","name":"InteractStatic#off","type":"MethodDefinition","paramnames":["type","listener","options"]},"vars":{"":null},"shortpath":"/core/InteractStatic.ts"},"description":"<p>Removes a global InteractEvent listener or DOM event from <code>document</code></p>","alias":"module:interact.off","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events that were listened\\nfor</p>","name":"type"},{"type":{"names":["function"]},"description":"<p>The listener function to be removed</p>","name":"listener"},{"type":{"names":["object","boolean"]},"description":"<p>[options] object or useCapture flag for\\nremoveEventListener</p>","name":"options"}],"returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"off","longname":"module:interact.off","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R001641","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".off","signature":"<span class=\\"signature\\">(type, listener, options)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Removes a global InteractEvent listener or DOM event from `document`\\n   *\\n   * @alias module:interact.off\\n   *\\n   * @param {string | array | object} type The types of events that were listened\\n   * for\\n   * @param {function} listener The listener function to be removed\\n   * @param {object | boolean} options [options] object or useCapture flag for\\n   * removeEventListener\\n   * @return {object} interact\\n   */","meta":{"range":[4735,5502],"filename":"InteractStatic.ts","lineno":168,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100030497","name":"InteractStatic#off","type":"MethodDefinition","paramnames":["type","listener","options"]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<p>Removes a global InteractEvent listener or DOM event from <code>document</code></p>","alias":"module:interact.off","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events that were listened\\nfor</p>","name":"type"},{"type":{"names":["function"]},"description":"<p>The listener function to be removed</p>","name":"listener"},{"type":{"names":["object","boolean"]},"description":"<p>[options] object or useCapture flag for\\nremoveEventListener</p>","name":"options"}],"returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"off","longname":"module:interact.off","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R003305","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".off","signature":"<span class=\\"signature\\">(type, listener, options)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Removes a global InteractEvent listener or DOM event from `document`\\n   *\\n   * @alias module:interact.off\\n   *\\n   * @param {string | array | object} type The types of events that were listened\\n   * for\\n   * @param {function} listener The listener function to be removed\\n   * @param {object | boolean} options [options] object or useCapture flag for\\n   * removeEventListener\\n   * @return {object} interact\\n   */","meta":{"range":[4735,5502],"filename":"InteractStatic.ts","lineno":168,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100046173","name":"InteractStatic#off","type":"MethodDefinition","paramnames":["type","listener","options"]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<p>Removes a global InteractEvent listener or DOM event from <code>document</code></p>","alias":"module:interact.off","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events that were listened\\nfor</p>","name":"type"},{"type":{"names":["function"]},"description":"<p>The listener function to be removed</p>","name":"listener"},{"type":{"names":["object","boolean"]},"description":"<p>[options] object or useCapture flag for\\nremoveEventListener</p>","name":"options"}],"returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"off","longname":"module:interact.off","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R004981","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".off","signature":"<span class=\\"signature\\">(type, listener, options)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Removes a global InteractEvent listener or DOM event from `document`\\n   *\\n   * @alias module:interact.off\\n   *\\n   * @param {string | array | object} type The types of events that were listened\\n   * for\\n   * @param {function} listener The listener function to be removed\\n   * @param {object | boolean} options [options] object or useCapture flag for\\n   * removeEventListener\\n   * @return {object} interact\\n   */","meta":{"range":[4735,5502],"filename":"InteractStatic.ts","lineno":168,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100077208","name":"InteractStatic#off","type":"MethodDefinition","paramnames":["type","listener","options"]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<p>Removes a global InteractEvent listener or DOM event from <code>document</code></p>","alias":"module:interact.off","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events that were listened\\nfor</p>","name":"type"},{"type":{"names":["function"]},"description":"<p>The listener function to be removed</p>","name":"listener"},{"type":{"names":["object","boolean"]},"description":"<p>[options] object or useCapture flag for\\nremoveEventListener</p>","name":"options"}],"returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"off","longname":"module:interact.off","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R008716","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".off","signature":"<span class=\\"signature\\">(type, listener, options)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Add a global listener for an InteractEvent or adds a DOM event to `document`\\n   *\\n   * @alias module:interact.on\\n   *\\n   * @param {string | array | object} type The types of events to listen for\\n   * @param {function} listener The function event (s)\\n   * @param {object | boolean} [options] object or useCapture flag for\\n   * addEventListener\\n   * @return {object} interact\\n   */","meta":{"range":[3368,4308],"filename":"InteractStatic.ts","lineno":118,"columnno":2,"path":"core","code":{"id":"astnode100015190","name":"InteractStatic#on","type":"MethodDefinition","paramnames":["type","listener","options"]},"vars":{"":null},"shortpath":"/core/InteractStatic.ts"},"description":"<p>Add a global listener for an InteractEvent or adds a DOM event to <code>document</code></p>","alias":"module:interact.on","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events to listen for</p>","name":"type"},{"type":{"names":["function"]},"description":"<p>The function event (s)</p>","name":"listener"},{"type":{"names":["object","boolean"]},"optional":true,"description":"<p>object or useCapture flag for\\naddEventListener</p>","name":"options"}],"returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"on","longname":"module:interact.on","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R001635","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".on","signature":"<span class=\\"signature\\">(type, listener, options<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Add a global listener for an InteractEvent or adds a DOM event to `document`\\n   *\\n   * @alias module:interact.on\\n   *\\n   * @param {string | array | object} type The types of events to listen for\\n   * @param {function} listener The function event (s)\\n   * @param {object | boolean} [options] object or useCapture flag for\\n   * addEventListener\\n   * @return {object} interact\\n   */","meta":{"range":[3368,4308],"filename":"InteractStatic.ts","lineno":118,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100030355","name":"InteractStatic#on","type":"MethodDefinition","paramnames":["type","listener","options"]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<p>Add a global listener for an InteractEvent or adds a DOM event to <code>document</code></p>","alias":"module:interact.on","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events to listen for</p>","name":"type"},{"type":{"names":["function"]},"description":"<p>The function event (s)</p>","name":"listener"},{"type":{"names":["object","boolean"]},"optional":true,"description":"<p>object or useCapture flag for\\naddEventListener</p>","name":"options"}],"returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"on","longname":"module:interact.on","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R003299","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".on","signature":"<span class=\\"signature\\">(type, listener, options<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Add a global listener for an InteractEvent or adds a DOM event to `document`\\n   *\\n   * @alias module:interact.on\\n   *\\n   * @param {string | array | object} type The types of events to listen for\\n   * @param {function} listener The function event (s)\\n   * @param {object | boolean} [options] object or useCapture flag for\\n   * addEventListener\\n   * @return {object} interact\\n   */","meta":{"range":[3368,4308],"filename":"InteractStatic.ts","lineno":118,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100046031","name":"InteractStatic#on","type":"MethodDefinition","paramnames":["type","listener","options"]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<p>Add a global listener for an InteractEvent or adds a DOM event to <code>document</code></p>","alias":"module:interact.on","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events to listen for</p>","name":"type"},{"type":{"names":["function"]},"description":"<p>The function event (s)</p>","name":"listener"},{"type":{"names":["object","boolean"]},"optional":true,"description":"<p>object or useCapture flag for\\naddEventListener</p>","name":"options"}],"returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"on","longname":"module:interact.on","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R004975","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".on","signature":"<span class=\\"signature\\">(type, listener, options<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Add a global listener for an InteractEvent or adds a DOM event to `document`\\n   *\\n   * @alias module:interact.on\\n   *\\n   * @param {string | array | object} type The types of events to listen for\\n   * @param {function} listener The function event (s)\\n   * @param {object | boolean} [options] object or useCapture flag for\\n   * addEventListener\\n   * @return {object} interact\\n   */","meta":{"range":[3368,4308],"filename":"InteractStatic.ts","lineno":118,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100077066","name":"InteractStatic#on","type":"MethodDefinition","paramnames":["type","listener","options"]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<p>Add a global listener for an InteractEvent or adds a DOM event to <code>document</code></p>","alias":"module:interact.on","params":[{"type":{"names":["string","array","object"]},"description":"<p>The types of events to listen for</p>","name":"type"},{"type":{"names":["function"]},"description":"<p>The function event (s)</p>","name":"listener"},{"type":{"names":["object","boolean"]},"optional":true,"description":"<p>object or useCapture flag for\\naddEventListener</p>","name":"options"}],"returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"on","longname":"module:interact.on","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R008710","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".on","signature":"<span class=\\"signature\\">(type, listener, options<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Returns or sets the distance the pointer must be moved before an action\\n   * sequence occurs. This also affects tolerance for tap events.\\n   *\\n   * @alias module:interact.pointerMoveTolerance\\n   *\\n   * @param {number} [newValue] The movement from the start position must be greater than this value\\n   * @return {interact | number}\\n   */","meta":{"range":[6570,6783],"filename":"InteractStatic.ts","lineno":253,"columnno":2,"path":"core","code":{"id":"astnode100015527","name":"InteractStatic#pointerMoveTolerance","type":"MethodDefinition","paramnames":["newValue"]},"vars":{"":null},"shortpath":"/core/InteractStatic.ts"},"description":"<p>Returns or sets the distance the pointer must be moved before an action\\nsequence occurs. This also affects tolerance for tap events.</p>","alias":"module:interact.pointerMoveTolerance","params":[{"type":{"names":["number"]},"optional":true,"description":"<p>The movement from the start position must be greater than this value</p>","name":"newValue"}],"returns":[{"type":{"names":["interact","number"]}}],"name":"pointerMoveTolerance","longname":"module:interact.pointerMoveTolerance","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R001652","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".pointerMoveTolerance","signature":"<span class=\\"signature\\">(newValue<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {<a href=\\"/docs/api/global.html#interact\\">interact</a>|number}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Returns or sets the distance the pointer must be moved before an action\\n   * sequence occurs. This also affects tolerance for tap events.\\n   *\\n   * @alias module:interact.pointerMoveTolerance\\n   *\\n   * @param {number} [newValue] The movement from the start position must be greater than this value\\n   * @return {interact | number}\\n   */","meta":{"range":[6570,6783],"filename":"InteractStatic.ts","lineno":253,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100030692","name":"InteractStatic#pointerMoveTolerance","type":"MethodDefinition","paramnames":["newValue"]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<p>Returns or sets the distance the pointer must be moved before an action\\nsequence occurs. This also affects tolerance for tap events.</p>","alias":"module:interact.pointerMoveTolerance","params":[{"type":{"names":["number"]},"optional":true,"description":"<p>The movement from the start position must be greater than this value</p>","name":"newValue"}],"returns":[{"type":{"names":["interact","number"]}}],"name":"pointerMoveTolerance","longname":"module:interact.pointerMoveTolerance","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R003316","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".pointerMoveTolerance","signature":"<span class=\\"signature\\">(newValue<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {<a href=\\"/docs/api/global.html#interact\\">interact</a>|number}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Returns or sets the distance the pointer must be moved before an action\\n   * sequence occurs. This also affects tolerance for tap events.\\n   *\\n   * @alias module:interact.pointerMoveTolerance\\n   *\\n   * @param {number} [newValue] The movement from the start position must be greater than this value\\n   * @return {interact | number}\\n   */","meta":{"range":[6570,6783],"filename":"InteractStatic.ts","lineno":253,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100046368","name":"InteractStatic#pointerMoveTolerance","type":"MethodDefinition","paramnames":["newValue"]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<p>Returns or sets the distance the pointer must be moved before an action\\nsequence occurs. This also affects tolerance for tap events.</p>","alias":"module:interact.pointerMoveTolerance","params":[{"type":{"names":["number"]},"optional":true,"description":"<p>The movement from the start position must be greater than this value</p>","name":"newValue"}],"returns":[{"type":{"names":["interact","number"]}}],"name":"pointerMoveTolerance","longname":"module:interact.pointerMoveTolerance","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R004992","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".pointerMoveTolerance","signature":"<span class=\\"signature\\">(newValue<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {<a href=\\"/docs/api/global.html#interact\\">interact</a>|number}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Returns or sets the distance the pointer must be moved before an action\\n   * sequence occurs. This also affects tolerance for tap events.\\n   *\\n   * @alias module:interact.pointerMoveTolerance\\n   *\\n   * @param {number} [newValue] The movement from the start position must be greater than this value\\n   * @return {interact | number}\\n   */","meta":{"range":[6570,6783],"filename":"InteractStatic.ts","lineno":253,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100077403","name":"InteractStatic#pointerMoveTolerance","type":"MethodDefinition","paramnames":["newValue"]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<p>Returns or sets the distance the pointer must be moved before an action\\nsequence occurs. This also affects tolerance for tap events.</p>","alias":"module:interact.pointerMoveTolerance","params":[{"type":{"names":["number"]},"optional":true,"description":"<p>The movement from the start position must be greater than this value</p>","name":"newValue"}],"returns":[{"type":{"names":["interact","number"]}}],"name":"pointerMoveTolerance","longname":"module:interact.pointerMoveTolerance","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R008727","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".pointerMoveTolerance","signature":"<span class=\\"signature\\">(newValue<span class=\\"signature-attributes\\">opt</span>)</span><span class=\\"type-signature\\"> &rarr; {<a href=\\"/docs/api/global.html#interact\\">interact</a>|number}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Cancels all interactions (end events are not fired)\\n   *\\n   * @alias module:interact.stop\\n   *\\n   * @return {object} interact\\n   */","meta":{"range":[6093,6217],"filename":"InteractStatic.ts","lineno":238,"columnno":2,"path":"core","code":{"id":"astnode100015504","name":"InteractStatic#stop","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/core/InteractStatic.ts"},"description":"<p>Cancels all interactions (end events are not fired)</p>","alias":"module:interact.stop","returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"stop","longname":"module:interact.stop","kind":"function","memberof":"module:interact","scope":"static","params":[],"___id":"T000002R001650","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".stop","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Cancels all interactions (end events are not fired)\\n   *\\n   * @alias module:interact.stop\\n   *\\n   * @return {object} interact\\n   */","meta":{"range":[6093,6217],"filename":"InteractStatic.ts","lineno":238,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100030669","name":"InteractStatic#stop","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<p>Cancels all interactions (end events are not fired)</p>","alias":"module:interact.stop","returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"stop","longname":"module:interact.stop","kind":"function","memberof":"module:interact","scope":"static","params":[],"___id":"T000002R003314","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".stop","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Cancels all interactions (end events are not fired)\\n   *\\n   * @alias module:interact.stop\\n   *\\n   * @return {object} interact\\n   */","meta":{"range":[6093,6217],"filename":"InteractStatic.ts","lineno":238,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100046345","name":"InteractStatic#stop","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<p>Cancels all interactions (end events are not fired)</p>","alias":"module:interact.stop","returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"stop","longname":"module:interact.stop","kind":"function","memberof":"module:interact","scope":"static","params":[],"___id":"T000002R004990","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".stop","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Cancels all interactions (end events are not fired)\\n   *\\n   * @alias module:interact.stop\\n   *\\n   * @return {object} interact\\n   */","meta":{"range":[6093,6217],"filename":"InteractStatic.ts","lineno":238,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100077380","name":"InteractStatic#stop","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<p>Cancels all interactions (end events are not fired)</p>","alias":"module:interact.stop","returns":[{"type":{"names":["object"]},"description":"<p>interact</p>"}],"name":"stop","longname":"module:interact.stop","kind":"function","memberof":"module:interact","scope":"static","params":[],"___id":"T000002R008725","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".stop","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"> &rarr; {object}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * @alias module:interact.supportsPointerEvent\\n   *\\n   * @return {boolean} Whether or not the browser supports PointerEvents\\n   */","meta":{"range":[5876,5945],"filename":"InteractStatic.ts","lineno":229,"columnno":2,"path":"core","code":{"id":"astnode100015496","name":"InteractStatic#supportsPointerEvent","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/core/InteractStatic.ts"},"alias":"module:interact.supportsPointerEvent","returns":[{"type":{"names":["boolean"]},"description":"<p>Whether or not the browser supports PointerEvents</p>"}],"name":"supportsPointerEvent","longname":"module:interact.supportsPointerEvent","kind":"function","memberof":"module:interact","scope":"static","params":[],"___id":"T000002R001649","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".supportsPointerEvent","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"> &rarr; {boolean}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * @alias module:interact.supportsPointerEvent\\n   *\\n   * @return {boolean} Whether or not the browser supports PointerEvents\\n   */","meta":{"range":[5876,5945],"filename":"InteractStatic.ts","lineno":229,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100030661","name":"InteractStatic#supportsPointerEvent","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/InteractStatic.ts"},"alias":"module:interact.supportsPointerEvent","returns":[{"type":{"names":["boolean"]},"description":"<p>Whether or not the browser supports PointerEvents</p>"}],"name":"supportsPointerEvent","longname":"module:interact.supportsPointerEvent","kind":"function","memberof":"module:interact","scope":"static","params":[],"___id":"T000002R003313","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".supportsPointerEvent","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"> &rarr; {boolean}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * @alias module:interact.supportsPointerEvent\\n   *\\n   * @return {boolean} Whether or not the browser supports PointerEvents\\n   */","meta":{"range":[5876,5945],"filename":"InteractStatic.ts","lineno":229,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100046337","name":"InteractStatic#supportsPointerEvent","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/InteractStatic.ts"},"alias":"module:interact.supportsPointerEvent","returns":[{"type":{"names":["boolean"]},"description":"<p>Whether or not the browser supports PointerEvents</p>"}],"name":"supportsPointerEvent","longname":"module:interact.supportsPointerEvent","kind":"function","memberof":"module:interact","scope":"static","params":[],"___id":"T000002R004989","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".supportsPointerEvent","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"> &rarr; {boolean}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * @alias module:interact.supportsPointerEvent\\n   *\\n   * @return {boolean} Whether or not the browser supports PointerEvents\\n   */","meta":{"range":[5876,5945],"filename":"InteractStatic.ts","lineno":229,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100077372","name":"InteractStatic#supportsPointerEvent","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/InteractStatic.ts"},"alias":"module:interact.supportsPointerEvent","returns":[{"type":{"names":["boolean"]},"description":"<p>Whether or not the browser supports PointerEvents</p>"}],"name":"supportsPointerEvent","longname":"module:interact.supportsPointerEvent","kind":"function","memberof":"module:interact","scope":"static","params":[],"___id":"T000002R008724","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".supportsPointerEvent","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"> &rarr; {boolean}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * @alias module:interact.supportsTouch\\n   *\\n   * @return {boolean} Whether or not the browser supports touch input\\n   */","meta":{"range":[5677,5732],"filename":"InteractStatic.ts","lineno":220,"columnno":2,"path":"core","code":{"id":"astnode100015488","name":"InteractStatic#supportsTouch","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/core/InteractStatic.ts"},"alias":"module:interact.supportsTouch","returns":[{"type":{"names":["boolean"]},"description":"<p>Whether or not the browser supports touch input</p>"}],"name":"supportsTouch","longname":"module:interact.supportsTouch","kind":"function","memberof":"module:interact","scope":"static","params":[],"___id":"T000002R001648","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".supportsTouch","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"> &rarr; {boolean}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * @alias module:interact.supportsTouch\\n   *\\n   * @return {boolean} Whether or not the browser supports touch input\\n   */","meta":{"range":[5677,5732],"filename":"InteractStatic.ts","lineno":220,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100030653","name":"InteractStatic#supportsTouch","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/InteractStatic.ts"},"alias":"module:interact.supportsTouch","returns":[{"type":{"names":["boolean"]},"description":"<p>Whether or not the browser supports touch input</p>"}],"name":"supportsTouch","longname":"module:interact.supportsTouch","kind":"function","memberof":"module:interact","scope":"static","params":[],"___id":"T000002R003312","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".supportsTouch","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"> &rarr; {boolean}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * @alias module:interact.supportsTouch\\n   *\\n   * @return {boolean} Whether or not the browser supports touch input\\n   */","meta":{"range":[5677,5732],"filename":"InteractStatic.ts","lineno":220,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100046329","name":"InteractStatic#supportsTouch","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/InteractStatic.ts"},"alias":"module:interact.supportsTouch","returns":[{"type":{"names":["boolean"]},"description":"<p>Whether or not the browser supports touch input</p>"}],"name":"supportsTouch","longname":"module:interact.supportsTouch","kind":"function","memberof":"module:interact","scope":"static","params":[],"___id":"T000002R004988","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".supportsTouch","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"> &rarr; {boolean}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * @alias module:interact.supportsTouch\\n   *\\n   * @return {boolean} Whether or not the browser supports touch input\\n   */","meta":{"range":[5677,5732],"filename":"InteractStatic.ts","lineno":220,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100077364","name":"InteractStatic#supportsTouch","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/InteractStatic.ts"},"alias":"module:interact.supportsTouch","returns":[{"type":{"names":["boolean"]},"description":"<p>Whether or not the browser supports touch input</p>"}],"name":"supportsTouch","longname":"module:interact.supportsTouch","kind":"function","memberof":"module:interact","scope":"static","params":[],"___id":"T000002R008723","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".supportsTouch","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"> &rarr; {boolean}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Use a plugin\\n   *\\n   * @alias module:interact.use\\n   *\\n   * @param {Object} plugin\\n   * @param {function} plugin.install\\n   * @return {InteractStatic}\\n   */","meta":{"range":[2464,2550],"filename":"InteractStatic.ts","lineno":89,"columnno":2,"path":"core","code":{"id":"astnode100015150","name":"InteractStatic#use","type":"MethodDefinition","paramnames":["plugin","options"]},"vars":{"":null},"shortpath":"/core/InteractStatic.ts"},"description":"<p>Use a plugin</p>","alias":"module:interact.use","params":[{"type":{"names":["Object"]},"name":"plugin","subparams":[{"type":{"names":["function"]},"name":"install"}]},null],"returns":[{"type":{"names":["InteractStatic"]}}],"name":"use","longname":"module:interact.use","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R001633","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".use","signature":"<span class=\\"signature\\">(plugin)</span><span class=\\"type-signature\\"> &rarr; {InteractStatic}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Use a plugin\\n   *\\n   * @alias module:interact.use\\n   *\\n   * @param {Object} plugin\\n   * @param {function} plugin.install\\n   * @return {InteractStatic}\\n   */","meta":{"range":[2464,2550],"filename":"InteractStatic.ts","lineno":89,"columnno":2,"path":"interact/node_modules/@interactjs/core","code":{"id":"astnode100030315","name":"InteractStatic#use","type":"MethodDefinition","paramnames":["plugin","options"]},"vars":{"":null},"shortpath":"/interact/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<p>Use a plugin</p>","alias":"module:interact.use","params":[{"type":{"names":["Object"]},"name":"plugin","subparams":[{"type":{"names":["function"]},"name":"install"}]},null],"returns":[{"type":{"names":["InteractStatic"]}}],"name":"use","longname":"module:interact.use","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R003297","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".use","signature":"<span class=\\"signature\\">(plugin)</span><span class=\\"type-signature\\"> &rarr; {InteractStatic}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Use a plugin\\n   *\\n   * @alias module:interact.use\\n   *\\n   * @param {Object} plugin\\n   * @param {function} plugin.install\\n   * @return {InteractStatic}\\n   */","meta":{"range":[2464,2550],"filename":"InteractStatic.ts","lineno":89,"columnno":2,"path":"interactjs/node_modules/@interactjs/core","code":{"id":"astnode100045991","name":"InteractStatic#use","type":"MethodDefinition","paramnames":["plugin","options"]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<p>Use a plugin</p>","alias":"module:interact.use","params":[{"type":{"names":["Object"]},"name":"plugin","subparams":[{"type":{"names":["function"]},"name":"install"}]},null],"returns":[{"type":{"names":["InteractStatic"]}}],"name":"use","longname":"module:interact.use","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R004973","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".use","signature":"<span class=\\"signature\\">(plugin)</span><span class=\\"type-signature\\"> &rarr; {InteractStatic}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n   * Use a plugin\\n   *\\n   * @alias module:interact.use\\n   *\\n   * @param {Object} plugin\\n   * @param {function} plugin.install\\n   * @return {InteractStatic}\\n   */","meta":{"range":[2464,2550],"filename":"InteractStatic.ts","lineno":89,"columnno":2,"path":"types/node_modules/@interactjs/core","code":{"id":"astnode100077026","name":"InteractStatic#use","type":"MethodDefinition","paramnames":["plugin","options"]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/core/InteractStatic.ts"},"description":"<p>Use a plugin</p>","alias":"module:interact.use","params":[{"type":{"names":["Object"]},"name":"plugin","subparams":[{"type":{"names":["function"]},"name":"install"}]},null],"returns":[{"type":{"names":["InteractStatic"]}}],"name":"use","longname":"module:interact.use","kind":"function","memberof":"module:interact","scope":"static","___id":"T000002R008708","___s":true,"attribs":"<span class=\\"type-signature\\">(static) </span>","id":".use","signature":"<span class=\\"signature\\">(plugin)</span><span class=\\"type-signature\\"> &rarr; {InteractStatic}</span>","ancestors":["<a href=\\"/docs/api/module-interact.html\\">interact</a>."]},{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"interactjs/node_modules/@interactjs/modifiers","code":{},"shortpath":"/interactjs/node_modules/@interactjs/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000004R000006","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[],"modules":[{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/modifiers","code":{},"shortpath":"/interactjs/node_modules/@interactjs/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R005352","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[]},{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/modifiers","code":{},"shortpath":"/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R006507","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[]},{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/modifiers","code":{},"shortpath":"/types/node_modules/@interactjs/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R009093","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[]}]},{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"modifiers","code":{},"shortpath":"/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000004R000007","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[],"modules":[{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/modifiers","code":{},"shortpath":"/interactjs/node_modules/@interactjs/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R005352","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[],"modules":[{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/modifiers","code":{},"shortpath":"/interactjs/node_modules/@interactjs/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R005352","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[]},{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/modifiers","code":{},"shortpath":"/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R006507","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[]},{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/modifiers","code":{},"shortpath":"/types/node_modules/@interactjs/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R009093","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[]}]},{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/modifiers","code":{},"shortpath":"/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R006507","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[]},{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/modifiers","code":{},"shortpath":"/types/node_modules/@interactjs/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R009093","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[]}]},{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"types/node_modules/@interactjs/modifiers","code":{},"shortpath":"/types/node_modules/@interactjs/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000004R000008","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[],"modules":[{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/modifiers","code":{},"shortpath":"/interactjs/node_modules/@interactjs/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R005352","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[],"modules":[{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/modifiers","code":{},"shortpath":"/interactjs/node_modules/@interactjs/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R005352","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[]},{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/modifiers","code":{},"shortpath":"/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R006507","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[]},{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/modifiers","code":{},"shortpath":"/types/node_modules/@interactjs/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R009093","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[]}]},{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/modifiers","code":{},"shortpath":"/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R006507","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[],"modules":[{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/modifiers","code":{},"shortpath":"/interactjs/node_modules/@interactjs/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R005352","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[],"modules":[{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/modifiers","code":{},"shortpath":"/interactjs/node_modules/@interactjs/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R005352","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[]},{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/modifiers","code":{},"shortpath":"/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R006507","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[]},{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/modifiers","code":{},"shortpath":"/types/node_modules/@interactjs/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R009093","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[]}]},{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/modifiers","code":{},"shortpath":"/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R006507","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[]},{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/modifiers","code":{},"shortpath":"/types/node_modules/@interactjs/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R009093","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[]}]},{"comment":"/**\\n * @module modifiers/aspectRatio\\n *\\n * @description\\n * This module forces elements to be resized with a specified dx/dy ratio.\\n *\\n * @example\\n * interact(target).resizable({\\n *   modifiers: [\\n *     interact.modifiers.snapSize({\\n *       targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n *     }),\\n *     interact.aspectRatio({ ratio: \'preserve\' }),\\n *   ],\\n * });\\n */","meta":{"filename":"aspectRatio.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/modifiers","code":{},"shortpath":"/types/node_modules/@interactjs/modifiers/aspectRatio.ts"},"kind":"module","name":"modifiers/aspectRatio","description":"<p>This module forces elements to be resized with a specified dx/dy ratio.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  modifiers: [\\n    interact.modifiers.snapSize({\\n      targets: [ interact.createSnapGrid({ x: 20, y: 20 }) ],\\n    }),\\n    interact.aspectRatio({ ratio: \'preserve\' }),\\n  ],\\n});"}],"longname":"module:modifiers/aspectRatio","___id":"T000002R009093","___s":true,"attribs":"","id":"modifiers/aspectRatio","ancestors":[]}]},{"comment":"/**\\n * @module modifiers/snapEdges\\n *\\n * @description\\n * This module allows snapping of the edges of targets during resize\\n * interactions.\\n *\\n * @example\\n * interact(target).resizable({\\n *   snapEdges: {\\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\\n *   },\\n * })\\n *\\n * interact(target).resizable({\\n *   snapEdges: {\\n *     targets: [\\n *       interact.snappers.grid({\\n *        top: 50,\\n *        left: 50,\\n *        bottom: 100,\\n *        right: 100,\\n *       }),\\n *     ],\\n *   },\\n * })\\n */","meta":{"filename":"edges.ts","lineno":1,"columnno":0,"path":"modifiers/snap","code":{},"shortpath":"/modifiers/snap/edges.ts"},"kind":"module","name":"modifiers/snapEdges","description":"<p>This module allows snapping of the edges of targets during resize\\ninteractions.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  snapEdges: {\\n    targets: [interact.snappers.grid({ x: 100, y: 50 })],\\n  },\\n})\\n\\ninteract(target).resizable({\\n  snapEdges: {\\n    targets: [\\n      interact.snappers.grid({\\n       top: 50,\\n       left: 50,\\n       bottom: 100,\\n       right: 100,\\n      }),\\n    ],\\n  },\\n})"}],"longname":"module:modifiers/snapEdges","___id":"T000004R000009","___s":true,"attribs":"","id":"modifiers/snapEdges","ancestors":[],"modules":[{"comment":"/**\\n * @module modifiers/snapEdges\\n *\\n * @description\\n * This module allows snapping of the edges of targets during resize\\n * interactions.\\n *\\n * @example\\n * interact(target).resizable({\\n *   snapEdges: {\\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\\n *   },\\n * })\\n *\\n * interact(target).resizable({\\n *   snapEdges: {\\n *     targets: [\\n *       interact.snappers.grid({\\n *        top: 50,\\n *        left: 50,\\n *        bottom: 100,\\n *        right: 100,\\n *       }),\\n *     ],\\n *   },\\n * })\\n */","meta":{"filename":"edges.ts","lineno":1,"columnno":0,"path":"/tmp/tmp.MpY2rj6Wz0/modifiers/snap","code":{},"shortpath":"/modifiers/snap/edges.ts"},"kind":"module","name":"modifiers/snapEdges","description":"<p>This module allows snapping of the edges of targets during resize\\ninteractions.</p>","examples":[{"caption":"","code":"interact(target).resizable({\\n  snapEdges: {\\n    targets: [interact.snappers.grid({ x: 100, y: 50 })],\\n  },\\n})\\n\\ninteract(target).resizable({\\n  snapEdges: {\\n    targets: [\\n      interact.snappers.grid({\\n       top: 50,\\n       left: 50,\\n       bottom: 100,\\n       right: 100,\\n      }),\\n    ],\\n  },\\n})"}],"longname":"module:modifiers/snapEdges","___id":"T000002R007030","___s":true,"attribs":"","id":"modifiers/snapEdges","ancestors":[]}]},{"kind":"package","longname":"package:undefined","files":["/tmp/tmp.MpY2rj6Wz0/actions/drag/plugin.ts","/tmp/tmp.MpY2rj6Wz0/actions/drop/DropEvent.ts","/tmp/tmp.MpY2rj6Wz0/actions/drop/plugin.ts","/tmp/tmp.MpY2rj6Wz0/actions/gesture/plugin.ts","/tmp/tmp.MpY2rj6Wz0/actions/node_modules/@interactjs/interact/index.ts","/tmp/tmp.MpY2rj6Wz0/actions/plugin.ts","/tmp/tmp.MpY2rj6Wz0/actions/resize/plugin.ts","/tmp/tmp.MpY2rj6Wz0/arrange/plugin.ts","/tmp/tmp.MpY2rj6Wz0/auto-scroll/node_modules/@interactjs/interact/index.ts","/tmp/tmp.MpY2rj6Wz0/auto-scroll/plugin.ts","/tmp/tmp.MpY2rj6Wz0/auto-start/base.ts","/tmp/tmp.MpY2rj6Wz0/auto-start/dragAxis.ts","/tmp/tmp.MpY2rj6Wz0/auto-start/hold.ts","/tmp/tmp.MpY2rj6Wz0/auto-start/InteractableMethods.ts","/tmp/tmp.MpY2rj6Wz0/auto-start/node_modules/@interactjs/interact/index.ts","/tmp/tmp.MpY2rj6Wz0/auto-start/plugin.ts","/tmp/tmp.MpY2rj6Wz0/clone/plugin.ts","/tmp/tmp.MpY2rj6Wz0/core/BaseEvent.ts","/tmp/tmp.MpY2rj6Wz0/core/defaultOptions.ts","/tmp/tmp.MpY2rj6Wz0/core/Eventable.ts","/tmp/tmp.MpY2rj6Wz0/core/events.ts","/tmp/tmp.MpY2rj6Wz0/core/Interactable.ts","/tmp/tmp.MpY2rj6Wz0/core/interactablePreventDefault.ts","/tmp/tmp.MpY2rj6Wz0/core/InteractableSet.ts","/tmp/tmp.MpY2rj6Wz0/core/InteractEvent.ts","/tmp/tmp.MpY2rj6Wz0/core/Interaction.ts","/tmp/tmp.MpY2rj6Wz0/core/interactionFinder.ts","/tmp/tmp.MpY2rj6Wz0/core/interactions.ts","/tmp/tmp.MpY2rj6Wz0/core/InteractStatic.ts","/tmp/tmp.MpY2rj6Wz0/core/isNonNativeEvent.ts","/tmp/tmp.MpY2rj6Wz0/core/PointerInfo.ts","/tmp/tmp.MpY2rj6Wz0/core/scope.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/node_modules/@interactjs/interact/index.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/node_modules/@interactjs/utils/arr.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/node_modules/@interactjs/utils/browser.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/node_modules/@interactjs/utils/clone.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/node_modules/@interactjs/utils/displace.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/node_modules/@interactjs/utils/domObjects.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/node_modules/@interactjs/utils/domUtils.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/node_modules/@interactjs/utils/exchange.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/node_modules/@interactjs/utils/extend.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/node_modules/@interactjs/utils/getOriginXY.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/node_modules/@interactjs/utils/hypot.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/node_modules/@interactjs/utils/is.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/node_modules/@interactjs/utils/isWindow.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/node_modules/@interactjs/utils/misc.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/node_modules/@interactjs/utils/normalizeListeners.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/node_modules/@interactjs/utils/pointerExtend.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/node_modules/@interactjs/utils/pointerUtils.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/node_modules/@interactjs/utils/raf.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/node_modules/@interactjs/utils/rect.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/node_modules/@interactjs/utils/window.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/plugin.ts","/tmp/tmp.MpY2rj6Wz0/dev-tools/visualizer/plugin.ts","/tmp/tmp.MpY2rj6Wz0/feedback/plugin.ts","/tmp/tmp.MpY2rj6Wz0/iframes/plugin.ts","/tmp/tmp.MpY2rj6Wz0/inertia/node_modules/@interactjs/interact/index.ts","/tmp/tmp.MpY2rj6Wz0/inertia/node_modules/@interactjs/offset/plugin.ts","/tmp/tmp.MpY2rj6Wz0/inertia/plugin.ts","/tmp/tmp.MpY2rj6Wz0/interact/index.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/core/BaseEvent.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/core/defaultOptions.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/core/Eventable.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/core/events.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/core/Interactable.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/core/interactablePreventDefault.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/core/InteractableSet.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/core/InteractEvent.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/core/Interaction.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/core/interactionFinder.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/core/interactions.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/core/InteractStatic.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/core/isNonNativeEvent.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/core/PointerInfo.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/core/scope.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/utils/arr.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/utils/browser.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/utils/clone.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/utils/displace.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/utils/domObjects.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/utils/domUtils.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/utils/exchange.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/utils/extend.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/utils/getOriginXY.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/utils/hypot.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/utils/is.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/utils/isWindow.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/utils/misc.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/utils/normalizeListeners.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/utils/pointerExtend.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/utils/pointerUtils.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/utils/raf.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/utils/rect.ts","/tmp/tmp.MpY2rj6Wz0/interact/node_modules/@interactjs/utils/window.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/index.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/actions/plugin.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/arrange/plugin.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/auto-scroll/plugin.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/auto-start/base.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/auto-start/dragAxis.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/auto-start/hold.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/auto-start/InteractableMethods.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/auto-start/plugin.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/clone/plugin.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/core/BaseEvent.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/core/defaultOptions.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/core/Eventable.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/core/events.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/core/Interactable.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/core/interactablePreventDefault.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/core/InteractableSet.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/core/InteractEvent.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/core/Interaction.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/core/interactionFinder.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/core/interactions.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/core/InteractStatic.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/core/isNonNativeEvent.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/core/PointerInfo.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/core/scope.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/dev-tools/plugin.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/feedback/plugin.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/inertia/plugin.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/interact/index.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/modifiers/all.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/modifiers/aspectRatio.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/modifiers/avoid.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/modifiers/base.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/modifiers/Modification.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/modifiers/noop.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/modifiers/plugin.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/modifiers/rubberband.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/modifiers/spring.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/modifiers/transform.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/multi-target/plugin.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/offset/plugin.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/pointer-events/base.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/pointer-events/holdRepeat.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/pointer-events/interactableTargets.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/pointer-events/plugin.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/pointer-events/PointerEvent.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/react/plugin.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/reflow/plugin.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/utils/arr.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/utils/browser.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/utils/clone.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/utils/displace.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/utils/domObjects.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/utils/domUtils.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/utils/exchange.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/utils/extend.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/utils/getOriginXY.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/utils/hypot.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/utils/is.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/utils/isWindow.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/utils/misc.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/utils/normalizeListeners.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/utils/pointerExtend.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/utils/pointerUtils.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/utils/raf.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/utils/rect.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/utils/window.ts","/tmp/tmp.MpY2rj6Wz0/interactjs/node_modules/@interactjs/vue/plugin.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/all.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/aspectRatio.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/avoid.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/base.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/Modification.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/node_modules/@interactjs/interact/index.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/node_modules/@interactjs/snappers/all.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/node_modules/@interactjs/snappers/edgeTarget.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/node_modules/@interactjs/snappers/elements.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/node_modules/@interactjs/snappers/grid.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/node_modules/@interactjs/snappers/plugin.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/noop.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/plugin.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/restrict/edges.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/restrict/pointer.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/restrict/rect.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/restrict/size.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/rubberband.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/snap/edges.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/snap/pointer.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/snap/size.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/spring.ts","/tmp/tmp.MpY2rj6Wz0/modifiers/transform.ts","/tmp/tmp.MpY2rj6Wz0/multi-target/plugin.ts","/tmp/tmp.MpY2rj6Wz0/offset/node_modules/@interactjs/interact/index.ts","/tmp/tmp.MpY2rj6Wz0/offset/plugin.ts","/tmp/tmp.MpY2rj6Wz0/pointer-events/base.ts","/tmp/tmp.MpY2rj6Wz0/pointer-events/holdRepeat.ts","/tmp/tmp.MpY2rj6Wz0/pointer-events/interactableTargets.ts","/tmp/tmp.MpY2rj6Wz0/pointer-events/node_modules/@interactjs/interact/index.ts","/tmp/tmp.MpY2rj6Wz0/pointer-events/plugin.ts","/tmp/tmp.MpY2rj6Wz0/pointer-events/PointerEvent.ts","/tmp/tmp.MpY2rj6Wz0/react/plugin.ts","/tmp/tmp.MpY2rj6Wz0/reflow/node_modules/@interactjs/interact/index.ts","/tmp/tmp.MpY2rj6Wz0/reflow/plugin.ts","/tmp/tmp.MpY2rj6Wz0/snappers/all.ts","/tmp/tmp.MpY2rj6Wz0/snappers/edgeTarget.ts","/tmp/tmp.MpY2rj6Wz0/snappers/elements.ts","/tmp/tmp.MpY2rj6Wz0/snappers/grid.ts","/tmp/tmp.MpY2rj6Wz0/snappers/plugin.ts","/tmp/tmp.MpY2rj6Wz0/types/index.ts","/tmp/tmp.MpY2rj6Wz0/types/NativePointerEventType.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/actions/plugin.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/arrange/plugin.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/auto-scroll/plugin.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/auto-start/base.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/auto-start/dragAxis.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/auto-start/hold.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/auto-start/InteractableMethods.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/auto-start/plugin.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/core/BaseEvent.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/core/defaultOptions.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/core/Eventable.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/core/events.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/core/Interactable.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/core/interactablePreventDefault.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/core/InteractableSet.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/core/InteractEvent.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/core/Interaction.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/core/interactionFinder.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/core/interactions.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/core/InteractStatic.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/core/isNonNativeEvent.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/core/PointerInfo.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/core/scope.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/dev-tools/plugin.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/inertia/plugin.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/interact/index.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/interactjs/index.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/modifiers/all.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/modifiers/aspectRatio.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/modifiers/avoid.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/modifiers/base.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/modifiers/Modification.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/modifiers/noop.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/modifiers/plugin.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/modifiers/rubberband.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/modifiers/spring.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/modifiers/transform.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/pointer-events/base.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/pointer-events/holdRepeat.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/pointer-events/interactableTargets.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/pointer-events/plugin.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/pointer-events/PointerEvent.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/reflow/plugin.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/snappers/all.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/snappers/edgeTarget.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/snappers/elements.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/snappers/grid.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/snappers/plugin.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/utils/arr.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/utils/browser.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/utils/clone.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/utils/displace.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/utils/domObjects.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/utils/domUtils.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/utils/exchange.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/utils/extend.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/utils/getOriginXY.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/utils/hypot.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/utils/is.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/utils/isWindow.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/utils/misc.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/utils/normalizeListeners.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/utils/pointerExtend.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/utils/pointerUtils.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/utils/raf.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/utils/rect.ts","/tmp/tmp.MpY2rj6Wz0/types/node_modules/@interactjs/utils/window.ts","/tmp/tmp.MpY2rj6Wz0/utils/arr.ts","/tmp/tmp.MpY2rj6Wz0/utils/browser.ts","/tmp/tmp.MpY2rj6Wz0/utils/clone.ts","/tmp/tmp.MpY2rj6Wz0/utils/displace.ts","/tmp/tmp.MpY2rj6Wz0/utils/domObjects.ts","/tmp/tmp.MpY2rj6Wz0/utils/domUtils.ts","/tmp/tmp.MpY2rj6Wz0/utils/exchange.ts","/tmp/tmp.MpY2rj6Wz0/utils/extend.ts","/tmp/tmp.MpY2rj6Wz0/utils/getOriginXY.ts","/tmp/tmp.MpY2rj6Wz0/utils/hypot.ts","/tmp/tmp.MpY2rj6Wz0/utils/is.ts","/tmp/tmp.MpY2rj6Wz0/utils/isWindow.ts","/tmp/tmp.MpY2rj6Wz0/utils/misc.ts","/tmp/tmp.MpY2rj6Wz0/utils/normalizeListeners.ts","/tmp/tmp.MpY2rj6Wz0/utils/pointerExtend.ts","/tmp/tmp.MpY2rj6Wz0/utils/pointerUtils.ts","/tmp/tmp.MpY2rj6Wz0/utils/raf.ts","/tmp/tmp.MpY2rj6Wz0/utils/rect.ts","/tmp/tmp.MpY2rj6Wz0/utils/window.ts","/tmp/tmp.MpY2rj6Wz0/vue/plugin.ts"],"___id":"T000002R010660","___s":true,"attribs":"","id":"package:","ancestors":[]},{"comment":"/**\\n   * Prevent the default behaviour of the original Event\\n   */","meta":{"range":[1608,1671],"filename":"PointerEvent.ts","lineno":77,"columnno":2,"path":"interactjs/node_modules/@interactjs/pointer-events","code":{"id":"astnode100054077","name":"preventDefault","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/interactjs/node_modules/@interactjs/pointer-events/PointerEvent.ts"},"description":"<p>Prevent the default behaviour of the original Event</p>","name":"preventDefault","longname":"preventDefault","kind":"function","scope":"global","params":[],"___id":"T000002R005988","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"preventDefault","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * Prevent the default behaviour of the original Event\\n   */","meta":{"range":[1608,1671],"filename":"PointerEvent.ts","lineno":77,"columnno":2,"path":"pointer-events","code":{"id":"astnode100066000","name":"preventDefault","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/pointer-events/PointerEvent.ts"},"description":"<p>Prevent the default behaviour of the original Event</p>","name":"preventDefault","longname":"preventDefault","kind":"function","scope":"global","params":[],"___id":"T000002R007513","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"preventDefault","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]},{"comment":"/**\\n   * Prevent the default behaviour of the original Event\\n   */","meta":{"range":[1608,1671],"filename":"PointerEvent.ts","lineno":77,"columnno":2,"path":"types/node_modules/@interactjs/pointer-events","code":{"id":"astnode100084945","name":"preventDefault","type":"MethodDefinition","paramnames":[]},"vars":{"":null},"shortpath":"/types/node_modules/@interactjs/pointer-events/PointerEvent.ts"},"description":"<p>Prevent the default behaviour of the original Event</p>","name":"preventDefault","longname":"preventDefault","kind":"function","scope":"global","params":[],"___id":"T000002R009668","___s":true,"attribs":"<span class=\\"type-signature\\"></span>","id":"preventDefault","signature":"<span class=\\"signature\\">()</span><span class=\\"type-signature\\"></span>","ancestors":[]}]')}}]);
//# sourceMappingURL=doclets.json.0efd5184.js.map